// Created by Microsoft (R) C/C++ Compiler Version 14.00.24215.1 (d1490ccb).
//
// c:\k3dasyncengine\sample\c++\k3dasyncengineexample\debug\k3dasyncengine.tlh
//
// C++ source equivalent of Win32 type library ../dll/x86/debug/K3DAsyncEngine.dll
// compiler-generated file created 05/14/20 at 13:50:46 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace K3DAsyncEngineLib {

//
// Forward references and typedefs
//

struct __declspec(uuid("2b7f2d64-3a8d-401c-be73-5c0747ba342c"))
/* LIBID */ __K3DAsyncEngineLib;
struct /* coclass */ KAEngine;
struct __declspec(uuid("0078871c-2181-4339-8a75-3d08606a5f83"))
/* dual interface */ IKAEngine;
struct __declspec(uuid("c21817db-c0d3-4647-8d85-027338dcf832"))
/* dual interface */ IKAEventHandler;
struct __declspec(uuid("bfd73274-ac76-437b-af85-35682543f44c"))
/* dual interface */ IKAScene;
struct __declspec(uuid("b138b515-505b-4c7b-a3e1-f82782005ecf"))
/* dual interface */ IKAObject;
struct sKFont;
enum eKFontType;
struct sKMaterial;
enum eKMaterialType;
struct sKLightColor;
enum eKLightColorType;
struct sKLightAttribute;
enum eKLight;
enum eKLightType;
struct sKStyleColor;
enum eKStyleType;
struct sKFaceAttribute;
enum eKFaceParam;
struct sKEdgeAttribute;
enum eKEdgeParam;
struct sKShadowAttribute;
enum eKShadowParam;
struct sKObjectAttribute;
enum eKObjectAttribute;
enum eKValueType;
enum eKAnimationType;
enum eKVectorType;
enum eKAngleKey;
enum eKCropKey;
struct sKVector3f;
enum eKKeyFrameType;
enum eKKeyInterpolationType;
enum eKEffectType;
enum eKTextureTarget;
struct sKVideoPlayInfo;
enum eKImageType;
enum eKMaterialTarget;
struct __declspec(uuid("a8ea96b9-dea7-457a-9772-15f4c8941fae"))
/* dual interface */ IKAMaterial;
struct sKColor;
struct __declspec(uuid("a3b32780-d5ba-4760-a8f8-746e3c3e1f6e"))
/* dual interface */ IKATexture;
enum eKTextureType;
enum eKTextureBlending;
enum eKTextureFilter;
enum eKTextureAddress;
struct __declspec(uuid("e2fc3835-637c-4cee-a475-fb459cedbea1"))
/* dual interface */ IKAEffect;
struct sKEffectWipe;
enum eKEffectTarget;
enum eKTimingType;
enum eKWipeShape;
enum eKPosition;
struct sKColor4f;
enum eKSheenBlending;
struct sKEffectPush;
enum eKPushDirection;
struct sKVector2f;
struct sKEffectTransform;
struct sKEffectCurl;
enum eKCurlDirection;
enum eKCurlFace;
struct sKEffectRipple;
enum eKRippleShape;
struct sKEffectParticle;
struct sKVector2i;
enum eKParticleShape;
enum eKOrder;
struct sKEffectFade;
enum eKMatteType;
struct sKEffectDistortion;
struct sKEffectBlink;
enum eKBlendType;
struct sKEffectCrop;
struct sKRectf;
struct sKEffectBlur;
enum eKBlurType;
enum eKGradationType;
struct sKColorTickf;
struct sKAlphaTick;
struct sKEffectColor;
enum eKColorType;
enum eKShapeType;
struct sKEffectSidefade;
struct sKEffectCutOut;
struct sKBackground;
enum eKBackgroundType;
enum eKSceneEffectType;
enum eKChangeOutType;
enum eKBackgroundChangeType;
enum eKBackgroundPauseType;
struct __declspec(uuid("48c5f034-5e76-4047-9afd-f6f54acdfe5b"))
/* dual interface */ IKACamera;
struct sKVideoFormat;
struct sKSize;
enum eKFrameRate;
enum eKScan;
enum eKCodec;
enum eKOutputType;
struct sKChart;
enum eKChartType;
struct sKVariable;
enum eKObjectClass;
struct sKChartDataTable;
enum eKGroupType;
enum eKPlayAudioType;
struct __declspec(uuid("14083c84-4b17-41bf-ae1a-206f13c0e5c5"))
/* dual interface */ IKAScenePlayer;
struct sKLayerInfo;
enum eKCameraType;
enum eKVideoFormat;
struct /* coclass */ KAEventHandler;
struct /* coclass */ KAScene;
struct /* coclass */ KAScenePlayer;
struct /* coclass */ KAObject;
struct /* coclass */ KAMaterial;
struct /* coclass */ KATexture;
struct /* coclass */ KAStruct;
struct __declspec(uuid("7e92987a-07fb-45d3-906d-1c112b3db64d"))
/* dual interface */ IKAStruct;
struct /* coclass */ KAEffect;
struct /* coclass */ KACamera;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IKATexture, __uuidof(IKATexture));
_COM_SMARTPTR_TYPEDEF(IKAMaterial, __uuidof(IKAMaterial));
_COM_SMARTPTR_TYPEDEF(IKAEffect, __uuidof(IKAEffect));
_COM_SMARTPTR_TYPEDEF(IKAObject, __uuidof(IKAObject));
_COM_SMARTPTR_TYPEDEF(IKACamera, __uuidof(IKACamera));
_COM_SMARTPTR_TYPEDEF(IKAScene, __uuidof(IKAScene));
_COM_SMARTPTR_TYPEDEF(IKAEventHandler, __uuidof(IKAEventHandler));
_COM_SMARTPTR_TYPEDEF(IKAScenePlayer, __uuidof(IKAScenePlayer));
_COM_SMARTPTR_TYPEDEF(IKAEngine, __uuidof(IKAEngine));
_COM_SMARTPTR_TYPEDEF(IKAStruct, __uuidof(IKAStruct));

//
// Type library items
//

struct __declspec(uuid("d756cdbe-aa31-42b2-9cc7-018753ca61bf"))
KAEngine;
    // [ default ] interface IKAEngine

enum eKFontType
{
    FONT_PARAM_TYPEFACE = 1,
    FONT_PARAM_WIDTH = 2,
    FONT_PARAM_HEIGHT = 4,
    FONT_PARAM_KERNING = 8,
    FONT_PARAM_ALL = 15
};

#pragma pack(push, 4)

struct sKFont
{
    enum eKFontType ParamType;
    BSTR FontName;
    int Width;
    int Height;
    int Kerning;
};

#pragma pack(pop)

enum eKMaterialType
{
    MATERIAL_TYPE_DIFFUSE = 0,
    MATERIAL_TYPE_AMBIENT = 1,
    MATERIAL_TYPE_SPECULAR = 2,
    MATERIAL_TYPE_EMISSIVE = 3,
    MATERIAL_TYPE_TRANSPARENCY = 4,
    MATERIAL_TYPE_NORMAL = 5,
    MATERIAL_TYPE_REFLECTION = 6,
    MATERIAL_TYPE_REFRACTION = 7
};

#pragma pack(push, 4)

struct sKMaterial
{
    enum eKMaterialType Type;
    int R;
    int G;
    int B;
    int A;
};

#pragma pack(pop)

enum eKLightColorType
{
    LIGHT_COLOR_AMBIENT = 0,
    LIGHT_COLOR_DIFFUSE = 1,
    LIGHT_COLOR_SPECULAR = 2
};

#pragma pack(push, 4)

struct sKLightColor
{
    enum eKLightColorType ColorType;
    int R;
    int G;
    int B;
};

#pragma pack(pop)

enum eKLight
{
    LIGHT_PARAM_TYPE = 1,
    LIGHT_PARAM_ENABLED = 2,
    LIGHT_PARAM_RANGE = 4,
    LIGHT_PARAM_INTENSITY = 8,
    LIGHT_PARAM_ATTENUATION = 16
};

enum eKLightType
{
    LIGHT_TYPE_DIRECTIONAL = 0,
    LIGHT_TYPE_POINT = 1
};

#pragma pack(push, 4)

struct sKLightAttribute
{
    enum eKLight ParamType;
    enum eKLightType LightType;
    long Enabled;
    float Range;
    float Intensity;
    float Attenuation;
};

#pragma pack(pop)

enum eKStyleType
{
    STYLE_TYPE_FACE = 0,
    STYLE_TYPE_EDGE = 1,
    STYLE_TYPE_SHADOW = 2,
    STYLE_TYPE_UNDERLINE = 3,
    STYLE_TYPE_FRAME = 4
};

#pragma pack(push, 4)

struct sKStyleColor
{
    int Order;
    enum eKStyleType Type;
    unsigned char R;
    unsigned char G;
    unsigned char B;
    unsigned char A;
};

#pragma pack(pop)

enum eKFaceParam
{
    FACE_PARAM_THICKNESS = 1,
    FACE_PARAM_EMBOSS = 2,
    FACE_PARAM_ALL = 3
};

#pragma pack(push, 4)

struct sKFaceAttribute
{
    enum eKFaceParam ParamType;
    int Order;
    int Thickness;
    int Emboss;
};

#pragma pack(pop)

enum eKEdgeParam
{
    EDGE_PARAM_SIZE = 1,
    EDGE_PARAM_BLUR = 2,
    EDGE_PARAM_INNER = 4,
    EDGE_PARAM_SIZE_BLUR = 3,
    EDGE_PARAM_BLUR_INNER = 6,
    EDGE_PARAM_SIZE_INNER = 5,
    EDGE_PARAM_ALL = 7
};

#pragma pack(push, 4)

struct sKEdgeAttribute
{
    enum eKEdgeParam ParamType;
    int Order;
    int Size;
    int Blur;
    int Inner;
};

#pragma pack(pop)

enum eKShadowParam
{
    SHADOW_PARAM_SIZE = 1,
    SHADOW_PARAM_BLUR = 2,
    SHADOW_PARAM_ANGLE = 4,
    SHADOW_PARAM_OFFSET = 8,
    SHADOW_PARAM_SIZE_BLUR = 3,
    SHADOW_PARAM_SIZE_ANGE = 5,
    SHADOW_PARAM_SIZE_OFFSET = 9,
    SHADOW_PARAM_BLUR_ANGLE = 6,
    SHADOW_PARAM_BLUR_OFFSET = 10,
    SHADOW_PARAM_ANLGE_OFFSET = 12,
    SHADOW_PARAM_ALL = 15
};

#pragma pack(push, 4)

struct sKShadowAttribute
{
    enum eKShadowParam ParamType;
    int Order;
    int Size;
    int Blur;
    int Angle;
    int Offset;
};

#pragma pack(pop)

enum eKObjectAttribute
{
    ATTR_OBJECT_BEGIN = 0,
    ATTR_OBJECT_BASE_ATTR_BEGIN = 1,
    ATTR_NAME = 2,
    ATTR_VARIABLE_NAME = 3,
    ATTR_HIDE = 4,
    ATTR_LOCK = 5,
    ATTR_3D = 6,
    ATTR_SHAPE_BEGIN = 7,
    ATTR_SHAPE_3D_MODE = 8,
    ATTR_SHAPE_LIGHT_ON = 9,
    ATTR_SHAPE_ROTATION = 10,
    ATTR_SHAPE_SHEAR_X = 11,
    ATTR_SHAPE_SHEAR_Y = 12,
    ATTR_SHAPE_FILL_ENABLE = 13,
    ATTR_SHAPE_FILL_COLOR = 14,
    ATTR_SHAPE_NON_ZERO_WINDIND_RULE = 15,
    ATTR_SHAPE_OUTLINE_ENABLE = 16,
    ATTR_SHAPE_OUTLINE_COLOR = 17,
    ATTR_SHAPE_OUTLINE_THICKNESS = 18,
    ATTR_SHAPE_LINE_JOIN = 19,
    ATTR_SHAPE_START_CAP = 20,
    ATTR_SHAPE_END_CAP = 21,
    ATTR_SHAPE_DASH_STYLE = 22,
    ATTR_SHAPE_DASH_CAP = 23,
    ATTR_SHAPE_END = 24,
    ATTR_ENABLE_SHADOW = 25,
    ATTR_BACK_FACE_CULLING = 26,
    ATTR_LAYER_ORDER = 27,
    ATTR_MASK = 28,
    ATTR_ALPHA_KEY_MASK = 29,
    ATTR_LOCAL_PROJECTION = 30,
    ATTR_LOCAL_VIEW_OFFSET = 31,
    ATTR_LOCAL_VIEW_OFFSET_X = 32,
    ATTR_LOCAL_VIEW_OFFSET_Y = 33,
    ATTR_LOCAL_VIEW_OFFSET_Z = 34,
    ATTR_BLENDING_MODE = 35,
    ATTR_ATTACH_TYPE = 36,
    ATTR_ATTACH_OFFSET = 37,
    ATTR_ATTACH_OFFSET_X = 38,
    ATTR_ATTACH_OFFSET_Y = 39,
    ATTR_ATTACH_OFFSET_Z = 40,
    ATTR_ATTACH_RADIUS_OFFSET = 41,
    ATTR_INHERIT_ROTATION = 42,
    ATTR_INHERIT_SCALE = 43,
    ATTR_CROP_BEGIN = 44,
    ATTR_CROP_LEFT = 45,
    ATTR_CROP_RIGHT = 46,
    ATTR_CROP_TOP = 47,
    ATTR_CROP_BOTTOM = 48,
    ATTR_CROP_END = 49,
    ATTR_PATH_ANIMATION_BEGIN = 50,
    ATTR_PATH_ANIMATION_ENABLE = 51,
    ATTR_PATH_ANIMATION_PATH_ID = 52,
    ATTR_PATH_ANIMATION_POSITION = 53,
    ATTR_PATH_ANIMATION_TANGENTIAL = 54,
    ATTR_PATH_ANIMATION_UNIFORM = 55,
    ATTR_PATH_ANIMATION_ENABLE_ROTATION = 56,
    ATTR_PATH_ANIMATION_ENABLE_SCALE = 57,
    ATTR_PATH_ANIMATION_ENABLE_COLOR = 58,
    ATTR_PATH_ANIMATION_END = 59,
    ATTR_SIZE = 60,
    ATTR_SIZE_X = 61,
    ATTR_SIZE_Y = 62,
    ATTR_SIZE_Z = 63,
    ATTR_SIZE_XY = 64,
    ATTR_SIZE_LEFT = 65,
    ATTR_SIZE_RIGHT = 66,
    ATTR_SIZE_BOTTOM = 67,
    ATTR_SIZE_TOP = 68,
    ATTR_SIZE_BACK = 69,
    ATTR_SIZE_FRONT = 70,
    ATTR_SIZE_LEFT_TOP = 71,
    ATTR_SIZE_LEFT_BOTTOM = 72,
    ATTR_SIZE_RIGHT_TOP = 73,
    ATTR_SIZE_RIGHT_BOTTOM = 74,
    ATTR_SIZE_WORLD_COORD = 75,
    ATTR_LINK_DATA_BEGIN = 76,
    ATTR_LINK_DATA_ENABLE = 77,
    ATTR_LINK_DATA_TYPE = 78,
    ATTR_LINK_DATA_UPDATE_MODE = 79,
    ATTR_LINK_DATA_IN_TRIGGER = 80,
    ATTR_LINK_DATA_OUT_TRIGGER = 81,
    ATTR_LINK_DATA_AUTO_IN = 82,
    ATTR_LINK_DATA_AUTO_OUT = 83,
    ATTR_LINK_DATA_UPDATE_INFINITE_LOOP = 84,
    ATTR_LINK_DATA_UPDATE_DURATION = 85,
    ATTR_LINK_DATA_UPDATE_INTERVAL = 86,
    ATTR_LINK_DATA_UPDATE_REPEAT = 87,
    ATTR_LINK_DATA_FILE_NAME = 88,
    ATTR_LINK_DATA_FILE_SYMBOL_TYPE = 89,
    ATTR_LINK_DATA_FILE_USER_SYMBOL = 90,
    ATTR_LINK_DATA_FILE_UPDATE_DURATION = 91,
    ATTR_LINK_DATA_FILE_UPDATE_USE = 92,
    ATTR_LINK_DATA_END = 93,
    ATTR_OBJECT_BASE_ATTR_END = 94,
    ATTR_OBJECT_END = 95,
    ATTR_SUBOBJECT_BEGIN = 96,
    ATTR_RECT_BEGIN = 97,
    ATTR_RECT_WIDTH = 98,
    ATTR_RECT_HEIGHT = 99,
    ATTR_RECT_INNER = 100,
    ATTR_RECT_ROUNDNESS = 101,
    ATTR_RECT_CIRCULAR = 102,
    ATTR_RECT_BYTHICKNESS = 103,
    ATTR_RECT_END = 104,
    ATTR_CIRCLE_BEGIN = 105,
    ATTR_CIRCLE_WIDTH = 106,
    ATTR_CIRCLE_HEIGHT = 107,
    ATTR_CIRCLE_INNER = 108,
    ATTR_CIRCLE_STARTANGLE = 109,
    ATTR_CIRCLE_ENDANGLE = 110,
    ATTR_CIRCLE_BYTHICKNESS = 111,
    ATTR_CIRCLE_SLICED_BEVEL = 112,
    ATTR_CIRCLE_END = 113,
    ATTR_POLYGON_BEGIN = 114,
    ATTR_POLYGON_WIDTH = 115,
    ATTR_POLYGON_HEIGHT = 116,
    ATTR_POLYGON_INNER = 117,
    ATTR_POLYGON_ANGLECOUNT = 118,
    ATTR_POLYGON_ROUNDNESS = 119,
    ATTR_POLYGON_BYTHICKNESS = 120,
    ATTR_POLYGON_END = 121,
    ATTR_PATH_SHAPE_BEGIN = 122,
    ATTR_PATH_SHAPE_POINT = 123,
    ATTR_PATH_SHAPE_OUTLINE = 124,
    ATTR_PATH_SHAPE_THICKNESS = 125,
    ATTR_PATH_SHAPE_END = 126,
    ATTR_SMART_BEGIN = 127,
    ATTR_SMART_TYPE = 128,
    ATTR_SMART_WIDTH = 129,
    ATTR_SMART_HEIGHT = 130,
    ATTR_SMART_STAR = 131,
    ATTR_SMART_STAR_DENT_RATE = 132,
    ATTR_SMART_STAR_INNER_RATE = 133,
    ATTR_SMART_ARROW = 134,
    ATTR_SMART_ARROW_LINETHICKNESS = 135,
    ATTR_SMART_ARROW_HEADLENGTH = 136,
    ATTR_SMART_TRIANGLE_DIRECTION = 137,
    ATTR_SMART_TRAPEZOID_SIZE_RATE_TOP = 138,
    ATTR_SMART_TRAPEZOID_SIZE_RATE_BOTTOM = 139,
    ATTR_SMART_TRAPEZOID_SIZE_RATE_LEFT = 140,
    ATTR_SMART_TRAPEZOID_SIZE_RATE_RIGHT = 141,
    ATTR_SMART_END = 142,
    ATTR_IMAGE_BEGIN = 143,
    ATTR_IMAGE_WIDTH = 144,
    ATTR_IMAGE_HEIGHT = 145,
    ATTR_IMAGE_ORIGINAL_SIZE = 146,
    ATTR_IMAGE_FILE_NAME = 147,
    ATTR_IMAGE_FILE_TYPE = 148,
    ATTR_IMAGE_PLAYINFO = 149,
    ATTR_IMAGE_PLAYINFO_TOTAL_FRAMES = 150,
    ATTR_IMAGE_PLAYINFO_START_FRAME = 151,
    ATTR_IMAGE_PLAYINFO_STOP_FRAME = 152,
    ATTR_IMAGE_PLAYINFO_REPEAT_START_FRAME = 153,
    ATTR_IMAGE_PLAYINFO_REPEAT_STOP_FRAME = 154,
    ATTR_IMAGE_PLAYINFO_LOOP_COUNT = 155,
    ATTR_IMAGE_PLAYINFO_LOOP_INFINITE = 156,
    ATTR_IMAGE_END = 157,
    ATTR_BOX_BEGIN = 158,
    ATTR_BOX_SIZE = 159,
    ATTR_BOX_WIDTH = 160,
    ATTR_BOX_HEIGHT = 161,
    ATTR_BOX_DEPTH = 162,
    ATTR_BOX_SEGMENT = 163,
    ATTR_BOX_SEGMENT_X = 164,
    ATTR_BOX_SEGMENT_Y = 165,
    ATTR_BOX_SEGMENT_Z = 166,
    ATTR_BOX_HOLE = 167,
    ATTR_BOX_HOLE_WIDTH = 168,
    ATTR_BOX_HOLE_DEPTH = 169,
    ATTR_BOX_CHAMFER_RADIUS = 170,
    ATTR_BOX_CHAMFER_SEGMENT = 171,
    ATTR_BOX_HOLE_CHAMFER_ENABLED = 172,
    ATTR_BOX_END = 173,
    ATTR_PLANE_BEGIN = 174,
    ATTR_PLANE_SIZE = 175,
    ATTR_PLANE_WIDTH = 176,
    ATTR_PLANE_HEIGHT = 177,
    ATTR_PLANE_SEGMENT = 178,
    ATTR_PLANE_SEGMENT_X = 179,
    ATTR_PLANE_SEGMENT_Y = 180,
    ATTR_PLANE_REFLECTION = 181,
    ATTR_PLANE_REFLECTION_HIDE_PLANE = 182,
    ATTR_PLANE_REFLECTION_STRENGTH = 183,
    ATTR_PLANE_END = 184,
    ATTR_CYLINDER_BEGIN = 185,
    ATTR_CYLINDER_RADIUS = 186,
    ATTR_CYLINDER_HEIGHT = 187,
    ATTR_CYLINDER_INNER_RADIUS = 188,
    ATTR_CYLINDER_ANGLE_START = 189,
    ATTR_CYLINDER_ANGLE_END = 190,
    ATTR_CYLINDER_SEGMENT = 191,
    ATTR_CYLINDER_SEGMENT_X = 192,
    ATTR_CYLINDER_SEGMENT_Y = 193,
    ATTR_CYLINDER_CHAMFER_RADIUS = 194,
    ATTR_CYLINDER_CHAMFER_SEGMENT = 195,
    ATTR_CYLINDER_HOLE_CHAMFER_ENABLED = 196,
    ATTR_CYLINDER_END = 197,
    ATTR_SPHERE_BEGIN = 198,
    ATTR_SPHERE_RADIUS = 199,
    ATTR_SPHERE_HALFSPHERE = 200,
    ATTR_SPHERE_HALFSPHERE_BOTTOM = 201,
    ATTR_SPHERE_HALFSPHERE_TOP = 202,
    ATTR_SPHERE_ANGLE_START = 203,
    ATTR_SPHERE_ANGLE_END = 204,
    ATTR_SPHERE_SEGMENT = 205,
    ATTR_SPHERE_SEGMENT_X = 206,
    ATTR_SPHERE_SEGMENT_Y = 207,
    ATTR_SPHERE_END = 208,
    ATTR_CONE_BEGIN = 209,
    ATTR_CONE_RADIUS = 210,
    ATTR_CONE_HEIGHT = 211,
    ATTR_CONE_ANGLE_START = 212,
    ATTR_CONE_ANGLE_END = 213,
    ATTR_CONE_SEGMENT = 214,
    ATTR_CONE_SEGMENT_X = 215,
    ATTR_CONE_SEGMENT_Y = 216,
    ATTR_CONE_END = 217,
    ATTR_TORUS_BEGIN = 218,
    ATTR_TORUS_RADIUS = 219,
    ATTR_TORUS_OUTER_RADIUS = 220,
    ATTR_TORUS_THICK_RADIUS = 221,
    ATTR_TORUS_ANGLE_START = 222,
    ATTR_TORUS_ANGLE_END = 223,
    ATTR_TORUS_SEGMENT = 224,
    ATTR_TORUS_SEGMENT_X = 225,
    ATTR_TORUS_SEGMENT_Y = 226,
    ATTR_TORUS_END = 227,
    ATTR_ARRAY_BEGIN = 228,
    ATTR_ARRAY_TYPE = 229,
    ATTR_ARRAY_COPY_COUNT_X = 230,
    ATTR_ARRAY_COPY_COUNT_Y = 231,
    ATTR_ARRAY_COPY_COUNT_Z = 232,
    ATTR_ARRAY_WIDTH = 233,
    ATTR_ARRAY_HEIGHT = 234,
    ATTR_ARRAY_DEPTH = 235,
    ATTR_ARRAY_COPY_COUNT = 236,
    ATTR_ARRAY_RADIUS = 237,
    ATTR_ARRAY_START_ANGLE = 238,
    ATTR_ARRAY_END_ANGLE = 239,
    ATTR_ARRAY_END = 240,
    ATTR_CHART_BEGIN = 241,
    ATTR_CHART_TITLE = 242,
    ATTR_CHART_TITLE_X = 243,
    ATTR_CHART_TITLE_Y = 244,
    ATTR_CHART_CATEGORY_TITLE = 245,
    ATTR_CHART_TYPE = 246,
    ATTR_CHART_SUBTYPE = 247,
    ATTR_CHART_SHAPE = 248,
    ATTR_CHART_SHOW_COLUMN_LABEL = 249,
    ATTR_CHART_SHOW_X_LABEL = 250,
    ATTR_CHART_SHOW_Y_LABEL = 251,
    ATTR_CHART_SHOW_DATA_LABEL = 252,
    ATTR_CHART_SHOW_TITLE = 253,
    ATTR_CHART_SHOW_TITLE_X = 254,
    ATTR_CHART_SHOW_TITLE_Y = 255,
    ATTR_CHART_SHOW_CATEGORY = 256,
    ATTR_CHART_NUM_ROWS = 257,
    ATTR_CHART_NUM_COLUMNS = 258,
    ATTR_CHART_CELL_VALUE = 259,
    ATTR_CHART_STEP_BY_STEP = 260,
    ATTR_CHART_ANI_DATAGROUP = 261,
    ATTR_CHART_ANIMATE_ON = 262,
    ATTR_CHART_AXISFRAME_ON = 263,
    ATTR_CHART_ROWLABEL_OFFSET_X = 264,
    ATTR_CHART_ROWLABEL_OFFSET_Y = 265,
    ATTR_CHART_ROWLABEL_OFFSET_Z = 266,
    ATTR_CHART_PIE_SPLIT = 267,
    ATTR_CHART_PIE_EQUAL_SPEED = 268,
    ATTR_CHART_PIE_MAX_ANGLE = 269,
    ATTR_CHART_PIE_INNER_RATE = 270,
    ATTR_CHART_ANIFRAME = 271,
    ATTR_CHART_PIE_ANI_RELATIVERATE = 272,
    ATTR_CHART_SPACING_X = 273,
    ATTR_CHART_SPACING_Y = 274,
    ATTR_CHART_SPACING_Z = 275,
    ATTR_CHART_BAR_WIDTH = 276,
    ATTR_BAR_ANI_STEPBYSTEP = 277,
    ATTR_CHART_END = 278,
    ATTR_CAMERA_BEGIN = 279,
    ATTR_CAMERA_TYPE = 280,
    ATTR_CAMERA_NEAR_VIEW_PLANE_SIZE = 281,
    ATTR_CAMERA_NEAR_VIEW_PLANE_SIZE_X = 282,
    ATTR_CAMERA_NEAR_VIEW_PLANE_SIZE_Y = 283,
    ATTR_CAMERA_TARGET_DISTANCE = 284,
    ATTR_CAMERA_TARGET_POSITION = 285,
    ATTR_CAMERA_TARGET_POSITION_X = 286,
    ATTR_CAMERA_TARGET_POSITION_Y = 287,
    ATTR_CAMERA_TARGET_POSITION_Z = 288,
    ATTR_CAMERA_UP = 289,
    ATTR_CAMERA_UP_X = 290,
    ATTR_CAMERA_UP_Y = 291,
    ATTR_CAMERA_UP_Z = 292,
    ATTR_CAMERA_MOVE_SCENE_CAMERA = 293,
    ATTR_CAMERA_ORTHOGONAL_PROJECTION = 294,
    ATTR_CAMERA_END = 295,
    ATTR_FONT_BEGIN = 296,
    ATTR_FONT_TYPEFACE = 297,
    ATTR_FONT_WIDTH = 298,
    ATTR_FONT_HEIGHT = 299,
    ATTR_FONT_SIZE = 300,
    ATTR_FONT_SIZE_LINK = 301,
    ATTR_FONT_KERNING = 302,
    ATTR_FONT_AUTO_KERNING = 303,
    ATTR_FONT_SPACE_CHAR_RATIO = 304,
    ATTR_FONT_OFFSET_RATE_X = 305,
    ATTR_FONT_OFFSET_RATE_Y = 306,
    ATTR_FONT_ROTATION_Z = 307,
    ATTR_FONT_BOLD = 308,
    ATTR_FONT_ITALIC = 309,
    ATTR_FONT_FILL_EACH = 310,
    ATTR_FONT_END = 311,
    ATTR_PARAGRAPH_BEGIN = 312,
    ATTR_PARAGRAPH_VERTICAL = 313,
    ATTR_PARAGRAPH_ALIGN = 314,
    ATTR_PARAGRAPH_LEADING = 315,
    ATTR_PARAGRAPH_FITTING = 316,
    ATTR_PARAGRAPH_FIT_SIZE = 317,
    ATTR_PARAGRAPH_END = 318,
    ATTR_TEXT_BEGIN = 319,
    ATTR_TEXT_VERTICAL = 320,
    ATTR_TEXT_VERTICAL_ALIGN = 321,
    ATTR_TEXT_SYNC_CHAR_ANIMATION = 322,
    ATTR_TEXT_TYPING = 323,
    ATTR_TEXT_TYPING_DELAY = 324,
    ATTR_TEXT_VALUE = 325,
    ATTR_TEXT_CURVED = 326,
    ATTR_TEXT_CHAR_PATH_ANIMATION = 327,
    ATTR_CLOCK_BEGIN = 328,
    ATTR_CLOCK_FORMAT = 329,
    ATTR_CLOCK_PERIOD = 330,
    ATTR_CLOCK_TIME_ZONE = 331,
    ATTR_CLOCK_END = 332,
    ATTR_COUNTER_BEGIN = 333,
    ATTR_COUNTER_FORMAT = 334,
    ATTR_COUNTER_NUMBER = 335,
    ATTR_COUNTER_PERIOD = 336,
    ATTR_COUNTER_ADD_PLUS_SIGN = 337,
    ATTR_COUNTER_END = 338,
    ATTR_CHAR_ANIMATION_BEGIN = 339,
    ATTR_CHAR_ANIMATION_END = 340,
    ATTR_TEXT_END = 341,
    ATTR_ANALOG_CLOCK_BEGIN = 342,
    ATTR_ANALOG_CLOCK_WIDTH = 343,
    ATTR_ANALOG_CLOCK_HEIGHT = 344,
    ATTR_ANALOG_CLOCK_TIME_ZONE = 345,
    ATTR_HOUR_VISIBLE = 346,
    ATTR_HOUR_IMAGE_FILE_NAME = 347,
    ATTR_HOUR_USE_TEXTURE = 348,
    ATTR_HOUR_PIVOT = 349,
    ATTR_HOUR_LENGTH = 350,
    ATTR_HOUR_THICKNESS = 351,
    ATTR_MINUTE_VISIBLE = 352,
    ATTR_MINUTE_IMAGE_FILE_NAME = 353,
    ATTR_MINUTE_USE_TEXTURE = 354,
    ATTR_MINUTE_PIVOT = 355,
    ATTR_MINUTE_LENGTH = 356,
    ATTR_MINUTE_THICKNESS = 357,
    ATTR_SECOND_VISIBLE = 358,
    ATTR_SECOND_IMAGE_FILE_NAME = 359,
    ATTR_SECOND_USE_TEXTURE = 360,
    ATTR_SECOND_PIVOT = 361,
    ATTR_SECOND_LENGTH = 362,
    ATTR_SECOND_THICKNESS = 363,
    ATTR_ANALOG_CLOCK_END = 364,
    ATTR_PARTICLES_BEGIN = 365,
    ATTR_PARTICLES_EMITTER_BEGIN = 366,
    ATTR_PARTICLES_EMITTER_BIRTH_RATE = 367,
    ATTR_PARTICLES_EMITTER_GENERATED_WITHIN_PARENT_OBJECT_IMAGE = 368,
    ATTR_PARTICLES_EMITTER_SIZE = 369,
    ATTR_PARTICLES_EMITTER_SIZE_X = 370,
    ATTR_PARTICLES_EMITTER_SIZE_Y = 371,
    ATTR_PARTICLES_EMITTER_SIZE_Z = 372,
    ATTR_PARTICLES_EMITTER_RANGE_HORZ = 373,
    ATTR_PARTICLES_EMITTER_RANGE_VERT = 374,
    ATTR_PARTICLES_POSITION_ISOLATED = 375,
    ATTR_PARTICLES_EMITTER_END = 376,
    ATTR_PARTICLES_PARTICLE_BEGIN = 377,
    ATTR_PARTICLES_LIFETIME = 378,
    ATTR_PARTICLES_SIZE = 379,
    ATTR_PARTICLES_SIZE_X = 380,
    ATTR_PARTICLES_SIZE_Y = 381,
    ATTR_PARTICLES_SIZE_Z = 382,
    ATTR_PARTICLES_MOTION_VARIATION = 383,
    ATTR_PARTICLES_SPEED = 384,
    ATTR_PARTICLES_TILT_ALONG_PATH = 385,
    ATTR_PARTICLES_ROTATION = 386,
    ATTR_PARTICLES_WEIGHT = 387,
    ATTR_PARTICLES_IMAGE_USE_FIRST_CHILD_OBJECT = 388,
    ATTR_PARTICLES_IMAGE_FILE = 389,
    ATTR_PARTICLES_COLOR = 390,
    ATTR_PARTICLES_COLOR_R = 391,
    ATTR_PARTICLES_COLOR_G = 392,
    ATTR_PARTICLES_COLOR_B = 393,
    ATTR_PARTICLES_COLOR_OPACITY = 394,
    ATTR_PARTICLES_INTENSE = 395,
    ATTR_PARTICLES_PARTICLE_END = 396,
    ATTR_PARTICLES_VARIATION_BEGIN = 397,
    ATTR_PARTICLES_LIFETIME_VARIATION = 398,
    ATTR_PARTICLES_EQUIVALENT_SIZE_VARIATION = 399,
    ATTR_PARTICLES_SIZE_VARIATION = 400,
    ATTR_PARTICLES_SIZE_VARIATION_X = 401,
    ATTR_PARTICLES_SIZE_VARIATION_Y = 402,
    ATTR_PARTICLES_SIZE_VARIATION_Z = 403,
    ATTR_PARTICLES_SPEED_VARIATION = 404,
    ATTR_PARTICLES_WEIGHT_VARIATION = 405,
    ATTR_PARTICLES_COLOR_VARIATION = 406,
    ATTR_PARTICLES_COLOR_RED_VARIATION = 407,
    ATTR_PARTICLES_COLOR_GREEN_VARIATION = 408,
    ATTR_PARTICLES_COLOR_BLUE_VARIATION = 409,
    ATTR_PARTICLES_COLOR_OPACITY_VARIATION = 410,
    ATTR_PARTICLES_VARIATION_END = 411,
    ATTR_PARTICLES_ANIMATION_BEGIN = 412,
    ATTR_PARTICLES_SIZE_PERCENT = 413,
    ATTR_PARTICLES_SIZE_PERCENT_X = 414,
    ATTR_PARTICLES_SIZE_PERCENT_Y = 415,
    ATTR_PARTICLES_SIZE_PERCENT_Z = 416,
    ATTR_PARTICLES_SPEED_PERCENT = 417,
    ATTR_PARTICLES_SPIN = 418,
    ATTR_PARTICLES_WEIGHT_PERCENT = 419,
    ATTR_PARTICLES_COLOR_PERCENT = 420,
    ATTR_PARTICLES_COLOR_PERCENT_R = 421,
    ATTR_PARTICLES_COLOR_PERCENT_G = 422,
    ATTR_PARTICLES_COLOR_PERCENT_B = 423,
    ATTR_PARTICLES_COLOR_PERCENT_OPACITY = 424,
    ATTR_PARTICLES_ANIMATION_END = 425,
    ATTR_PARTICLES_FORCE_BEGIN = 426,
    ATTR_PARTICLES_FORCE = 427,
    ATTR_PARTICLES_FORCE_X = 428,
    ATTR_PARTICLES_FORCE_Y = 429,
    ATTR_PARTICLES_FORCE_Z = 430,
    ATTR_PARTICLES_FORCE_END = 431,
    ATTR_PARTICLES_END = 432,
    ATTR_LENS_FLARES_BEGIN = 433,
    ATTR_LENS_FLARES_ITEMS = 434,
    ATTR_LENS_FLARES_FLARE_BEGIN = 435,
    ATTR_LENS_FLARES_FLARE_SIZE = 436,
    ATTR_LENS_FLARES_FLARE_POSITION_RATE = 437,
    ATTR_LENS_FLARES_FLARE_ROTATION = 438,
    ATTR_LENS_FLARES_FLARE_COLOR = 439,
    ATTR_LENS_FLARES_FLARE_IMAGE_FILE_NAME = 440,
    ATTR_LENS_FLARES_FLARE_END = 441,
    ATTR_LENS_FLARES_END = 442,
    ATTR_LIGHT_BEGIN = 443,
    ATTR_LIGHT_ENABLE = 444,
    ATTR_LIGHT_USE_TARGET = 445,
    ATTR_LIGHT_TYPE = 446,
    ATTR_LIGHT_AMBIENT = 447,
    ATTR_LIGHT_AMBIENT_R = 448,
    ATTR_LIGHT_AMBIENT_G = 449,
    ATTR_LIGHT_AMBIENT_B = 450,
    ATTR_LIGHT_DIFFUSE = 451,
    ATTR_LIGHT_DIFFUSE_R = 452,
    ATTR_LIGHT_DIFFUSE_G = 453,
    ATTR_LIGHT_DIFFUSE_B = 454,
    ATTR_LIGHT_SPECULAR = 455,
    ATTR_LIGHT_SPECULAR_R = 456,
    ATTR_LIGHT_SPECULAR_G = 457,
    ATTR_LIGHT_SPECULAR_B = 458,
    ATTR_LIGHT_INTENSITY = 459,
    ATTR_LIGHT_DIRECTION = 460,
    ATTR_LIGHT_DIRECTION_X = 461,
    ATTR_LIGHT_DIRECTION_Y = 462,
    ATTR_LIGHT_DIRECTION_Z = 463,
    ATTR_LIGHT_RANGE = 464,
    ATTR_LIGHT_FALLOFF = 465,
    ATTR_LIGHT_LINEAR_ATTENUATION = 466,
    ATTR_LIGHT_THETA = 467,
    ATTR_LIGHT_PHI = 468,
    ATTR_LIGHT_CUTOFF = 469,
    ATTR_LIGHT_TARGET_POSITION = 470,
    ATTR_LIGHT_TARGET_POSITION_X = 471,
    ATTR_LIGHT_TARGET_POSITION_Y = 472,
    ATTR_LIGHT_TARGET_POSITION_Z = 473,
    ATTR_LIGHT_END = 474,
    ATTR_LINE_BEGIN = 475,
    ATTR_LINE_SHAPE_TYPE = 476,
    ATTR_LINE_X_LENGTH = 477,
    ATTR_LINE_DEPTH = 478,
    ATTR_LINE_HEIGHT = 479,
    ATTR_LINE_SEGMENT = 480,
    ATTR_LINE_INSERT_POINT = 481,
    ATTR_LINE_REMOVE_POINT = 482,
    ATTR_LINE_MAX_LENGTH = 483,
    ATTR_LINE_POINT_X = 484,
    ATTR_LINE_POINT_Y = 485,
    ATTR_LINE_END = 486,
    ATTR_GROUP_BEGIN = 487,
    ATTR_GROUP_TYPE = 488,
    ATTR_GROUP_WIDTH = 489,
    ATTR_GROUP_HEIGHT = 490,
    ATTR_GROUP_3D_ENABLE = 491,
    ATTR_GROUP_LIGHTING_ENABLE = 492,
    ATTR_GROUP_SCROLL_BEGIN = 493,
    ATTR_GROUP_SCROLL_SPEED = 494,
    ATTR_GROUP_SCROLL_REVERSED = 495,
    ATTR_GROUP_SCROLL_END = 496,
    ATTR_GROUP_END = 497,
    ATTR_AUDIO_BEGIN = 498,
    ATTR_AUDIO_VOLUME = 499,
    ATTR_AUDIO_LOOP_COUNT = 500,
    ATTR_AUDIO_END = 501,
    ATTR_SUBTITLE_BEGIN = 502,
    ATTR_SUBTITLE_MODE = 503,
    ATTR_SUBTITLE_SPACE = 504,
    ATTR_SUBTITLE_STARTFRAME = 505,
    ATTR_SUBTITLE_ENDFRAME = 506,
    ATTR_SUBTITLE_SPEED = 507,
    ATTR_SUBTITLE_MOVEMENT = 508,
    ATTR_SUBTITLE_POSITION = 509,
    ATTR_SUBTITLE_ROLLSPACING = 510,
    ATTR_SUBTITLE_END = 511,
    ATTR_PATH_BEGIN = 512,
    ATTR_PATH_CLOSE = 513,
    ATTR_PATH_POINT_POSITION = 514,
    ATTR_PATH_POINT_POSITION_X = 515,
    ATTR_PATH_POINT_POSITION_Y = 516,
    ATTR_PATH_POINT_POSITION_Z = 517,
    ATTR_PATH_POINT_ROTATION = 518,
    ATTR_PATH_POINT_ROTATION_X = 519,
    ATTR_PATH_POINT_ROTATION_Y = 520,
    ATTR_PATH_POINT_ROTATION_Z = 521,
    ATTR_PATH_POINT_SCALE = 522,
    ATTR_PATH_POINT_SCALE_X = 523,
    ATTR_PATH_POINT_SCALE_Y = 524,
    ATTR_PATH_POINT_SCALE_Z = 525,
    ATTR_PATH_POINT_COLOR = 526,
    ATTR_PATH_END = 527,
    ATTR_SUBOBJECT_END = 528,
    ATTR_OBJECT_TRANSFORM_BEGIN = 529,
    ATTR_POSITION = 530,
    ATTR_POSITION_X = 531,
    ATTR_POSITION_Y = 532,
    ATTR_POSITION_Z = 533,
    ATTR_POSITION_WORLD_COORD = 534,
    ATTR_POSITION_WORLD_COORD_2 = 535,
    ATTR_POSITION_WORLD_COORD_X = 536,
    ATTR_POSITION_WORLD_COORD_Y = 537,
    ATTR_POSITION_WORLD_COORD_Z = 538,
    ATTR_POSITION_WORLD_COORD_ABSOLUTE = 539,
    ATTR_ROTATION = 540,
    ATTR_ROTATION_X = 541,
    ATTR_ROTATION_Y = 542,
    ATTR_ROTATION_Z = 543,
    ATTR_ROTATION_WORLD_COORD_X = 544,
    ATTR_ROTATION_WORLD_COORD_Y = 545,
    ATTR_ROTATION_WORLD_COORD_Z = 546,
    ATTR_ROTATION_WORLD_COORD_ABSOLUTE = 547,
    ATTR_BILLBOARDING = 548,
    ATTR_SCALE = 549,
    ATTR_SCALE_X = 550,
    ATTR_SCALE_Y = 551,
    ATTR_SCALE_Z = 552,
    ATTR_SCALE_WORLD_COORD = 553,
    ATTR_SCALE_WORLD_COORD_X = 554,
    ATTR_SCALE_WORLD_COORD_Y = 555,
    ATTR_SCALE_WORLD_COORD_Z = 556,
    ATTR_SCALE_WORLD_COORD_ABSOLUTE = 557,
    ATTR_SHEAR = 558,
    ATTR_SHEAR_X = 559,
    ATTR_SHEAR_Y = 560,
    ATTR_SHEAR_Z = 561,
    ATTR_PIVOT_BEGIN = 562,
    ATTR_PIVOT_POSITION = 563,
    ATTR_PIVOT_POSITION_X = 564,
    ATTR_PIVOT_POSITION_Y = 565,
    ATTR_PIVOT_POSITION_Z = 566,
    ATTR_PIVOT_POSITION_WORLD_COORD = 567,
    ATTR_PIVOT_ROTATION = 568,
    ATTR_PIVOT_ROTATION_X = 569,
    ATTR_PIVOT_ROTATION_Y = 570,
    ATTR_PIVOT_ROTATION_Z = 571,
    ATTR_PIVOT_SCALE = 572,
    ATTR_PIVOT_SCALE_X = 573,
    ATTR_PIVOT_SCALE_Y = 574,
    ATTR_PIVOT_SCALE_Z = 575,
    ATTR_PIVOT_MOVE = 576,
    ATTR_PIVOT_CENTER = 577,
    ATTR_PIVOT_CENTER_RIGHT = 578,
    ATTR_PIVOT_CENTER_LEFT = 579,
    ATTR_PIVOT_CENTER_UP = 580,
    ATTR_PIVOT_CENTER_DOWN = 581,
    ATTR_PIVOT_END = 582,
    ATTR_CAMERA_POSITION = 583,
    ATTR_LAY_DIRECTION = 584,
    ATTR_LAY_DIRECTION_X = 585,
    ATTR_LAY_DIRECTION_Y = 586,
    ATTR_LAY_DIRECTION_Z = 587,
    ATTR_LAY_DIRECTION_WORLD_COORD_2 = 588,
    ATTR_MOTION_TRAIL_COUNT = 589,
    ATTR_OBJECT_TRANSFORM_END = 590,
    ATTR_ANIMATION_BEGIN = 591,
    ATTR_ANIMATION_HIDE_IN_DELAY = 592,
    ATTR_ANIMATION_NORMALIZE_PREV_ROTATION = 593,
    ATTR_ANIMATION_START_FRAME = 594,
    ATTR_ANIMATION_START_GLOBAL_FRAME = 595,
    ATTR_ANIMATION_CHANGE_RANGE = 596,
    ATTR_ANIMATION_REPEAT_FROM = 597,
    ATTR_ANIMATION_REPEAT_TO = 598,
    ATTR_ANIMATION_REPEAT_COUNT = 599,
    ATTR_ANIMATION_REPEAT_INFINITE = 600,
    ATTR_ANIMATION_REPEAT_ADD = 601,
    ATTR_ANIMATION_REPEAT_DELETE = 602,
    ATTR_ANIMATION_REPEAT_DELETEALL = 603,
    ATTR_ANIMATION_END = 604,
    ATTR_MATERIAL_TARGET_BEGIN = 605,
    ATTR_MATERIAL_TARGET_DEFAULT = 606,
    ATTR_MATERIAL_TARGET_FACE = 607,
    ATTR_MATERIAL_TARGET_EDGE = 608,
    ATTR_MATERIAL_TARGET_SIDE = 609,
    ATTR_MATERIAL_TARGET_START_FACE = 610,
    ATTR_MATERIAL_TARGET_END_FACE = 611,
    ATTR_MATERIAL_TARGET_FRONT = 612,
    ATTR_MATERIAL_TARGET_TOP = 613,
    ATTR_MATERIAL_TARGET_LEFT = 614,
    ATTR_MATERIAL_TARGET_RIGHT = 615,
    ATTR_MATERIAL_TARGET_BOTTOM = 616,
    ATTR_MATERIAL_TARGET_BACK = 617,
    ATTR_MATERIAL_TARGET_END = 618,
    ATTR_MATERIAL_BEGIN = 619,
    ATTR_MATERIAL_ENABLE = 620,
    ATTR_MATERIAL_SHADING = 621,
    ATTR_MATERIAL_AMBIENT = 622,
    ATTR_MATERIAL_AMBIENT_ENABLE = 623,
    ATTR_MATERIAL_AMBIENT_COLOR = 624,
    ATTR_MATERIAL_AMBIENT_COLOR_R = 625,
    ATTR_MATERIAL_AMBIENT_COLOR_G = 626,
    ATTR_MATERIAL_AMBIENT_COLOR_B = 627,
    ATTR_MATERIAL_AMBIENT_INHERIT = 628,
    ATTR_MATERIAL_DIFFUSE = 629,
    ATTR_MATERIAL_DIFFUSE_ENABLE = 630,
    ATTR_MATERIAL_DIFFUSE_COLOR = 631,
    ATTR_MATERIAL_DIFFUSE_COLOR_R = 632,
    ATTR_MATERIAL_DIFFUSE_COLOR_G = 633,
    ATTR_MATERIAL_DIFFUSE_COLOR_B = 634,
    ATTR_MATERIAL_DIFFUSE_INHERIT = 635,
    ATTR_MATERIAL_SPECULAR = 636,
    ATTR_MATERIAL_SPECULAR_ENABLE = 637,
    ATTR_MATERIAL_SPECULAR_COLOR = 638,
    ATTR_MATERIAL_SPECULAR_COLOR_R = 639,
    ATTR_MATERIAL_SPECULAR_COLOR_G = 640,
    ATTR_MATERIAL_SPECULAR_COLOR_B = 641,
    ATTR_MATERIAL_SPECULAR_INHERIT = 642,
    ATTR_MATERIAL_SPECULAR_SHARPNESS = 643,
    ATTR_MATERIAL_EMISSIVE = 644,
    ATTR_MATERIAL_EMISSIVE_ENABLE = 645,
    ATTR_MATERIAL_EMISSIVE_COLOR = 646,
    ATTR_MATERIAL_EMISSIVE_COLOR_R = 647,
    ATTR_MATERIAL_EMISSIVE_COLOR_G = 648,
    ATTR_MATERIAL_EMISSIVE_COLOR_B = 649,
    ATTR_MATERIAL_EMISSIVE_INHERIT = 650,
    ATTR_MATERIAL_TRANSPARENCY = 651,
    ATTR_MATERIAL_TRANSPARENCY_ENABLE = 652,
    ATTR_MATERIAL_TRANSPARENCY_OPACITY = 653,
    ATTR_MATERIAL_TRANSPARENCY_INHERIT = 654,
    ATTR_MATERIAL_NORMAL = 655,
    ATTR_MATERIAL_NORMAL_ENABLE = 656,
    ATTR_MATERIAL_REFLECTION = 657,
    ATTR_MATERIAL_REFLECTION_ENABLE = 658,
    ATTR_MATERIAL_REFLECTION_INDEX = 659,
    ATTR_MATERIAL_REFLECTION_FRESNEL_POWER = 660,
    ATTR_MATERIAL_REFLECTION_FRESNEL_FALLOFF = 661,
    ATTR_MATERIAL_REFRACTION = 662,
    ATTR_MATERIAL_REFRACTION_ENABLE = 663,
    ATTR_MATERIAL_REFRACTION_INDEX = 664,
    ATTR_MATERIAL_REFRACTION_ENVIRONMENT = 665,
    ATTR_MATERIAL_PROPERTY = 666,
    ATTR_MATERIAL_END = 667,
    ATTR_TEXTURE_BEGIN = 668,
    ATTR_TEXTURE_OFFSET = 669,
    ATTR_TEXTURE_OFFSET_X = 670,
    ATTR_TEXTURE_OFFSET_Y = 671,
    ATTR_TEXTURE_TILING = 672,
    ATTR_TEXTURE_TILING_X = 673,
    ATTR_TEXTURE_TILING_Y = 674,
    ATTR_TEXTURE_ROTATION = 675,
    ATTR_TEXTURE_FILENAME = 676,
    ATTR_TEXTURE_ENABLE = 677,
    ATTR_TEXTURE_INSERT = 678,
    ATTR_TEXTURE_DELETE = 679,
    ATTR_TEXTURE_MOVE_UP = 680,
    ATTR_TEXTURE_MOVE_DOWN = 681,
    ATTR_TEXTURE_TYPE = 682,
    ATTR_TEXTURE_INPUT_CHANNEL = 683,
    ATTR_TEXTURE_USE_TEXTURE_ALPHA = 684,
    ATTR_TEXTURE_ALPHA = 685,
    ATTR_TEXTURE_BLENDING = 686,
    ATTR_TEXTURE_WRAP_MODE = 687,
    ATTR_TEXTURE_FILTER = 688,
    ATTR_TEXTURE_ADDRESS = 689,
    ATTR_TEXTURE_BORDER_COLOR = 690,
    ATTR_TEXTURE_GRID = 691,
    ATTR_TEXTURE_GRID_COUNT = 692,
    ATTR_TEXTURE_GRID_X_COUNT = 693,
    ATTR_TEXTURE_PLAYINFO = 694,
    ATTR_TEXTURE_PLAYINFO_TOTAL_FRAMES = 695,
    ATTR_TEXTURE_PLAYINFO_START_FRAME = 696,
    ATTR_TEXTURE_PLAYINFO_STOP_FRAME = 697,
    ATTR_TEXTURE_PLAYINFO_REPEAT_START_FRAME = 698,
    ATTR_TEXTURE_PLAYINFO_REPEAT_STOP_FRAME = 699,
    ATTR_TEXTURE_PLAYINFO_LOOP_COUNT = 700,
    ATTR_TEXTURE_PLAYINFO_LOOP_INFINITE = 701,
    ATTR_TEXTURE_FILL = 702,
    ATTR_TEXTURE_END = 703,
    ATTR_MODIFIER_BEGIN = 704,
    ATTR_MODIFIER_UVWRAP_BEGIN = 705,
    ATTR_MODIFIER_UVWRAP_MODE = 706,
    ATTR_MODIFIER_UVWRAP_OFFSET_X = 707,
    ATTR_MODIFIER_UVWRAP_OFFSET_Y = 708,
    ATTR_MODIFIER_UVWRAP_TILING_X = 709,
    ATTR_MODIFIER_UVWRAP_TILING_Y = 710,
    ATTR_MODIFIER_UVWRAP_END = 711,
    ATTR_MODIFIER_EXTRUDE_BEGIN = 712,
    ATTR_MODIFIER_EXTRUDE_SIZE = 713,
    ATTR_MODIFIER_EXTRUDE_END = 714,
    ATTR_MODIFIER_END = 715,
    ATTR_STYLE_BEGIN = 716,
    ATTR_FACE_FILL = 717,
    ATTR_FACE_THICKNESS = 718,
    ATTR_FACE_EMBOSS = 719,
    ATTR_FACE_SECONDTEXTURE = 720,
    ATTR_EDGE_FILL = 721,
    ATTR_EDGE_MODE = 722,
    ATTR_EDGE_SIZE = 723,
    ATTR_EDGE_BLUR = 724,
    ATTR_EDGE_CORE_BLUR = 725,
    ATTR_EDGE_INNER = 726,
    ATTR_SHADOW_FILL = 727,
    ATTR_SHADOW_MODE = 728,
    ATTR_SHADOW_SIZE = 729,
    ATTR_SHADOW_BLUR = 730,
    ATTR_SHADOW_ANGLE = 731,
    ATTR_SHADOW_DISTANCE = 732,
    ATTR_SHADOW_ANGLE_PICK = 733,
    ATTR_STYLE_END = 734,
    ATTR_BEVEL_ATTR_BEGIN = 735,
    ATTR_BEVEL_ATTR_TYPE = 736,
    ATTR_BEVEL_ATTR_EXTRUDE = 737,
    ATTR_BEVEL_ATTR_WIDTH = 738,
    ATTR_BEVEL_ATTR_HEIGHT = 739,
    ATTR_BEVEL_ATTR_STEPS = 740,
    ATTR_BEVEL_ATTR_SOFTEN = 741,
    ATTR_BEVEL_ATTR_CONTOUR = 742,
    ATTR_BEVEL_ATTR_END = 743,
    ATTR_LATHE_ATTR_BEGIN = 744,
    ATTR_LATHE_ATTR_3D_MODE = 745,
    ATTR_LATHE_ATTR_CENTER = 746,
    ATTR_LATHE_ATTR_CLOCK_WISE = 747,
    ATTR_LATHE_ATTR_START_RADIAN = 748,
    ATTR_LATHE_ATTR_END_RADIAN = 749,
    ATTR_LATHE_ATTR_INNER_RADIUS = 750,
    ATTR_LATHE_ATTR_MAX_SEGMENT = 751,
    ATTR_LATHE_ATTR_END = 752,
    ATTR_LOFT_ATTR_BEGIN = 753,
    ATTR_LOFT_ATTR_PATH_ID = 754,
    ATTR_LOFT_ATTR_SEGMENT_COUNT = 755,
    ATTR_LOFT_ATTR_START_POSITION = 756,
    ATTR_LOFT_ATTR_END_POSITION = 757,
    ATTR_LOFT_ATTR_BANKING = 758,
    ATTR_LOFT_ATTR_ENABLE_ROTATION = 759,
    ATTR_LOFT_ATTR_ENABLE_SCALE = 760,
    ATTR_LOFT_ATTR_END = 761,
    ATTR_TEXTURE_EFFECT_BEGIN = 762,
    ATTR_TEXTURE_EFFECT_CREATE_BEGIN = 763,
    ATTR_TEXTURE_EFFECT_CREATE = 764,
    ATTR_TEXTURE_EFFECT_CREATE_END = 765,
    ATTR_TEXTURE_EFFECT_BASE_BEGIN = 766,
    ATTR_TEXTURE_EFFECT_DURATION = 767,
    ATTR_TEXTURE_EFFECT_TIMING = 768,
    ATTR_TEXTURE_EFFECT_REVERSE = 769,
    ATTR_TEXTURE_EFFECT_KEYFRAME_MODE = 770,
    ATTR_TEXTURE_EFFECT_BASE_END = 771,
    ATTR_TEXTURE_EFFECT_CUT_BEGIN = 772,
    ATTR_TEXTURE_EFFECT_CUT_CLEARONOUT = 773,
    ATTR_TEXTURE_EFFECT_CUT_END = 774,
    ATTR_TEXTURE_EFFECT_WIPE_BEGIN = 775,
    ATTR_TEXTURE_EFFECT_WIPE_SHAPE = 776,
    ATTR_TEXTURE_EFFECT_WIPE_POSITION = 777,
    ATTR_TEXTURE_EFFECT_WIPE_DIRECTION = 778,
    ATTR_TEXTURE_EFFECT_WIPE_SHEEN = 779,
    ATTR_TEXTURE_EFFECT_WIPE_END = 780,
    ATTR_TEXTURE_EFFECT_PUSH_BEGIN = 781,
    ATTR_TEXTURE_EFFECT_PUSH_DIRECTION = 782,
    ATTR_TEXTURE_EFFECT_PUSH_FADE = 783,
    ATTR_TEXTURE_EFFECT_PUSH_POS = 784,
    ATTR_TEXTURE_EFFECT_PUSH_POS_X = 785,
    ATTR_TEXTURE_EFFECT_PUSH_POS_Y = 786,
    ATTR_TEXTURE_EFFECT_PUSH_END = 787,
    ATTR_TEXTURE_EFFECT_TRANSFORM_BEGIN = 788,
    ATTR_TEXTURE_EFFECT_TRANSFORM_FADE = 789,
    ATTR_TEXTURE_EFFECT_TRANSFORM_TRAIL = 790,
    ATTR_TEXTURE_EFFECT_TRANSFORM_POSITION_X = 791,
    ATTR_TEXTURE_EFFECT_TRANSFORM_POSITION_Y = 792,
    ATTR_TEXTURE_EFFECT_TRANSFORM_POSITION_Z = 793,
    ATTR_TEXTURE_EFFECT_TRANSFORM_CENTER_X = 794,
    ATTR_TEXTURE_EFFECT_TRANSFORM_CENTER_Y = 795,
    ATTR_TEXTURE_EFFECT_TRANSFORM_CENTER_Z = 796,
    ATTR_TEXTURE_EFFECT_TRANSFORM_SCALE_X = 797,
    ATTR_TEXTURE_EFFECT_TRANSFORM_SCALE_Y = 798,
    ATTR_TEXTURE_EFFECT_TRANSFORM_SCALE_Z = 799,
    ATTR_TEXTURE_EFFECT_TRANSFORM_ROTATION_X = 800,
    ATTR_TEXTURE_EFFECT_TRANSFORM_ROTATION_Y = 801,
    ATTR_TEXTURE_EFFECT_TRANSFORM_ROTATION_Z = 802,
    ATTR_TEXTURE_EFFECT_TRANSFORM_END = 803,
    ATTR_TEXTURE_EFFECT_CURL_BEGIN = 804,
    ATTR_TEXTURE_EFFECT_CURL_PROGRESS = 805,
    ATTR_TEXTURE_EFFECT_CURL_ANGLE_RADIAN = 806,
    ATTR_TEXTURE_EFFECT_CURL_CIRCLE_RADIUS = 807,
    ATTR_TEXTURE_EFFECT_CURL_SHAPE_CONE = 808,
    ATTR_TEXTURE_EFFECT_CURL_CONE_ORIGIN = 809,
    ATTR_TEXTURE_EFFECT_CURL_CONE_ORIGIN_X = 810,
    ATTR_TEXTURE_EFFECT_CURL_CONE_ORIGIN_Y = 811,
    ATTR_TEXTURE_EFFECT_CURL_END = 812,
    ATTR_TEXTURE_EFFECT_RIPPLE_BEGIN = 813,
    ATTR_TEXTURE_EFFECT_RIPPLE_SHAPE = 814,
    ATTR_TEXTURE_EFFECT_RIPPLE_FREQUENCY = 815,
    ATTR_TEXTURE_EFFECT_RIPPLE_AMPLITUDE = 816,
    ATTR_TEXTURE_EFFECT_RIPPLE_PERIOD = 817,
    ATTR_TEXTURE_EFFECT_RIPPLE_WATER_POSITION = 818,
    ATTR_TEXTURE_EFFECT_RIPPLE_WATER_POSITION_X = 819,
    ATTR_TEXTURE_EFFECT_RIPPLE_WATER_POSITION_Y = 820,
    ATTR_TEXTURE_EFFECT_RIPPLE_WATER_COUNT = 821,
    ATTR_TEXTURE_EFFECT_RIPPLE_SLANT = 822,
    ATTR_TEXTURE_EFFECT_RIPPLE_END = 823,
    ATTR_TEXTURE_EFFECT_PARTICLE_BEGIN = 824,
    ATTR_TEXTURE_EFFECT_PARTICLE_SHAPE = 825,
    ATTR_TEXTURE_EFFECT_PARTICLE_MOTION = 826,
    ATTR_TEXTURE_EFFECT_PARTICLE_ORDER = 827,
    ATTR_TEXTURE_EFFECT_PARTICLE_DIVIDE = 828,
    ATTR_TEXTURE_EFFECT_PARTICLE_DIVIDE_X = 829,
    ATTR_TEXTURE_EFFECT_PARTICLE_DIVIDE_Y = 830,
    ATTR_TEXTURE_EFFECT_PARTICLE_WHIRL = 831,
    ATTR_TEXTURE_EFFECT_PARTICLE_WHIRL_X = 832,
    ATTR_TEXTURE_EFFECT_PARTICLE_WHIRL_Y = 833,
    ATTR_TEXTURE_EFFECT_PARTICLE_WHIRL_Z = 834,
    ATTR_TEXTURE_EFFECT_PARTICLE_TRAIL = 835,
    ATTR_TEXTURE_EFFECT_PARTICLE_FADE = 836,
    ATTR_TEXTURE_EFFECT_PARTICLE_EXACT_ROTATE = 837,
    ATTR_TEXTURE_EFFECT_PARTICLE_RANDOM_ROTATE = 838,
    ATTR_TEXTURE_EFFECT_PARTICLE_PIECE_ROTATE = 839,
    ATTR_TEXTURE_EFFECT_PARTICLE_PIECE_ROTATE_X = 840,
    ATTR_TEXTURE_EFFECT_PARTICLE_PIECE_ROTATE_Y = 841,
    ATTR_TEXTURE_EFFECT_PARTICLE_PIECE_ROTATE_Z = 842,
    ATTR_TEXTURE_EFFECT_PARTICLE_SCATTER_RANGE = 843,
    ATTR_TEXTURE_EFFECT_PARTICLE_SCATTER_RANGE_X = 844,
    ATTR_TEXTURE_EFFECT_PARTICLE_SCATTER_RANGE_Y = 845,
    ATTR_TEXTURE_EFFECT_PARTICLE_SCATTER_RANGE_Z = 846,
    ATTR_TEXTURE_EFFECT_PARTICLE_DIRECTIONAL_START = 847,
    ATTR_TEXTURE_EFFECT_PARTICLE_DIRECTIONAL_START_X = 848,
    ATTR_TEXTURE_EFFECT_PARTICLE_DIRECTIONAL_START_Y = 849,
    ATTR_TEXTURE_EFFECT_PARTICLE_DIRECTIONAL_START_Z = 850,
    ATTR_TEXTURE_EFFECT_PARTICLE_DIRECTIONAL_CONVERGERATIO = 851,
    ATTR_TEXTURE_EFFECT_PARTICLE_END = 852,
    ATTR_TEXTURE_EFFECT_FADE_BEGIN = 853,
    ATTR_TEXTURE_EFFECT_FADE_MATTE_TYPE = 854,
    ATTR_TEXTURE_EFFECT_FADE_MATTE_INVERT = 855,
    ATTR_TEXTURE_EFFECT_FADE_FILENAME = 856,
    ATTR_TEXTURE_EFFECT_FADE_END = 857,
    ATTR_TEXTURE_EFFECT_DISTORTION_BEGIN = 858,
    ATTR_TEXTURE_EFFECT_DISTORTION_FILENAME = 859,
    ATTR_TEXTURE_EFFECT_DISTORTION_HEIGHT = 860,
    ATTR_TEXTURE_EFFECT_DISTORTION_END = 861,
    ATTR_TEXTURE_EFFECT_BLINK_BEGIN = 862,
    ATTR_TEXTURE_EFFECT_BLINK_FRONT_COLOR = 863,
    ATTR_TEXTURE_EFFECT_BLINK_BACK_COLOR = 864,
    ATTR_TEXTURE_EFFECT_BLINK_PERIOD = 865,
    ATTR_TEXTURE_EFFECT_BLINK_END = 866,
    ATTR_TEXTURE_EFFECT_CROP_BEGIN = 867,
    ATTR_TEXTURE_EFFECT_CROP_LEFT = 868,
    ATTR_TEXTURE_EFFECT_CROP_TOP = 869,
    ATTR_TEXTURE_EFFECT_CROP_RIGHT = 870,
    ATTR_TEXTURE_EFFECT_CROP_BOTTOM = 871,
    ATTR_TEXTURE_EFFECT_CROP_END = 872,
    ATTR_TEXTURE_EFFECT_BLUR_BEGIN = 873,
    ATTR_TEXTURE_EFFECT_BLUR_BLUR_TYPE = 874,
    ATTR_TEXTURE_EFFECT_BLUR_DISTANCE = 875,
    ATTR_TEXTURE_EFFECT_BLUR_ANGLE = 876,
    ATTR_TEXTURE_EFFECT_BLUR_BLUR_STRENGTH = 877,
    ATTR_TEXTURE_EFFECT_BLUR_SOURCE_STRENGTH = 878,
    ATTR_TEXTURE_EFFECT_BLUR_CENTER_X = 879,
    ATTR_TEXTURE_EFFECT_BLUR_CENTER_Y = 880,
    ATTR_TEXTURE_EFFECT_BLUR_GRADATION_ENABLE = 881,
    ATTR_TEXTURE_EFFECT_BLUR_GRADATION = 882,
    ATTR_TEXTURE_EFFECT_BLUR_END = 883,
    ATTR_TEXTURE_EFFECT_COLOR_BEGIN = 884,
    ATTR_TEXTURE_EFFECT_COLOR_COLOR_TYPE = 885,
    ATTR_TEXTURE_EFFECT_COLOR_HUE = 886,
    ATTR_TEXTURE_EFFECT_COLOR_SATURATION = 887,
    ATTR_TEXTURE_EFFECT_COLOR_LIGHTNESS = 888,
    ATTR_TEXTURE_EFFECT_COLOR_BRIGHTNESS = 889,
    ATTR_TEXTURE_EFFECT_COLOR_CONTRAST = 890,
    ATTR_TEXTURE_EFFECT_COLOR_SHAPE_TYPE = 891,
    ATTR_TEXTURE_EFFECT_COLOR_POSITION_X = 892,
    ATTR_TEXTURE_EFFECT_COLOR_POSITION_Y = 893,
    ATTR_TEXTURE_EFFECT_COLOR_RANGE = 894,
    ATTR_TEXTURE_EFFECT_COLOR_ANGLE = 895,
    ATTR_TEXTURE_EFFECT_COLOR_END = 896,
    ATTR_TEXTURE_EFFECT_SIDE_FADE_BEGIN = 897,
    ATTR_TEXTURE_EFFECT_SIDE_FADE_RECT_LEFT = 898,
    ATTR_TEXTURE_EFFECT_SIDE_FADE_RECT_TOP = 899,
    ATTR_TEXTURE_EFFECT_SIDE_FADE_RECT_RIGHT = 900,
    ATTR_TEXTURE_EFFECT_SIDE_FADE_RECT_BOTTOM = 901,
    ATTR_TEXTURE_EFFECT_SIDE_FADE_END = 902,
    ATTR_TEXTURE_EFFECT_START_FRAME = 903,
    ATTR_TEXTURE_EFFECT_DELETE = 904,
    ATTR_TEXTURE_EFFECT_DELETE_ALL = 905,
    ATTR_TEXTURE_EFFECT_END = 906,
    ATTR_STOCK_ANIMATION_BEGIN = 907,
    ATTR_STOCK_ANIMATION_CREATE_BEGIN = 908,
    ATTR_STOCK_ANIMATION_CREATE = 909,
    ATTR_STOCK_ANIMATION_CREATE_END = 910,
    ATTR_STOCK_ANIMATION_BASE_BEGIN = 911,
    ATTR_STOCK_ANIMATION_DURATION = 912,
    ATTR_STOCK_ANIMATION_TARGET_X = 913,
    ATTR_STOCK_ANIMATION_TARGET_Y = 914,
    ATTR_STOCK_ANIMATION_TARGET_Z = 915,
    ATTR_STOCK_ANIMATION_ROTATE_X = 916,
    ATTR_STOCK_ANIMATION_ROTATE_Y = 917,
    ATTR_STOCK_ANIMATION_ROTATE_Z = 918,
    ATTR_STOCK_ANIMATION_FADE_TYPE = 919,
    ATTR_STOCK_ANIMATION_USE_COLOR = 920,
    ATTR_STOCK_ANIMATION_BEGIN_COLOR = 921,
    ATTR_STOCK_ANIMATION_BEGIN_ALPHA = 922,
    ATTR_STOCK_ANIMATION_END_COLOR = 923,
    ATTR_STOCK_ANIMATION_END_ALPHA = 924,
    ATTR_STOCK_ANIMATION_OUT_MODE = 925,
    ATTR_STOCK_ANIMATION_BASE_END = 926,
    ATTR_STOCK_ANIMATION_BOUNCE_BEGIN = 927,
    ATTR_STOCK_ANIMATION_BOUNCE_COUNT = 928,
    ATTR_STOCK_ANIMATION_BOUNCE_FIRST_HEIGHT = 929,
    ATTR_STOCK_ANIMATION_BOUNCE_LAST_HEIGHT = 930,
    ATTR_STOCK_ANIMATION_BOUNCE_ELASTICITY = 931,
    ATTR_STOCK_ANIMATION_BOUNCE_START_TIMING = 932,
    ATTR_STOCK_ANIMATION_BOUNCE_END = 933,
    ATTR_STOCK_ANIMATION_SPRING_BEGIN = 934,
    ATTR_STOCK_ANIMATION_SPRING_COUNT = 935,
    ATTR_STOCK_ANIMATION_SPRING_FIRST_SCALE1_X = 936,
    ATTR_STOCK_ANIMATION_SPRING_FIRST_SCALE1_Y = 937,
    ATTR_STOCK_ANIMATION_SPRING_FIRST_SCALE1_Z = 938,
    ATTR_STOCK_ANIMATION_SPRING_FIRST_SCALE2_X = 939,
    ATTR_STOCK_ANIMATION_SPRING_FIRST_SCALE2_Y = 940,
    ATTR_STOCK_ANIMATION_SPRING_FIRST_SCALE2_Z = 941,
    ATTR_STOCK_ANIMATION_SPRING_LAST_SCALE1_X = 942,
    ATTR_STOCK_ANIMATION_SPRING_LAST_SCALE1_Y = 943,
    ATTR_STOCK_ANIMATION_SPRING_LAST_SCALE1_Z = 944,
    ATTR_STOCK_ANIMATION_SPRING_LAST_SCALE2_X = 945,
    ATTR_STOCK_ANIMATION_SPRING_LAST_SCALE2_Y = 946,
    ATTR_STOCK_ANIMATION_SPRING_LAST_SCALE2_Z = 947,
    ATTR_STOCK_ANIMATION_SPRING_END = 948,
    ATTR_STOCK_ANIMATION_MOVING_BEGIN = 949,
    ATTR_STOCK_ANIMATION_MOVING_SPEED = 950,
    ATTR_STOCK_ANIMATION_MOVING_ACCEL = 951,
    ATTR_STOCK_ANIMATION_MOVING_ROLLING_COUNT = 952,
    ATTR_STOCK_ANIMATION_MOVING_BANG_SHAKE_COUNT = 953,
    ATTR_STOCK_ANIMATION_MOVING_BANG_DURATION = 954,
    ATTR_STOCK_ANIMATION_MOVING_BANG_SPACE_X = 955,
    ATTR_STOCK_ANIMATION_MOVING_BANG_SPACE_Y = 956,
    ATTR_STOCK_ANIMATION_MOVING_BANG_SPACE_Z = 957,
    ATTR_STOCK_ANIMATION_MOVING_BANG_SCALE_X = 958,
    ATTR_STOCK_ANIMATION_MOVING_BANG_SCALE_Y = 959,
    ATTR_STOCK_ANIMATION_MOVING_BANG_SCALE_Z = 960,
    ATTR_STOCK_ANIMATION_MOVING_END = 961,
    ATTR_STOCK_ANIMATION_FALLING_BEGIN = 962,
    ATTR_STOCK_ANIMATION_FALLING_FROM_LEFT = 963,
    ATTR_STOCK_ANIMATION_FALLING_PAUSE_COUNT = 964,
    ATTR_STOCK_ANIMATION_FALLING_FIRST_WIDTH = 965,
    ATTR_STOCK_ANIMATION_FALLING_LAST_WIDTH = 966,
    ATTR_STOCK_ANIMATION_FALLING_START_TIMING = 967,
    ATTR_STOCK_ANIMATION_FALLING_END = 968,
    ATTR_STOCK_ANIMATION_SWING_BEGIN = 969,
    ATTR_STOCK_ANIMATION_SWING_COUNT = 970,
    ATTR_STOCK_ANIMATION_SWING_FIRST_RATIO = 971,
    ATTR_STOCK_ANIMATION_SWING_LAST_RATIO = 972,
    ATTR_STOCK_ANIMATION_SWING_END = 973,
    ATTR_STOCK_ANIMATION_SWIRL_BEGIN = 974,
    ATTR_STOCK_ANIMATION_SWIRL_AXIS = 975,
    ATTR_STOCK_ANIMATION_SWIRL_COUNT = 976,
    ATTR_STOCK_ANIMATION_SWIRL_CLOCKWISE = 977,
    ATTR_STOCK_ANIMATION_SWIRL_FIRST_DIAMETER = 978,
    ATTR_STOCK_ANIMATION_SWIRL_LAST_DIAMETER = 979,
    ATTR_STOCK_ANIMATION_SWIRL_END = 980,
    ATTR_STOCK_ANIMATION_WAVE_BEGIN = 981,
    ATTR_STOCK_ANIMATION_WAVE_COUNT = 982,
    ATTR_STOCK_ANIMATION_WAVE_FIRST_AMP = 983,
    ATTR_STOCK_ANIMATION_WAVE_LAST_AMP = 984,
    ATTR_STOCK_ANIMATION_WAVE_START_TIMING = 985,
    ATTR_STOCK_ANIMATION_WAVE_END_TIMING = 986,
    ATTR_STOCK_ANIMATION_WAVE_END = 987,
    ATTR_STOCK_ANIMATION_START_FRAME = 988,
    ATTR_STOCK_ANIMATION_DELETE = 989,
    ATTR_STOCK_ANIMATION_END = 990,
    ATTR_SHADER_BEGIN = 991,
    ATTR_SHADER_BASE_BEGIN = 992,
    ATTR_SHADER_BASE_TYPE = 993,
    ATTR_SHADER_BASE_REGISTER = 994,
    ATTR_SHADER_BASE_UNREGISTER = 995,
    ATTR_SHADER_BASE_PREVIEW = 996,
    ATTR_SHADER_BASE_SCENE_REGISTER = 997,
    ATTR_SHADER_BASE_LIGHTINDEX = 998,
    ATTR_SHADER_BASE_END = 999,
    ATTR_SHADER_REFRACTION_BEGIN = 1000,
    ATTR_SHADER_REFRACTION_RATIO = 1001,
    ATTR_SHADER_REFRACTION_FRESNELPOWER = 1002,
    ATTR_SHADER_REFRACTION_END = 1003,
    ATTR_SHADER_PHONG_BEGIN = 1004,
    ATTR_SHADER_PHONG_COLOR = 1005,
    ATTR_SHADER_PHONG_ATTENUATION = 1006,
    ATTR_SHADER_PHONG_INTENSITY = 1007,
    ATTR_SHADER_PHONG_END = 1008,
    ATTR_SHADER_CARTOON_BEGIN = 1009,
    ATTR_SHADER_CARTOON_EDGECOLOR = 1010,
    ATTR_SHADER_CARTOON_THRESHHOLD = 1011,
    ATTR_SHADER_CARTOON_END = 1012,
    ATTR_SHADER_BUMP_BEGIN = 1013,
    ATTR_SHADER_BUMP_DENTISITY = 1014,
    ATTR_SHADER_BUMP_SIZE = 1015,
    ATTR_SHADER_BUMP_INTENSITY = 1016,
    ATTR_SHADER_BUMP_END = 1017,
    ATTR_SHADER_REFLECTION_BEGIN = 1018,
    ATTR_SHADER_REFLECTION_INDEX = 1019,
    ATTR_SHADER_REFLECTION_FRESNEL_POWER = 1020,
    ATTR_SHADER_REFLECTION_FRESNEL_FALLOFF = 1021,
    ATTR_SHADER_REFLECTION_BRIGHTNESS = 1022,
    ATTR_SHADER_REFLECTION_DIFFUSE_OPACITY = 1023,
    ATTR_SHADER_REFLECTION_END = 1024,
    ATTR_SHADER_BLUR_BEGIN = 1025,
    ATTR_SHADER_BLUR_BLUR_TYPE = 1026,
    ATTR_SHADER_BLUR_DISTANCE = 1027,
    ATTR_SHADER_BLUR_ANGLE = 1028,
    ATTR_SHADER_BLUR_STRENGTH = 1029,
    ATTR_SHADER_BLUR_CENTER_X = 1030,
    ATTR_SHADER_BLUR_CENTER_Y = 1031,
    ATTR_SHADER_BLUR_END = 1032,
    ATTR_SHADER_COLOR_BEGIN = 1033,
    ATTR_SHADER_COLOR_COLOR_TYPE = 1034,
    ATTR_SHADER_COLOR_HUE = 1035,
    ATTR_SHADER_COLOR_SATURATION = 1036,
    ATTR_SHADER_COLOR_LIGHTNESS = 1037,
    ATTR_SHADER_COLOR_BRIGHTNESS = 1038,
    ATTR_SHADER_COLOR_CONTRAST = 1039,
    ATTR_SHADER_COLOR_SHAPE_TYPE = 1040,
    ATTR_SHADER_COLOR_POSITION_X = 1041,
    ATTR_SHADER_COLOR_POSITION_Y = 1042,
    ATTR_SHADER_COLOR_RANGE = 1043,
    ATTR_SHADER_COLOR_ANGLE = 1044,
    ATTR_SHADER_COLOR_END = 1045,
    ATTR_SHADER_END = 1046
};

enum eKValueType
{
    INT_VALUE_TYPE = 0,
    FLOAT_VALUE_TYPE = 1,
    BOOL_VALUE_TYPE = 2,
    STRING_VALUE_TYPE = 3,
    DOUBLE_VALUE_TYPE = 4
};

#pragma pack(push, 8)

struct sKObjectAttribute
{
    enum eKObjectAttribute ParamType;
    enum eKValueType ValueType;
    int KeyIndex;
    int iValue;
    float fValue;
    long bValue;
    BSTR sValue;
    double dValue;
};

#pragma pack(pop)

enum eKAnimationType
{
    ANIMATION_TYPE_DEFAULT = 0,
    ANIMATION_TYPE_OUT = 1,
    ANIMATION_TYPE_CHANGE_OUT = 2,
    ANIMATION_TYPE_TRIGGER_0 = 3
};

enum eKVectorType
{
    VECTOR_TYPE_X = 1,
    VECTOR_TYPE_Y = 2,
    VECTOR_TYPE_Z = 4,
    VECTOR_TYPE_XY = 3,
    VECTOR_TYPE_YZ = 6,
    VECTOR_TYPE_ZX = 5,
    VECTOR_TYPE_XYZ = 7
};

enum eKAngleKey
{
    ANGLE_KEY_START = 1,
    ANGLE_KEY_END = 2,
    ANGLE_KEY_ALL = 3
};

enum eKCropKey
{
    CROP_KEY_LEFT = 1,
    CROP_KEY_TOP = 2,
    CROP_KEY_RIGHT = 4,
    CROP_KEY_BOTTOM = 8,
    CROP_KEY_HORIZONTAL = 5,
    CROP_KEY_VERTICAL = 10,
    CROP_KEY_ALL = 15
};

#pragma pack(push, 4)

struct sKVector3f
{
    float X;
    float Y;
    float Z;
};

#pragma pack(pop)

enum eKKeyFrameType
{
    KEY_FRAME_TYPE_ABSOLUTE = 0,
    KEY_FRAME_TYPE_DURATION = 1,
    KEY_FRAME_TYPE_OFFSET = 2
};

enum eKKeyInterpolationType
{
    KEY_INTERPOLATION_TYPE_KEEP = 0,
    KEY_INTERPOLATION_TYPE_LINEAR = 1,
    KEY_INTERPOLATION_TYPE_CURVE = 2
};

enum eKEffectType
{
    EFFECT_NONE = 0,
    EFFECT_WIPE = 1,
    EFFECT_PUSH = 2,
    EFFECT_TRANSFORM = 3,
    EFFECT_CURL = 4,
    EFFECT_RIPPLE = 5,
    EFFECT_PARTICLE = 6,
    EFFECT_FADE = 7,
    EFFECT_DISTORTION = 8,
    EFFECT_BLINK = 9,
    EFFECT_CROP = 10,
    EFFECT_BLUR = 11,
    EFFECT_COLOR = 12,
    EFFECT_SIDE_FADE = 13,
    EFFECT_CUT_OUT = 14,
    EFFECT_COUNT = 15
};

enum eKTextureTarget
{
    TEXTURE_TARGET_IMAGE = 0,
    TEXTURE_TARGET_DIFFUSE = 1,
    TEXTURE_TARGET_COUNT = 2
};

#pragma pack(push, 4)

struct sKVideoPlayInfo
{
    int TotalFrames;
    int StartFrame;
    int StopFrame;
    int RepeatStartFrame;
    int RepeatStopFrame;
    int StartDelayFrames;
    int LoopCount;
    long LoopInfinite;
    long EnableAudio;
    long bReplayVideoOutAnimation;
};

#pragma pack(pop)

enum eKImageType
{
    IMAGE_TYPE_IMAGE = 0,
    IMAGE_TYPE_SEQUENCE = 1,
    IMAGE_TYPE_VIDEO = 2,
    IMAGE_TYPE_LIVE_IN = 3,
    IMAGE_TYPE_FILL = 4,
    IMAGE_TYPE_COUNT = 5
};

enum eKMaterialTarget
{
    MATERIAL_TARGET_DEFAULT = 0,
    MATERIAL_TARGET_FACE = 1,
    MATERIAL_TARGET_EDGE = 2,
    MATERIAL_TARGET_SIDE = 3,
    MATERIAL_TARGET_START_FACE = 4,
    MATERIAL_TARGET_END_FACE = 5,
    MATERIAL_TARGET_FRONT = 6,
    MATERIAL_TARGET_TOP = 7,
    MATERIAL_TARGET_LEFT = 8,
    MATERIAL_TARGET_RIGHT = 9,
    MATERIAL_TARGET_BOTTOM = 10,
    MATERIAL_TARGET_BACK = 11
};

#pragma pack(push, 1)

struct sKColor
{
    unsigned char R;
    unsigned char G;
    unsigned char B;
    unsigned char A;
};

#pragma pack(pop)

enum eKTextureType
{
    TEXTURE_TYPE_IMAGE = 0,
    TEXTURE_TYPE_GRID_IMAGE = 1,
    TEXTURE_TYPE_SEQUENCE = 2,
    TEXTURE_TYPE_VIDEO = 3,
    TEXTURE_TYPE_LIVE_VIDEO = 4,
    TEXTURE_TYPE_FILL = 5
};

enum eKTextureBlending
{
    TEXTURE_BLENDING_DISABLE = 0,
    TEXTURE_BLENDING_MULTIPLY = 1,
    TEXTURE_BLENDING_ADD = 2,
    TEXTURE_BLENDING_SCREEN = 3,
    TEXTURE_BLENDING_DARKEN = 4,
    TEXTURE_BLENDING_COLOR_BURN = 5,
    TEXTURE_BLENDING_LINEAR_BURN = 6,
    TEXTURE_BLENDING_COLOR_DODGE = 7,
    TEXTURE_BLENDING_OVERLAY = 8,
    TEXTURE_BLENDING_AVERAGE = 9,
    TEXTURE_BLENDING_DIFFERENCE = 10,
    TEXTURE_BLENDING_COUNT = 11
};

enum eKTextureFilter
{
    TEXTURE_FILTER_NEAREST = 0,
    TEXTURE_FILTER_LINEAR = 1,
    TEXTURE_FILTER_LINEAR_MIPMAP = 2,
    TEXTURE_FILTER_ANISOTROPIC = 3,
    TEXTURE_FILTER_ANISOTROPIC_MIPMAP = 4,
    TEXTURE_FILTER_COUNT = 5
};

enum eKTextureAddress
{
    TEXTURE_ADDRESS_REPEAT = 0,
    TEXTURE_ADDRESS_CLAMP = 1,
    TEXTURE_MIRRORED_REPEAT = 2,
    TEXTURE_ADDRESS_BORDER = 3,
    TEXTURE_ADDRESS_COUNT = 4
};

struct __declspec(uuid("a3b32780-d5ba-4760-a8f8-746e3c3e1f6e"))
IKATexture : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetTextureType (
        enum eKTextureType Type );
    HRESULT SetTextureFile (
        _bstr_t FilePathName );
    HRESULT SetTextureOpacity (
        unsigned char Opacity );
    HRESULT SetTextureBlending (
        enum eKTextureBlending BlendingType );
    HRESULT SetTextureFilter (
        enum eKTextureFilter FilterType );
    HRESULT SetTextureAddress (
        enum eKTextureAddress AddressType );
    HRESULT SetTextureOffset (
        float OffsetX,
        float OffsetY );
    HRESULT SetTextureOffsetKey (
        _bstr_t AnimationName,
        int KeyIndex,
        float OffsetX,
        float OffsetY );
    HRESULT SetTextureTiling (
        float TilingX,
        float TilingY );
    HRESULT SetTextureTilingKey (
        _bstr_t AnimationName,
        int KeyIndex,
        float TilingX,
        float TilingY );
    HRESULT SetTextureRotation (
        float Degree );
    HRESULT SetTextureRotationKey (
        _bstr_t AnimationName,
        int KeyIndex,
        float Degree );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SetTextureType (
        /*[in]*/ enum eKTextureType Type ) = 0;
      virtual HRESULT __stdcall raw_SetTextureFile (
        /*[in]*/ BSTR FilePathName ) = 0;
      virtual HRESULT __stdcall raw_SetTextureOpacity (
        /*[in]*/ unsigned char Opacity ) = 0;
      virtual HRESULT __stdcall raw_SetTextureBlending (
        /*[in]*/ enum eKTextureBlending BlendingType ) = 0;
      virtual HRESULT __stdcall raw_SetTextureFilter (
        /*[in]*/ enum eKTextureFilter FilterType ) = 0;
      virtual HRESULT __stdcall raw_SetTextureAddress (
        /*[in]*/ enum eKTextureAddress AddressType ) = 0;
      virtual HRESULT __stdcall raw_SetTextureOffset (
        /*[in]*/ float OffsetX,
        /*[in]*/ float OffsetY ) = 0;
      virtual HRESULT __stdcall raw_SetTextureOffsetKey (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float OffsetX,
        /*[in]*/ float OffsetY ) = 0;
      virtual HRESULT __stdcall raw_SetTextureTiling (
        /*[in]*/ float TilingX,
        /*[in]*/ float TilingY ) = 0;
      virtual HRESULT __stdcall raw_SetTextureTilingKey (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float TilingX,
        /*[in]*/ float TilingY ) = 0;
      virtual HRESULT __stdcall raw_SetTextureRotation (
        /*[in]*/ float Degree ) = 0;
      virtual HRESULT __stdcall raw_SetTextureRotationKey (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Degree ) = 0;
};

struct __declspec(uuid("a8ea96b9-dea7-457a-9772-15f4c8941fae"))
IKAMaterial : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT EnableMaterialItem (
        enum eKMaterialType Type,
        long bEnable );
    HRESULT SetDiffuseColor (
        struct sKColor Color );
    HRESULT SetDiffuseColorKey (
        _bstr_t AnimationName,
        int KeyIndex,
        struct sKColor Color );
    HRESULT SetAmbientColor (
        struct sKColor Color );
    HRESULT SetAmbientColorKey (
        _bstr_t AnimationName,
        int KeyIndex,
        struct sKColor Color );
    HRESULT SetSpecularColor (
        struct sKColor Color );
    HRESULT SetSpecularColorKey (
        _bstr_t AnimationName,
        int KeyIndex,
        struct sKColor Color );
    HRESULT SetEmissiveColor (
        struct sKColor Color );
    HRESULT SetEmissiveColorKey (
        _bstr_t AnimationName,
        int KeyIndex,
        struct sKColor Color );
    HRESULT SetSpecularSharpness (
        float Sharpness );
    HRESULT SetTransparencyOpacity (
        unsigned char Opacity );
    IKATexturePtr GetDiffuseTexture1 ( );
    IKATexturePtr GetDiffuseTexture2 ( );
    IKATexturePtr GetSpecularTexture ( );
    IKATexturePtr GetTransparencyTexture ( );
    IKATexturePtr GetNormalTexture ( );
    IKATexturePtr GetReflectionTexture ( );
    IKATexturePtr GetRefractionTexture ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_EnableMaterialItem (
        /*[in]*/ enum eKMaterialType Type,
        /*[in]*/ long bEnable ) = 0;
      virtual HRESULT __stdcall raw_SetDiffuseColor (
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_SetDiffuseColorKey (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_SetAmbientColor (
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_SetAmbientColorKey (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_SetSpecularColor (
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_SetSpecularColorKey (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_SetEmissiveColor (
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_SetEmissiveColorKey (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_SetSpecularSharpness (
        /*[in]*/ float Sharpness ) = 0;
      virtual HRESULT __stdcall raw_SetTransparencyOpacity (
        /*[in]*/ unsigned char Opacity ) = 0;
      virtual HRESULT __stdcall raw_GetDiffuseTexture1 (
        /*[out,retval]*/ struct IKATexture * * ppITexture ) = 0;
      virtual HRESULT __stdcall raw_GetDiffuseTexture2 (
        /*[out,retval]*/ struct IKATexture * * ppITexture ) = 0;
      virtual HRESULT __stdcall raw_GetSpecularTexture (
        /*[out,retval]*/ struct IKATexture * * ppITexture ) = 0;
      virtual HRESULT __stdcall raw_GetTransparencyTexture (
        /*[out,retval]*/ struct IKATexture * * ppITexture ) = 0;
      virtual HRESULT __stdcall raw_GetNormalTexture (
        /*[out,retval]*/ struct IKATexture * * ppITexture ) = 0;
      virtual HRESULT __stdcall raw_GetReflectionTexture (
        /*[out,retval]*/ struct IKATexture * * ppITexture ) = 0;
      virtual HRESULT __stdcall raw_GetRefractionTexture (
        /*[out,retval]*/ struct IKATexture * * ppITexture ) = 0;
};

enum eKEffectTarget
{
    EFFECT_TARGET_IN = 0,
    EFFECT_TARGET_OUT = 1,
    EFFECT_TARGET_BOTH = 2
};

enum eKTimingType
{
    TIMING_TYPE_UU = 0,
    TIMING_TYPE_UC = 1,
    TIMING_TYPE_UD = 2,
    TIMING_TYPE_CU = 3,
    TIMING_TYPE_CC = 4,
    TIMING_TYPE_CD = 5,
    TIMING_TYPE_DU = 6,
    TIMING_TYPE_DC = 7,
    TIMING_TYPE_DD = 8,
    TIMING_TYPE_COUNT = 9
};

enum eKWipeShape
{
    WIPE_SHAPE_DIVIDE = 0,
    WIPE_SHAPE_RECTANGLE = 1,
    WIPE_SHAPE_CIRCLE = 2,
    WIPE_SHAPE_FAN = 3,
    WIPE_SHAPE_COUNT = 4
};

enum eKPosition
{
    POSITION_UP = 0,
    POSITION_DOWN = 1,
    POSITION_LEFT = 2,
    POSITION_RIGHT = 3,
    POSITION_UP_LEFT = 4,
    POSITION_UP_RIGHT = 5,
    POSITION_DOWN_LEFT = 6,
    POSITION_DOWN_RIGHT = 7,
    POSITION_CENTER = 8,
    POSITION_COUNT = 9
};

#pragma pack(push, 4)

struct sKColor4f
{
    float R;
    float G;
    float B;
    float A;
};

#pragma pack(pop)

enum eKSheenBlending
{
    SHEEN_BLENDING_MIX = 0,
    SHEEN_BLENDING_ADD = 1,
    SHEEN_BLENDING_SUBTRACT = 2,
    SHEEN_BLENDING_COUNT = 3
};

#pragma pack(push, 4)

struct sKEffectWipe
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    enum eKWipeShape Shape;
    enum eKPosition Position;
    long bSheen;
    long bSheenSmooth;
    float SheenRate;
    struct sKColor4f SheenColor;
    enum eKSheenBlending SheenBlending;
    long bSideFade;
    float SideFadeRate;
};

#pragma pack(pop)

enum eKPushDirection
{
    PUSH_DIRECTION_UP = 0,
    PUSH_DIRECTION_DOWN = 1,
    PUSH_DIRECTION_LEFT = 2,
    PUSH_DIRECTION_RIGHT = 3,
    PUSH_DIRECTION_UP_LEFT = 4,
    PUSH_DIRECTION_UP_RIGHT = 5,
    PUSH_DIRECTION_DOWN_LEFT = 6,
    PUSH_DIRECTION_DOWN_RIGHT = 7,
    PUSH_DIRECTION_COUNT = 8
};

#pragma pack(push, 4)

struct sKVector2f
{
    float X;
    float Y;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKEffectPush
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    enum eKPushDirection Direction;
    long bFade;
    struct sKVector2f Position;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKEffectTransform
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    struct sKVector3f Position;
    struct sKVector3f Center;
    struct sKVector3f Scale;
    struct sKVector3f Rotation;
    long bFade;
    int TrailCount;
};

#pragma pack(pop)

enum eKCurlDirection
{
    DIRECTION_FRONT = 0,
    DIRECTION_BACK = 1
};

enum eKCurlFace
{
    FACE_FRONT = 0,
    FACE_BACK = 1,
    FACE_BOTH = 2
};

#pragma pack(push, 4)

struct sKEffectCurl
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    float AngleRadian;
    float CircleRadius;
    long bConeType;
    struct sKVector2f Origin;
    long Fade;
    enum eKCurlDirection Direction;
    enum eKCurlFace Face;
};

#pragma pack(pop)

enum eKRippleShape
{
    RIPPLE_SHAPE_WATER = 0,
    RIPPLE_SHAPE_FLAG = 1,
    RIPPLE_SHAPE_COUNT = 2
};

#pragma pack(push, 4)

struct sKEffectRipple
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    enum eKRippleShape Shape;
    float Freq;
    float Amp;
    float Period;
    long FadeEnabled;
    struct sKVector2f WaterPos;
    int WaterCount;
    int Slant;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKVector2i
{
    int X;
    int Y;
};

#pragma pack(pop)

enum eKParticleShape
{
    PARTICLE_SHAPE_TILE = 0,
    PARTICLE_SHAPE_RANDOM = 1,
    PARTICLE_SHAPE_RADIAL = 2,
    PARTICLE_SHAPE_COUNT = 3
};

enum eKOrder
{
    ORDER_ATONCE = 0,
    ORDER_RANDOM = 1,
    ORDER_TOP = 2,
    ORDER_BOTTOM = 3,
    ORDER_LEFT = 4,
    ORDER_RIGHT = 5,
    ORDER_TOPLEFT = 6,
    ORDER_TOPRIGHT = 7,
    ORDER_BOTTOMLEFT = 8,
    ORDER_BOTTOMRIGHT = 9,
    ORDER_POINT_CENTER = 10,
    ORDER_POINT_SIDE = 11,
    ORDER_SNAKE_TOP = 12,
    ORDER_SNAKE_BOTTOM = 13,
    ORDER_SNAKE_LEFT = 14,
    ORDER_SNAKE_RIGHT = 15,
    ORDER_SNAKE_CENTER = 16,
    ORDER_SNAKE_SIDE = 17,
    ORDER_COUNT = 18
};

#pragma pack(push, 4)

struct sKEffectParticle
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    struct sKVector2i Divide;
    struct sKVector3f Whirl;
    struct sKVector3f RangeVolume;
    struct sKVector3f Scale;
    struct sKVector3f StartPos;
    struct sKVector3f BaseRotate;
    float DurationRate;
    long bBirthAtOnce;
    int TrailCount;
    long bRandomRotate;
    long bFade;
    enum eKParticleShape Shape;
    enum eKOrder Order;
};

#pragma pack(pop)

enum eKMatteType
{
    MATTE_NONE = 0,
    MATTE_IMAGE = 1,
    MATTE_MOVIE = 2
};

#pragma pack(push, 4)

struct sKEffectFade
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    enum eKMatteType MatteType;
    BSTR FileName;
    long bInvertMatte;
    long bUseMatte;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKEffectDistortion
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    BSTR FileName;
    float Height;
};

#pragma pack(pop)

enum eKBlendType
{
    BLEND_TYPE_MIX = 0,
    BLEND_TYPE_FILL = 1,
    BLEND_TYPE_COUNT = 2
};

#pragma pack(push, 4)

struct sKEffectBlink
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    int Period;
    struct sKColor4f FrontColor;
    struct sKColor4f BackColor;
    enum eKBlendType FrontBlendType;
    enum eKBlendType BackBlendType;
    long KeepColor;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKRectf
{
    float Top;
    float Left;
    float Bottom;
    float Right;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKEffectCrop
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    struct sKRectf Rect;
};

#pragma pack(pop)

enum eKBlurType
{
    BLUR_TYPE_LINEAR = 0,
    BLUR_TYPE_ZOOM = 1,
    BLUR_TYPE_GAUSSIAN = 2,
    BLUR_TYPE_COUNT = 3
};

enum eKGradationType
{
    GRADATION_TYPE_DISABLED = 0,
    GRADATION_TYPE_ENABLED = 1
};

#pragma pack(push, 4)

struct sKColorTickf
{
    float R;
    float G;
    float B;
    float A;
    int AbsPercent;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKAlphaTick
{
    int Alpha;
    int AbsPercent;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKEffectBlur
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    enum eKBlurType BlurType;
    float Distance;
    float BlurStrength;
    float SourceStrength;
    float Angle;
    struct sKVector2f Center;
    enum eKGradationType GradationType;
    int BlurPass;
    int ColorTickCount;
    struct sKColorTickf * pColorTick;
    int AlphaTickCount;
    struct sKAlphaTick * pAlphaTick;
};

#pragma pack(pop)

enum eKColorType
{
    COLOR_TYPE_HSL = 0,
    COLOR_TYPE_BRIGHTNESS_CONTRAST = 1,
    COLOR_TYPE_COUNT = 2
};

enum eKShapeType
{
    SHAPE_TYPE_GLOBAL = 0,
    SHAPE_TYPE_CIRCULAR = 1,
    SHAPE_TYPE_LINEAR = 2,
    SHAPE_TYPE_COUNT = 3
};

#pragma pack(push, 4)

struct sKEffectColor
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    enum eKColorType ColorType;
    float Hue;
    float Saturation;
    float Lightness;
    float Brightness;
    float Contrast;
    enum eKShapeType ShapeType;
    struct sKVector2f Position;
    float Range;
    float Angle;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKEffectSidefade
{
    enum eKEffectTarget EffectTarget;
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bOverlayChange;
    long bMovingChange;
    long bFullScreenEffect;
    struct sKRectf FadeRect;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKEffectCutOut
{
    int Duration;
    int Delay;
    enum eKTimingType Timing;
    long bFullScreenEffect;
};

#pragma pack(pop)

struct __declspec(uuid("e2fc3835-637c-4cee-a475-fb459cedbea1"))
IKAEffect : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetEffectNone ( );
    HRESULT SetEffectWipe (
        struct sKEffectWipe * pKEffect );
    HRESULT SetEffectPush (
        struct sKEffectPush * pKEffect );
    HRESULT SetEffectTransform (
        struct sKEffectTransform * pKEffect );
    HRESULT SetEffectCurl (
        struct sKEffectCurl * pKEffect );
    HRESULT SetEffectRipple (
        struct sKEffectRipple * pKEffect );
    HRESULT SetEffectParticle (
        struct sKEffectParticle * pKEffect );
    HRESULT SetEffectFade (
        struct sKEffectFade * pKEffect );
    HRESULT SetEffectDistortion (
        struct sKEffectDistortion * pKEffect );
    HRESULT SetEffectBlink (
        struct sKEffectBlink * pKEffect );
    HRESULT SetEffectCrop (
        struct sKEffectCrop * pKEffect );
    HRESULT SetEffectBlur (
        struct sKEffectBlur * pKEffect );
    HRESULT SetEffectColor (
        struct sKEffectColor * pKEffect );
    HRESULT SetEffectSidefade (
        struct sKEffectSidefade * pKEffect );
    HRESULT SetEffectCutOut (
        struct sKEffectCutOut * pKEffect );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SetEffectNone ( ) = 0;
      virtual HRESULT __stdcall raw_SetEffectWipe (
        /*[in]*/ struct sKEffectWipe * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectPush (
        /*[in]*/ struct sKEffectPush * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectTransform (
        /*[in]*/ struct sKEffectTransform * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectCurl (
        /*[in]*/ struct sKEffectCurl * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectRipple (
        /*[in]*/ struct sKEffectRipple * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectParticle (
        /*[in]*/ struct sKEffectParticle * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectFade (
        /*[in]*/ struct sKEffectFade * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectDistortion (
        /*[in]*/ struct sKEffectDistortion * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectBlink (
        /*[in]*/ struct sKEffectBlink * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectCrop (
        /*[in]*/ struct sKEffectCrop * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectBlur (
        /*[in]*/ struct sKEffectBlur * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectColor (
        /*[in]*/ struct sKEffectColor * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectSidefade (
        /*[in]*/ struct sKEffectSidefade * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_SetEffectCutOut (
        /*[in]*/ struct sKEffectCutOut * pKEffect ) = 0;
};

struct __declspec(uuid("b138b515-505b-4c7b-a3e1-f82782005ecf"))
IKAObject : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetVisible (
        long bShow );
    HRESULT SetFont (
        struct sKFont * pFont );
    HRESULT SetMaterial (
        struct sKMaterial * pKMaterial );
    HRESULT SetValue (
        _bstr_t Value );
    HRESULT QueryClassType ( );
    HRESULT ReplaceWithAFile (
        _bstr_t ReplaceFileName );
    HRESULT QueryChartTable ( );
    HRESULT SetChartCSVFile (
        _bstr_t FilePath );
    HRESULT SetChartCellData (
        int Row,
        int Column,
        float Data );
    HRESULT SetLightColor (
        struct sKLightColor * pKLightColor );
    HRESULT SetLightAttribute (
        struct sKLightAttribute * psKLightAttribute );
    HRESULT SetStyleColor (
        struct sKStyleColor * pKStyleColor );
    HRESULT SetFaceColor (
        int R,
        int G,
        int B,
        int A );
    HRESULT SetEdgeColor (
        int R,
        int G,
        int B,
        int A );
    HRESULT SetShadowColor (
        int R,
        int G,
        int B,
        int A );
    HRESULT SetFaceAttribute (
        struct sKFaceAttribute * pAttributeParam );
    HRESULT SetEdgeAttribute (
        struct sKEdgeAttribute * pAttributeParam );
    HRESULT SetShadowAttribute (
        struct sKShadowAttribute * pAttributeParam );
    HRESULT QueryObjectAttribute (
        struct sKObjectAttribute * pKObjectAttribute );
    HRESULT SetObjectAttribute (
        struct sKObjectAttribute * pKObjectAttribute );
    HRESULT AddText (
        _bstr_t Text,
        int StyleNo );
    HRESULT StoreTextStyle ( );
    HRESULT SetTextStyle (
        int Begin,
        int Count,
        int StyleNo );
    HRESULT EditText (
        _bstr_t Text,
        int BeginPos,
        int EndPos,
        int StyleNo );
    HRESULT QuerySize ( );
    HRESULT SetSize (
        float Width,
        float Height,
        float Depth );
    HRESULT SetDefaultAnimationType (
        enum eKAnimationType AnimationType );
    HRESULT SetAnimationType (
        int AnimationType );
    HRESULT SetAnimationName (
        _bstr_t AnimationName );
    HRESULT SetCounterNumberKey (
        int KeyIndex,
        double Number );
    HRESULT SetPositionKey (
        int KeyIndex,
        float X,
        float Y,
        float Z,
        enum eKVectorType VectorType );
    HRESULT SetRotationKey (
        int KeyIndex,
        float X,
        float Y,
        float Z,
        enum eKVectorType VectorType );
    HRESULT SetScaleKey (
        int KeyIndex,
        float X,
        float Y,
        float Z,
        enum eKVectorType VectorType );
    HRESULT SetCylinderAngleKey (
        int KeyIndex,
        float Start,
        float End,
        enum eKAngleKey AngleKeyType );
    HRESULT SetSphereAngleKey (
        int KeyIndex,
        float Start,
        float End,
        enum eKAngleKey AngleKeyType );
    HRESULT SetCircleAngleKey (
        int KeyIndex,
        float Start,
        float End,
        enum eKAngleKey AngleKeyType );
    HRESULT SetCropKey (
        int KeyIndex,
        float Left,
        float Top,
        float Right,
        float Bottom,
        enum eKCropKey CropKeyType );
    HRESULT SetMaterialKey (
        int KeyIndex,
        struct sKMaterial * pKMaterial );
    HRESULT SetPosition (
        float X,
        float Y,
        float Z,
        enum eKVectorType VectorType );
    HRESULT SetRotation (
        float X,
        float Y,
        float Z,
        enum eKVectorType VectorType );
    HRESULT SetScale (
        float X,
        float Y,
        float Z,
        enum eKVectorType VectorType );
    HRESULT SetLensFlaresKey (
        int KeyIndex,
        float X,
        float Y,
        float Z,
        enum eKVectorType VectorType );
    HRESULT SetFaceTextColor (
        int BeginPos,
        int Count,
        int R,
        int G,
        int B,
        int A );
    HRESULT SetEdgeTextColor (
        int BeginPos,
        int Count,
        int R,
        int G,
        int B,
        int A );
    HRESULT SetShadowTextColor (
        int BeginPos,
        int Count,
        int R,
        int G,
        int B,
        int A );
    int GetAnimationType ( );
    _bstr_t GetAnimationName ( );
    HRESULT SetTextBlockFont (
        int BeginPos,
        int Count,
        struct sKFont * pFont );
    HRESULT BeginPathPoint ( );
    HRESULT EndPathPoint ( );
    HRESULT AddPathPoint (
        float X,
        float Y,
        float Z );
    HRESULT ClearPathPoints ( );
    HRESULT SetOpacity (
        int Opacity );
    HRESULT BeginPathShapePoint ( );
    HRESULT EndPathShapePoint ( );
    HRESULT AddPathShapePoint (
        float X,
        float Y,
        float Z );
    HRESULT ClearPathShapePoints ( );
    HRESULT SetOpacityKey (
        int KeyIndex,
        int Opacity );
    HRESULT QueryScrollRemainingDistance ( );
    HRESULT AddScrollObject (
        _bstr_t SceneName,
        _bstr_t ChildName,
        int Interval );
    HRESULT AdjustScrollSpeed (
        float SpeedDelta );
    HRESULT SetScrollSpeed (
        float Speed );
    HRESULT SetVariableName (
        _bstr_t VariableName );
    HRESULT SetDiffuse (
        int R,
        int G,
        int B );
    HRESULT SetAmbient (
        int R,
        int G,
        int B );
    HRESULT SetSpecular (
        int R,
        int G,
        int B );
    HRESULT SetEmissive (
        int R,
        int G,
        int B );
    HRESULT SetDiffuseKey (
        int KeyIndex,
        int R,
        int G,
        int B );
    HRESULT SetAmbientKey (
        int KeyIndex,
        int R,
        int G,
        int B );
    HRESULT SetSpecularKey (
        int KeyIndex,
        int R,
        int G,
        int B );
    HRESULT SetEmissiveKey (
        int KeyIndex,
        int R,
        int G,
        int B );
    HRESULT BeginPathPointEx ( );
    HRESULT AddPathPointEx (
        struct sKVector3f * CurrentPoint,
        struct sKVector3f * PrevPoint,
        struct sKVector3f * NextPoint );
    HRESULT SetLoftPositionKey (
        int KeyIndex,
        float Start,
        float End );
    HRESULT SetStyleTexture (
        _bstr_t FileName );
    HRESULT SetTextTexture (
        _bstr_t FileName );
    HRESULT SetDiffuseTexture (
        _bstr_t FileName );
    HRESULT SetSpecularTexture (
        _bstr_t FileName );
    HRESULT SetTransparencyTexture (
        _bstr_t FileName );
    HRESULT SetNormalTexture (
        _bstr_t FileName );
    HRESULT SetReflectionTexture (
        _bstr_t FileName );
    HRESULT SetRefractionTexture (
        _bstr_t FileName );
    HRESULT ModifyPathPoint (
        int Index,
        float X,
        float Y,
        float Z,
        enum eKVectorType VectorType );
    HRESULT SetVideoFrame (
        int StartFrame,
        int StopFrame );
    HRESULT SetVideoRepeatInfo (
        int StartFrame,
        int StopFrame,
        int LoopCount,
        long bInfinite,
        long bPlayAsOut );
    HRESULT SetTextStyleLibrary (
        _bstr_t Text,
        int StyleID );
    HRESULT AddTextStyleLibrary (
        _bstr_t Text,
        int StyleID );
    HRESULT InitScrollObject ( );
    HRESULT SetCounterInfo (
        _bstr_t Format,
        int UpdatePeriod,
        long bAddPlusSign );
    HRESULT SetCounterNumber (
        double Number );
    HRESULT SetCounterRange (
        double StartTime,
        double EndTime );
    HRESULT SetCounterRemainingTime (
        double BaseTime );
    HRESULT SetCounterElapsedTime (
        double BaseTime );
    HRESULT SaveObjectImage (
        _bstr_t FileName );
    HRESULT DragObject (
        int X,
        int Y,
        int FrameCount );
    HRESULT ResetDrag (
        int FrameCount );
    HRESULT SetPositionOfPathAnimation (
        float Position );
    HRESULT SetPositionKeyOfPathAnimation (
        int KeyIndex,
        float Position );
    HRESULT SetStyleItemTexture (
        enum eKStyleType ItemType,
        int ItemIndex,
        _bstr_t FileName );
    HRESULT SetKeyFrame (
        enum eKObjectAttribute AttributeType,
        int KeyIndex,
        int Frame,
        enum eKKeyFrameType KeyFrameType );
    HRESULT SetKeyInterpolation (
        enum eKObjectAttribute AttributeType,
        int KeyIndex,
        enum eKKeyInterpolationType InInterpolation,
        enum eKKeyInterpolationType OutInterpolation );
    HRESULT SetStartFrame (
        int Frame );
    HRESULT SetAnimationLibrary (
        _bstr_t Name,
        int bApplyAtCurrentPosition );
    HRESULT SetMaterialLibrary (
        _bstr_t Name );
    HRESULT SetStyleLibrary (
        _bstr_t Name );
    HRESULT SetObjectEffectType (
        long bInEffect,
        enum eKEffectType EffectType,
        int Duration );
    HRESULT MoveCamera (
        int X,
        int Y,
        int Z,
        int FrameCount );
    HRESULT QueryGroupType ( );
    HRESULT QueryImageType (
        enum eKTextureTarget TextureTarget );
    HRESULT SetDiffuseTextColor (
        int BeginPos,
        int Count,
        int R,
        int G,
        int B,
        int A );
    HRESULT SetVideoPlayInfo (
        enum eKTextureTarget TextureTarget,
        struct sKVideoPlayInfo * pVideoPlayInfo );
    HRESULT QueryVideoPlayInfo (
        enum eKTextureTarget TextureTarget );
    HRESULT QueryIs3D ( );
    HRESULT QueryScrollChildRemainingDistance (
        _bstr_t ChildName );
    HRESULT SetImageType (
        enum eKTextureTarget TextureTarget,
        enum eKImageType ImageType );
    IKAMaterialPtr GetTargetMaterial (
        enum eKMaterialTarget Target );
    HRESULT SetMemo (
        _bstr_t Memo );
    HRESULT QueryMemo ( );
    IKAEffectPtr GetKAEffect ( );
    HRESULT QueryFont ( );
    HRESULT SetImageOriginalSize ( );
    HRESULT ApplyLibrary (
        _bstr_t LibraryPath,
        enum eKEffectTarget EffectTarget );
    HRESULT SetTableValue (
        int Row,
        int Column,
        _bstr_t Value );
    HRESULT SetTableColor (
        int Row,
        int Column,
        struct sKColor Color );
    HRESULT QueryTableValue (
        int Row,
        int Column );
    HRESULT QueryTableValues ( );
    HRESULT SetPathShapeOutlineThickness (
        float Thickness );
    HRESULT EnablePathShapeOutline (
        long bEnable );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SetVisible (
        /*[in]*/ long bShow ) = 0;
      virtual HRESULT __stdcall raw_SetFont (
        /*[in]*/ struct sKFont * pFont ) = 0;
      virtual HRESULT __stdcall raw_SetMaterial (
        /*[in]*/ struct sKMaterial * pKMaterial ) = 0;
      virtual HRESULT __stdcall raw_SetValue (
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_QueryClassType ( ) = 0;
      virtual HRESULT __stdcall raw_ReplaceWithAFile (
        /*[in]*/ BSTR ReplaceFileName ) = 0;
      virtual HRESULT __stdcall raw_QueryChartTable ( ) = 0;
      virtual HRESULT __stdcall raw_SetChartCSVFile (
        /*[in]*/ BSTR FilePath ) = 0;
      virtual HRESULT __stdcall raw_SetChartCellData (
        /*[in]*/ int Row,
        /*[in]*/ int Column,
        /*[in]*/ float Data ) = 0;
      virtual HRESULT __stdcall raw_SetLightColor (
        /*[in]*/ struct sKLightColor * pKLightColor ) = 0;
      virtual HRESULT __stdcall raw_SetLightAttribute (
        /*[in]*/ struct sKLightAttribute * psKLightAttribute ) = 0;
      virtual HRESULT __stdcall raw_SetStyleColor (
        /*[in]*/ struct sKStyleColor * pKStyleColor ) = 0;
      virtual HRESULT __stdcall raw_SetFaceColor (
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_SetEdgeColor (
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_SetShadowColor (
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_SetFaceAttribute (
        /*[in]*/ struct sKFaceAttribute * pAttributeParam ) = 0;
      virtual HRESULT __stdcall raw_SetEdgeAttribute (
        /*[in]*/ struct sKEdgeAttribute * pAttributeParam ) = 0;
      virtual HRESULT __stdcall raw_SetShadowAttribute (
        /*[in]*/ struct sKShadowAttribute * pAttributeParam ) = 0;
      virtual HRESULT __stdcall raw_QueryObjectAttribute (
        /*[in]*/ struct sKObjectAttribute * pKObjectAttribute ) = 0;
      virtual HRESULT __stdcall raw_SetObjectAttribute (
        /*[in]*/ struct sKObjectAttribute * pKObjectAttribute ) = 0;
      virtual HRESULT __stdcall raw_AddText (
        /*[in]*/ BSTR Text,
        /*[in]*/ int StyleNo ) = 0;
      virtual HRESULT __stdcall raw_StoreTextStyle ( ) = 0;
      virtual HRESULT __stdcall raw_SetTextStyle (
        /*[in]*/ int Begin,
        /*[in]*/ int Count,
        /*[in]*/ int StyleNo ) = 0;
      virtual HRESULT __stdcall raw_EditText (
        /*[in]*/ BSTR Text,
        /*[in]*/ int BeginPos,
        /*[in]*/ int EndPos,
        /*[in]*/ int StyleNo ) = 0;
      virtual HRESULT __stdcall raw_QuerySize ( ) = 0;
      virtual HRESULT __stdcall raw_SetSize (
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ float Depth ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultAnimationType (
        /*[in]*/ enum eKAnimationType AnimationType ) = 0;
      virtual HRESULT __stdcall raw_SetAnimationType (
        /*[in]*/ int AnimationType ) = 0;
      virtual HRESULT __stdcall raw_SetAnimationName (
        /*[in]*/ BSTR AnimationName ) = 0;
      virtual HRESULT __stdcall raw_SetCounterNumberKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ double Number ) = 0;
      virtual HRESULT __stdcall raw_SetPositionKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z,
        /*[in]*/ enum eKVectorType VectorType ) = 0;
      virtual HRESULT __stdcall raw_SetRotationKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z,
        /*[in]*/ enum eKVectorType VectorType ) = 0;
      virtual HRESULT __stdcall raw_SetScaleKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z,
        /*[in]*/ enum eKVectorType VectorType ) = 0;
      virtual HRESULT __stdcall raw_SetCylinderAngleKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Start,
        /*[in]*/ float End,
        /*[in]*/ enum eKAngleKey AngleKeyType ) = 0;
      virtual HRESULT __stdcall raw_SetSphereAngleKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Start,
        /*[in]*/ float End,
        /*[in]*/ enum eKAngleKey AngleKeyType ) = 0;
      virtual HRESULT __stdcall raw_SetCircleAngleKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Start,
        /*[in]*/ float End,
        /*[in]*/ enum eKAngleKey AngleKeyType ) = 0;
      virtual HRESULT __stdcall raw_SetCropKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Right,
        /*[in]*/ float Bottom,
        /*[in]*/ enum eKCropKey CropKeyType ) = 0;
      virtual HRESULT __stdcall raw_SetMaterialKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKMaterial * pKMaterial ) = 0;
      virtual HRESULT __stdcall raw_SetPosition (
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z,
        /*[in]*/ enum eKVectorType VectorType ) = 0;
      virtual HRESULT __stdcall raw_SetRotation (
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z,
        /*[in]*/ enum eKVectorType VectorType ) = 0;
      virtual HRESULT __stdcall raw_SetScale (
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z,
        /*[in]*/ enum eKVectorType VectorType ) = 0;
      virtual HRESULT __stdcall raw_SetLensFlaresKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z,
        /*[in]*/ enum eKVectorType VectorType ) = 0;
      virtual HRESULT __stdcall raw_SetFaceTextColor (
        /*[in]*/ int BeginPos,
        /*[in]*/ int Count,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_SetEdgeTextColor (
        /*[in]*/ int BeginPos,
        /*[in]*/ int Count,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_SetShadowTextColor (
        /*[in]*/ int BeginPos,
        /*[in]*/ int Count,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_GetAnimationType (
        /*[out,retval]*/ int * pAnimationType ) = 0;
      virtual HRESULT __stdcall raw_GetAnimationName (
        /*[out,retval]*/ BSTR * pAnimationName ) = 0;
      virtual HRESULT __stdcall raw_SetTextBlockFont (
        /*[in]*/ int BeginPos,
        /*[in]*/ int Count,
        /*[in]*/ struct sKFont * pFont ) = 0;
      virtual HRESULT __stdcall raw_BeginPathPoint ( ) = 0;
      virtual HRESULT __stdcall raw_EndPathPoint ( ) = 0;
      virtual HRESULT __stdcall raw_AddPathPoint (
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_ClearPathPoints ( ) = 0;
      virtual HRESULT __stdcall raw_SetOpacity (
        /*[in]*/ int Opacity ) = 0;
      virtual HRESULT __stdcall raw_BeginPathShapePoint ( ) = 0;
      virtual HRESULT __stdcall raw_EndPathShapePoint ( ) = 0;
      virtual HRESULT __stdcall raw_AddPathShapePoint (
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_ClearPathShapePoints ( ) = 0;
      virtual HRESULT __stdcall raw_SetOpacityKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ int Opacity ) = 0;
      virtual HRESULT __stdcall raw_QueryScrollRemainingDistance ( ) = 0;
      virtual HRESULT __stdcall raw_AddScrollObject (
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ChildName,
        /*[in]*/ int Interval ) = 0;
      virtual HRESULT __stdcall raw_AdjustScrollSpeed (
        /*[in]*/ float SpeedDelta ) = 0;
      virtual HRESULT __stdcall raw_SetScrollSpeed (
        /*[in]*/ float Speed ) = 0;
      virtual HRESULT __stdcall raw_SetVariableName (
        /*[in]*/ BSTR VariableName ) = 0;
      virtual HRESULT __stdcall raw_SetDiffuse (
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_SetAmbient (
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_SetSpecular (
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_SetEmissive (
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_SetDiffuseKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_SetAmbientKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_SetSpecularKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_SetEmissiveKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_BeginPathPointEx ( ) = 0;
      virtual HRESULT __stdcall raw_AddPathPointEx (
        /*[in]*/ struct sKVector3f * CurrentPoint,
        /*[in]*/ struct sKVector3f * PrevPoint,
        /*[in]*/ struct sKVector3f * NextPoint ) = 0;
      virtual HRESULT __stdcall raw_SetLoftPositionKey (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Start,
        /*[in]*/ float End ) = 0;
      virtual HRESULT __stdcall raw_SetStyleTexture (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetTextTexture (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetDiffuseTexture (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetSpecularTexture (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetTransparencyTexture (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetNormalTexture (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetReflectionTexture (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetRefractionTexture (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_ModifyPathPoint (
        /*[in]*/ int Index,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z,
        /*[in]*/ enum eKVectorType VectorType ) = 0;
      virtual HRESULT __stdcall raw_SetVideoFrame (
        /*[in]*/ int StartFrame,
        /*[in]*/ int StopFrame ) = 0;
      virtual HRESULT __stdcall raw_SetVideoRepeatInfo (
        /*[in]*/ int StartFrame,
        /*[in]*/ int StopFrame,
        /*[in]*/ int LoopCount,
        /*[in]*/ long bInfinite,
        /*[in]*/ long bPlayAsOut ) = 0;
      virtual HRESULT __stdcall raw_SetTextStyleLibrary (
        /*[in]*/ BSTR Text,
        /*[in]*/ int StyleID ) = 0;
      virtual HRESULT __stdcall raw_AddTextStyleLibrary (
        /*[in]*/ BSTR Text,
        /*[in]*/ int StyleID ) = 0;
      virtual HRESULT __stdcall raw_InitScrollObject ( ) = 0;
      virtual HRESULT __stdcall raw_SetCounterInfo (
        /*[in]*/ BSTR Format,
        /*[in]*/ int UpdatePeriod,
        /*[in]*/ long bAddPlusSign ) = 0;
      virtual HRESULT __stdcall raw_SetCounterNumber (
        /*[in]*/ double Number ) = 0;
      virtual HRESULT __stdcall raw_SetCounterRange (
        /*[in]*/ double StartTime,
        /*[in]*/ double EndTime ) = 0;
      virtual HRESULT __stdcall raw_SetCounterRemainingTime (
        /*[in]*/ double BaseTime ) = 0;
      virtual HRESULT __stdcall raw_SetCounterElapsedTime (
        /*[in]*/ double BaseTime ) = 0;
      virtual HRESULT __stdcall raw_SaveObjectImage (
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_DragObject (
        /*[in]*/ int X,
        /*[in]*/ int Y,
        /*[in]*/ int FrameCount ) = 0;
      virtual HRESULT __stdcall raw_ResetDrag (
        /*[in]*/ int FrameCount ) = 0;
      virtual HRESULT __stdcall raw_SetPositionOfPathAnimation (
        /*[in]*/ float Position ) = 0;
      virtual HRESULT __stdcall raw_SetPositionKeyOfPathAnimation (
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Position ) = 0;
      virtual HRESULT __stdcall raw_SetStyleItemTexture (
        enum eKStyleType ItemType,
        int ItemIndex,
        BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_SetKeyFrame (
        enum eKObjectAttribute AttributeType,
        int KeyIndex,
        int Frame,
        enum eKKeyFrameType KeyFrameType ) = 0;
      virtual HRESULT __stdcall raw_SetKeyInterpolation (
        enum eKObjectAttribute AttributeType,
        int KeyIndex,
        enum eKKeyInterpolationType InInterpolation,
        enum eKKeyInterpolationType OutInterpolation ) = 0;
      virtual HRESULT __stdcall raw_SetStartFrame (
        int Frame ) = 0;
      virtual HRESULT __stdcall raw_SetAnimationLibrary (
        BSTR Name,
        int bApplyAtCurrentPosition ) = 0;
      virtual HRESULT __stdcall raw_SetMaterialLibrary (
        BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_SetStyleLibrary (
        BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_SetObjectEffectType (
        /*[in]*/ long bInEffect,
        /*[in]*/ enum eKEffectType EffectType,
        /*[in]*/ int Duration ) = 0;
      virtual HRESULT __stdcall raw_MoveCamera (
        /*[in]*/ int X,
        /*[in]*/ int Y,
        /*[in]*/ int Z,
        /*[in]*/ int FrameCount ) = 0;
      virtual HRESULT __stdcall raw_QueryGroupType ( ) = 0;
      virtual HRESULT __stdcall raw_QueryImageType (
        /*[in]*/ enum eKTextureTarget TextureTarget ) = 0;
      virtual HRESULT __stdcall raw_SetDiffuseTextColor (
        /*[in]*/ int BeginPos,
        /*[in]*/ int Count,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_SetVideoPlayInfo (
        /*[in]*/ enum eKTextureTarget TextureTarget,
        /*[in]*/ struct sKVideoPlayInfo * pVideoPlayInfo ) = 0;
      virtual HRESULT __stdcall raw_QueryVideoPlayInfo (
        /*[in]*/ enum eKTextureTarget TextureTarget ) = 0;
      virtual HRESULT __stdcall raw_QueryIs3D ( ) = 0;
      virtual HRESULT __stdcall raw_QueryScrollChildRemainingDistance (
        /*[in]*/ BSTR ChildName ) = 0;
      virtual HRESULT __stdcall raw_SetImageType (
        /*[in]*/ enum eKTextureTarget TextureTarget,
        /*[in]*/ enum eKImageType ImageType ) = 0;
      virtual HRESULT __stdcall raw_GetTargetMaterial (
        /*[in]*/ enum eKMaterialTarget Target,
        /*[out,retval]*/ struct IKAMaterial * * ppIMaterial ) = 0;
      virtual HRESULT __stdcall raw_SetMemo (
        /*[in]*/ BSTR Memo ) = 0;
      virtual HRESULT __stdcall raw_QueryMemo ( ) = 0;
      virtual HRESULT __stdcall raw_GetKAEffect (
        /*[out,retval]*/ struct IKAEffect * * IEffect ) = 0;
      virtual HRESULT __stdcall raw_QueryFont ( ) = 0;
      virtual HRESULT __stdcall raw_SetImageOriginalSize ( ) = 0;
      virtual HRESULT __stdcall raw_ApplyLibrary (
        /*[in]*/ BSTR LibraryPath,
        /*[in]*/ enum eKEffectTarget EffectTarget ) = 0;
      virtual HRESULT __stdcall raw_SetTableValue (
        /*[in]*/ int Row,
        /*[in]*/ int Column,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_SetTableColor (
        /*[in]*/ int Row,
        /*[in]*/ int Column,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_QueryTableValue (
        /*[in]*/ int Row,
        /*[in]*/ int Column ) = 0;
      virtual HRESULT __stdcall raw_QueryTableValues ( ) = 0;
      virtual HRESULT __stdcall raw_SetPathShapeOutlineThickness (
        /*[in]*/ float Thickness ) = 0;
      virtual HRESULT __stdcall raw_EnablePathShapeOutline (
        /*[in]*/ long bEnable ) = 0;
};

enum eKBackgroundType
{
    BACKGROUND_TYPE_NONE = 0,
    BACKGROUND_TYPE_COLOR = 1,
    BACKGROUND_TYPE_TEXTURE = 2,
    BACKGROUND_TYPE_VIDEO = 3
};

#pragma pack(push, 4)

struct sKBackground
{
    enum eKBackgroundType Type;
    BSTR TextureFilePath;
    int R;
    int G;
    int B;
};

#pragma pack(pop)

enum eKSceneEffectType
{
    SCENE_CHANGE_EFFECT_NONE = 0,
    SCENE_CHANGE_EFFECT_WIPE = 1,
    SCENE_CHANGE_EFFECT_PUSH = 2,
    SCENE_CHANGE_EFFECT_TRANSFORM = 3,
    SCENE_CHANGE_EFFECT_CURL = 4,
    SCENE_CHANGE_EFFECT_RIPPLE = 5,
    SCENE_CHANGE_EFFECT_PARTICLE = 6,
    SCENE_CHANGE_EFFECT_FADE = 7,
    SCENE_CHANGE_EFFECT_DISTORTION = 8,
    SCENE_CHANGE_EFFECT_BLINK = 9,
    SCENE_CHANGE_EFFECT_CROP = 10,
    SCENE_CHANGE_EFFECT_BLUR = 11,
    SCENE_CHANGE_EFFECT_COLOR = 12,
    SCENE_CHANGE_EFFECT_SIDE_FADE = 13,
    SCENE_CHANGE_EFFECT_CUT_OUT = 14,
    SCENE_CHANGE_EFFECT_COUNT = 15
};

enum eKChangeOutType
{
    CHANGE_OUT_TYPE_CHANGE_OUT = 0,
    CHANGE_OUT_TYPE_DEFAULT_OUT = 1,
    CHANGE_OUT_TYPE_CUT_OUT = 2
};

enum eKBackgroundChangeType
{
    BACKGROUND_CHANGE_TYPE_KEEP_WHEN_INFINITE_LOOP = 0,
    BACKGROUND_CHANGE_TYPE_ALWAYS_CHANGE = 1,
    BACKGROUND_CHANGE_TYPE_ALWAYS_KEEP = 2
};

enum eKBackgroundPauseType
{
    BACKGROUND_PAUSE_TYPE_IGNORE_WHEN_INFINITE_LOOP = 0,
    BACKGROUND_PAUSE_TYPE_WHEN_PAUSED = 1,
    BACKGROUND_PAUSE_TYPE_IGNORE = 2
};

struct __declspec(uuid("48c5f034-5e76-4047-9afd-f6f54acdfe5b"))
IKACamera : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT SetAnimationName (
        _bstr_t AnimationName );
    HRESULT SetMoveTo (
        float X,
        float Y,
        float Z );
    HRESULT SetRotateTo (
        float Pitch,
        float Yaw,
        float Roll );
    HRESULT SetVerticalFOV (
        float Angle );
    HRESULT SetDelay (
        int Delay );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_SetAnimationName (
        /*[in]*/ BSTR AnimationName ) = 0;
      virtual HRESULT __stdcall raw_SetMoveTo (
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_SetRotateTo (
        /*[in]*/ float Pitch,
        /*[in]*/ float Yaw,
        /*[in]*/ float Roll ) = 0;
      virtual HRESULT __stdcall raw_SetVerticalFOV (
        /*[in]*/ float Angle ) = 0;
      virtual HRESULT __stdcall raw_SetDelay (
        /*[in]*/ int Delay ) = 0;
};

#pragma pack(push, 4)

struct sKSize
{
    int cx;
    int cy;
};

#pragma pack(pop)

enum eKFrameRate
{
    FRAME_RATE_2398 = 0,
    FRAME_RATE_2400 = 1,
    FRAME_RATE_2500 = 2,
    FRAME_RATE_2997 = 3,
    FRAME_RATE_3000 = 4,
    FRAME_RATE_5000 = 5,
    FRAME_RATE_5994 = 6,
    FRAME_RATE_6000 = 7,
    FRAME_RATE_COUNT = 8
};

enum eKScan
{
    SCAN_PROGRESSIVE = 0,
    SCAN_UPPER_FIELD_FIRST = 1,
    SCAN_LOWER_FIELD_FIRST = 2,
    SCAN_PROGRESSIVE_SEGMENTED = 3,
    SCAN_COUNT = 4
};

#pragma pack(push, 4)

struct sKVideoFormat
{
    struct sKSize FrameSize;
    enum eKFrameRate FrameRate;
    enum eKScan ScanMode;
};

#pragma pack(pop)

enum eKCodec
{
    CODEC_IBP_420 = 0,
    CODEC_IBP_422 = 1,
    CODEC_MPEG2 = 2,
    CODEC_MPEG2_DVD = 3,
    CODEC_IFRAME_420 = 4,
    CODEC_IFRAME_422 = 5,
    CODEC_IFRAME_4224 = 6,
    CODEC_XDCAM_HD_25 = 7,
    CODEC_XDCAM_HD_35 = 8,
    CODEC_XDCAM_HD_422 = 9,
    CODEC_DNXHD_LB = 10,
    CODEC_DNXHD_SQ = 11,
    CODEC_DNXHD_HQ = 12,
    CODEC_DNXHD_WITH_ALPHA = 13,
    CODEC_DNXHR_LB = 14,
    CODEC_DNXHR_SQ = 15,
    CODEC_DNXHR_HQ = 16,
    CODEC_DNXHR_HQX = 17,
    CODEC_DNXHR_444 = 18,
    CODEC_DVCAM_411 = 19,
    CODEC_DVCAM_420 = 20,
    CODEC_DVCPRO_411 = 21,
    CODEC_DVCPRO_50_422 = 22,
    CODEC_DVCPRO_HD = 23,
    CODEC_AVCINTRA_CLASS_50 = 24,
    CODEC_AVCINTRA_CLASS_100 = 25,
    CODEC_MPEG_D10_422 = 26,
    CODEC_QUICKTIME_RLE = 27,
    CODEC_QUICKTIME_PNG = 28,
    CODEC_PRORES_422 = 29,
    CODEC_PRORES_422_HQ = 30,
    CODEC_PRORES_422_LT = 31,
    CODEC_PRORES_422_PROXY = 32,
    CODEC_PRORES_4444 = 33,
    CODEC_PRORES_4444_WITH_ALPHA = 34,
    CODEC_H264 = 35,
    CODEC_MPEG4 = 36,
    CODEC_XAVC_INTRA_CLASS_100_CBG = 37,
    CODEC_XAVC_INTRA_CLASS_300_CBG = 38,
    CODEC_XAVC_INTRA_CLASS_300_VBR = 39,
    CODEC_XAVC_INTRA_CLASS_480_CBG = 40,
    CODEC_XAVC_INTRA_CLASS_480_VBR = 41,
    CODEC_XAVC_LONG_GOP_25 = 42,
    CODEC_XAVC_LONG_GOP_35 = 43,
    CODEC_XAVC_LONG_GOP_50 = 44,
    CODEC_WMV = 45,
    CODEC_VRV = 46,
    CODEC_COUNT = 47
};

enum eKOutputType
{
    OUT_PUT_TYPE_DEFAULT = 0,
    OUT_PUT_TYPE_FILL = 1,
    OUT_PUT_TYPE_KEY = 2,
    OUT_PUT_TYPE_FILL_KEY = 3,
    OUT_PUT_TYPE_COUNT = 4
};

struct __declspec(uuid("bfd73274-ac76-437b-af85-35682543f44c"))
IKAScene : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Unload ( );
    _bstr_t GetSceneName ( );
    _bstr_t GetFileName ( );
    HRESULT QueryVariables ( );
    HRESULT QueryAnimationNames ( );
    IKAObjectPtr GetObject (
        _bstr_t ObjectName );
    HRESULT SetBackground (
        struct sKBackground * pKBackground );
    HRESULT QueryAnimationCount ( );
    HRESULT SaveScene (
        _bstr_t K3SFileName,
        long UseCollect );
    HRESULT QueryChartObjects ( );
    HRESULT QueryLightNames ( );
    HRESULT SetSceneEffectType (
        long bInEffect,
        enum eKSceneEffectType EffectType,
        int Duration );
    HRESULT QuerySceneEffectType (
        long bInEffect );
    HRESULT SaveImageFile (
        _bstr_t ImagePathName,
        int ImageWidth,
        int ImageHeight,
        long Frame );
    HRESULT Reload ( );
    HRESULT AddPause (
        int AnimationType,
        int FrameNo,
        int Delay,
        long bAuto );
    HRESULT AddPauseByName (
        _bstr_t AnimationName,
        int FrameNo,
        int Delay,
        long bAuto );
    HRESULT DeletePause (
        int AnimationType,
        int FrameNo,
        long bAll );
    HRESULT DeletePauseByName (
        _bstr_t AnimationName,
        int FrameNo,
        long bAll );
    HRESULT UpdateTextures ( );
    HRESULT SetChangeOut (
        enum eKChangeOutType ChangeOutType );
    HRESULT SetBackgroundFill (
        int R,
        int G,
        int B,
        int A );
    HRESULT SetBackgroundTexture (
        _bstr_t TextureFileName );
    HRESULT SetBackgroundVideo (
        _bstr_t VideoFileName,
        int LoopCount,
        long LoopInfinite );
    HRESULT SetBackgroundLiveIn (
        int InputChannel );
    HRESULT UseBackground (
        long Use );
    HRESULT AddObject (
        struct IKAObject * pObject );
    HRESULT QueryPickedObjects (
        int X,
        int Y );
    HRESULT SetSceneScrollSpeed (
        float Speed );
    HRESULT CreateWithAFile (
        _bstr_t FileName,
        _bstr_t VariableName );
    HRESULT SetSceneAudioFile (
        int AnimationType,
        _bstr_t AudioFileName );
    HRESULT EnableSceneAudio (
        int AnimationType,
        long bEnable );
    HRESULT UpdateThumbnail ( );
    HRESULT SetSceneDuration (
        int AnimationType,
        int Duration );
    HRESULT SetBackgroundChangeType (
        enum eKBackgroundChangeType ChangeType );
    HRESULT SetBackgroundPauseType (
        enum eKBackgroundPauseType PauseType );
    HRESULT AddAbsolutePause (
        int AnimationType,
        int FrameNo,
        int Delay,
        long bAuto );
    HRESULT ResetTotalTime (
        int AnimationType );
    HRESULT SetTotalTime (
        int AnimationType,
        int Frame );
    HRESULT DownloadThumbnail (
        _bstr_t ImagePathName,
        int ImageWidth,
        int ImageHeight,
        long Frame );
    HRESULT SetBackgroundPauseAtZeroFrameAsStandBy (
        long bPause );
    IKAEffectPtr GetKAEffect ( );
    HRESULT AddCloneObject (
        struct IKAObject * pObject,
        _bstr_t NewVariable );
    HRESULT ApplyLibrary (
        _bstr_t LibraryPath,
        enum eKEffectTarget EffectTarget );
    HRESULT QueryPauseCount (
        int AnimationType );
    HRESULT QueryPauseCountByName (
        _bstr_t AnimationName );
    HRESULT QueryPlaybackRangeCount ( );
    HRESULT QueryPlaybackRange (
        int PlaybackRangeNo );
    HRESULT SetVROffset (
        float Horz,
        float Vert );
    HRESULT SetOutputChannelIndex (
        int OutputChannelIndex );
    HRESULT QueryOutputChannelIndex ( );
    HRESULT QueryTotalTime (
        int AnimationType );
    HRESULT SetPlaybackCamera (
        _bstr_t CameraVariable );
    IKACameraPtr GetPlaybackCamera ( );
    IKACameraPtr GetCamera (
        _bstr_t Variable );
    HRESULT ExportVideo (
        _bstr_t FileName,
        struct sKVideoFormat VideoFormat,
        long bPremultipliedAlpha,
        enum eKCodec Codec,
        enum eKOutputType OutputType,
        long bOverWrite );
    HRESULT StopVideoExporting ( );
    HRESULT QueryVideoExportingProgress ( );
    HRESULT SetPause (
        int AnimationType,
        int FrameNo,
        int Delay,
        long bAuto );
    HRESULT SetPauseByName (
        _bstr_t AnimationName,
        int FrameNo,
        int Delay,
        long bAuto );
    HRESULT SetPauseWithIndex (
        int AnimationType,
        int Index,
        int Delay,
        long bAuto );
    HRESULT SetPauseWithIndexByName (
        _bstr_t AnimationName,
        int Index,
        int Delay,
        long bAuto );
    HRESULT DeletePauseWithIndex (
        int AnimationType,
        int Index,
        long bAll );
    HRESULT DeletePauseWithIndexByName (
        _bstr_t AnimationName,
        int Index,
        long bAll );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Unload ( ) = 0;
      virtual HRESULT __stdcall raw_GetSceneName (
        /*[out,retval]*/ BSTR * _SceneName ) = 0;
      virtual HRESULT __stdcall raw_GetFileName (
        /*[out,retval]*/ BSTR * _FileName ) = 0;
      virtual HRESULT __stdcall raw_QueryVariables ( ) = 0;
      virtual HRESULT __stdcall raw_QueryAnimationNames ( ) = 0;
      virtual HRESULT __stdcall raw_GetObject (
        /*[in]*/ BSTR ObjectName,
        /*[out,retval]*/ struct IKAObject * * IObject ) = 0;
      virtual HRESULT __stdcall raw_SetBackground (
        /*[in]*/ struct sKBackground * pKBackground ) = 0;
      virtual HRESULT __stdcall raw_QueryAnimationCount ( ) = 0;
      virtual HRESULT __stdcall raw_SaveScene (
        /*[in]*/ BSTR K3SFileName,
        long UseCollect ) = 0;
      virtual HRESULT __stdcall raw_QueryChartObjects ( ) = 0;
      virtual HRESULT __stdcall raw_QueryLightNames ( ) = 0;
      virtual HRESULT __stdcall raw_SetSceneEffectType (
        /*[in]*/ long bInEffect,
        /*[in]*/ enum eKSceneEffectType EffectType,
        /*[in]*/ int Duration ) = 0;
      virtual HRESULT __stdcall raw_QuerySceneEffectType (
        /*[in]*/ long bInEffect ) = 0;
      virtual HRESULT __stdcall raw_SaveImageFile (
        /*[in]*/ BSTR ImagePathName,
        /*[in]*/ int ImageWidth,
        /*[in]*/ int ImageHeight,
        /*[in]*/ long Frame ) = 0;
      virtual HRESULT __stdcall raw_Reload ( ) = 0;
      virtual HRESULT __stdcall raw_AddPause (
        /*[in]*/ int AnimationType,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ long bAuto ) = 0;
      virtual HRESULT __stdcall raw_AddPauseByName (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ long bAuto ) = 0;
      virtual HRESULT __stdcall raw_DeletePause (
        /*[in]*/ int AnimationType,
        /*[in]*/ int FrameNo,
        /*[in]*/ long bAll ) = 0;
      virtual HRESULT __stdcall raw_DeletePauseByName (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int FrameNo,
        /*[in]*/ long bAll ) = 0;
      virtual HRESULT __stdcall raw_UpdateTextures ( ) = 0;
      virtual HRESULT __stdcall raw_SetChangeOut (
        /*[in]*/ enum eKChangeOutType ChangeOutType ) = 0;
      virtual HRESULT __stdcall raw_SetBackgroundFill (
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_SetBackgroundTexture (
        /*[in]*/ BSTR TextureFileName ) = 0;
      virtual HRESULT __stdcall raw_SetBackgroundVideo (
        /*[in]*/ BSTR VideoFileName,
        /*[in]*/ int LoopCount,
        /*[in]*/ long LoopInfinite ) = 0;
      virtual HRESULT __stdcall raw_SetBackgroundLiveIn (
        /*[in]*/ int InputChannel ) = 0;
      virtual HRESULT __stdcall raw_UseBackground (
        /*[in]*/ long Use ) = 0;
      virtual HRESULT __stdcall raw_AddObject (
        /*[in]*/ struct IKAObject * pObject ) = 0;
      virtual HRESULT __stdcall raw_QueryPickedObjects (
        /*[in]*/ int X,
        /*[in]*/ int Y ) = 0;
      virtual HRESULT __stdcall raw_SetSceneScrollSpeed (
        /*[in]*/ float Speed ) = 0;
      virtual HRESULT __stdcall raw_CreateWithAFile (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR VariableName ) = 0;
      virtual HRESULT __stdcall raw_SetSceneAudioFile (
        /*[in]*/ int AnimationType,
        /*[in]*/ BSTR AudioFileName ) = 0;
      virtual HRESULT __stdcall raw_EnableSceneAudio (
        /*[in]*/ int AnimationType,
        /*[in]*/ long bEnable ) = 0;
      virtual HRESULT __stdcall raw_UpdateThumbnail ( ) = 0;
      virtual HRESULT __stdcall raw_SetSceneDuration (
        /*[in]*/ int AnimationType,
        /*[in]*/ int Duration ) = 0;
      virtual HRESULT __stdcall raw_SetBackgroundChangeType (
        /*[in]*/ enum eKBackgroundChangeType ChangeType ) = 0;
      virtual HRESULT __stdcall raw_SetBackgroundPauseType (
        /*[in]*/ enum eKBackgroundPauseType PauseType ) = 0;
      virtual HRESULT __stdcall raw_AddAbsolutePause (
        /*[in]*/ int AnimationType,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ long bAuto ) = 0;
      virtual HRESULT __stdcall raw_ResetTotalTime (
        /*[in]*/ int AnimationType ) = 0;
      virtual HRESULT __stdcall raw_SetTotalTime (
        /*[in]*/ int AnimationType,
        /*[in]*/ int Frame ) = 0;
      virtual HRESULT __stdcall raw_DownloadThumbnail (
        /*[in]*/ BSTR ImagePathName,
        /*[in]*/ int ImageWidth,
        /*[in]*/ int ImageHeight,
        /*[in]*/ long Frame ) = 0;
      virtual HRESULT __stdcall raw_SetBackgroundPauseAtZeroFrameAsStandBy (
        /*[in]*/ long bPause ) = 0;
      virtual HRESULT __stdcall raw_GetKAEffect (
        /*[out,retval]*/ struct IKAEffect * * IEffect ) = 0;
      virtual HRESULT __stdcall raw_AddCloneObject (
        /*[in]*/ struct IKAObject * pObject,
        /*[in]*/ BSTR NewVariable ) = 0;
      virtual HRESULT __stdcall raw_ApplyLibrary (
        /*[in]*/ BSTR LibraryPath,
        /*[in]*/ enum eKEffectTarget EffectTarget ) = 0;
      virtual HRESULT __stdcall raw_QueryPauseCount (
        int AnimationType ) = 0;
      virtual HRESULT __stdcall raw_QueryPauseCountByName (
        BSTR AnimationName ) = 0;
      virtual HRESULT __stdcall raw_QueryPlaybackRangeCount ( ) = 0;
      virtual HRESULT __stdcall raw_QueryPlaybackRange (
        /*[in]*/ int PlaybackRangeNo ) = 0;
      virtual HRESULT __stdcall raw_SetVROffset (
        /*[in]*/ float Horz,
        /*[in]*/ float Vert ) = 0;
      virtual HRESULT __stdcall raw_SetOutputChannelIndex (
        /*[in]*/ int OutputChannelIndex ) = 0;
      virtual HRESULT __stdcall raw_QueryOutputChannelIndex ( ) = 0;
      virtual HRESULT __stdcall raw_QueryTotalTime (
        int AnimationType ) = 0;
      virtual HRESULT __stdcall raw_SetPlaybackCamera (
        /*[in]*/ BSTR CameraVariable ) = 0;
      virtual HRESULT __stdcall raw_GetPlaybackCamera (
        /*[out,retval]*/ struct IKACamera * * pICamera ) = 0;
      virtual HRESULT __stdcall raw_GetCamera (
        /*[in]*/ BSTR Variable,
        /*[out,retval]*/ struct IKACamera * * pICamera ) = 0;
      virtual HRESULT __stdcall raw_ExportVideo (
        /*[in]*/ BSTR FileName,
        /*[in]*/ struct sKVideoFormat VideoFormat,
        /*[in]*/ long bPremultipliedAlpha,
        /*[in]*/ enum eKCodec Codec,
        /*[in]*/ enum eKOutputType OutputType,
        /*[in]*/ long bOverWrite ) = 0;
      virtual HRESULT __stdcall raw_StopVideoExporting ( ) = 0;
      virtual HRESULT __stdcall raw_QueryVideoExportingProgress ( ) = 0;
      virtual HRESULT __stdcall raw_SetPause (
        /*[in]*/ int AnimationType,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ long bAuto ) = 0;
      virtual HRESULT __stdcall raw_SetPauseByName (
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ long bAuto ) = 0;
      virtual HRESULT __stdcall raw_SetPauseWithIndex (
        int AnimationType,
        int Index,
        int Delay,
        long bAuto ) = 0;
      virtual HRESULT __stdcall raw_SetPauseWithIndexByName (
        BSTR AnimationName,
        int Index,
        int Delay,
        long bAuto ) = 0;
      virtual HRESULT __stdcall raw_DeletePauseWithIndex (
        int AnimationType,
        int Index,
        long bAll ) = 0;
      virtual HRESULT __stdcall raw_DeletePauseWithIndexByName (
        BSTR AnimationName,
        int Index,
        long bAll ) = 0;
};

enum eKChartType
{
    CHART_TYPE_BAR = 0,
    CHART_TYPE_PIE = 1,
    CHART_TYPE_AREA = 2,
    CHART_TYPE_LINE = 3,
    CHART_TYPE_BUBBLE = 4,
    CHART_TYPE_DOT = 5,
    CHART_TYPE_COUNT = 6
};

#pragma pack(push, 4)

struct sKChart
{
    BSTR Name;
    enum eKChartType Type;
    int SubType;
    int ShapeType;
    int RowCount;
    int ColumnCount;
};

#pragma pack(pop)

enum eKObjectClass
{
    CLASS_cK3DObject = 0,
    CLASS_cK3DGroup = 1,
    CLASS_cK3DDummy = 2,
    CLASS_cK3DLight = 3,
    CLASS_cK3DCamera = 4,
    CLASS_cK3DCameraTarget = 5,
    CLASS_cK3DCameraUp = 6,
    CLASS_cK3DAudio = 7,
    CLASS_cK3DRenderable = 256,
    CLASS_cK3DXMesh = 257,
    CLASS_cK3DGeometry = 512,
    CLASS_cK3DMesh = 513,
    CLASS_cK3DBox = 514,
    CLASS_cK3DPlane = 515,
    CLASS_cK3DCylinder = 516,
    CLASS_cK3DSphere = 517,
    CLASS_cK3DCone = 518,
    CLASS_cK3DLine = 519,
    CLASS_cK3DShape = 768,
    CLASS_cK3DRect = 769,
    CLASS_cK3DCircle = 770,
    CLASS_cK3DPolygon = 771,
    CLASS_cK3DPathShape = 772,
    CLASS_cK3DClock = 773,
    CLASS_cK3DSmart = 774,
    CLASS_cK3DArea = 775,
    CLASS_cK3DRibbon = 776,
    CLASS_cK3DImage = 777,
    CLASS_cK3DText = 1024,
    CLASS_cK3DParagraph = 1025,
    CLASS_cK3DChar = 1026,
    CLASS_cK3DParticleSystem = 1280,
    CLASS_cK3DChart = 1536,
    CLASS_cK3DScrollObject = 1537,
    CLASS_cK3DCounter = 1538,
    CLASS_cK3DUnknown = 1539
};

#pragma pack(push, 4)

struct sKVariable
{
    enum eKObjectClass Type;
    BSTR Name;
    BSTR Value;
    long Visible;
};

#pragma pack(pop)

#pragma pack(push, 4)

struct sKChartDataTable
{
    int NumRows;
    int NumColumns;
    int iRow;
    int iColumn;
    BSTR Data;
};

#pragma pack(pop)

enum eKGroupType
{
    GROUP_TYPE_NORMAL = 0,
    GROUP_TYPE_CRAWL = 1,
    GROUP_TYPE_ROLL = 2,
    GROUP_TYPE_COUNT = 3
};

enum eKPlayAudioType
{
    PLAY_AUDIO_SDI = 0,
    PLAY_AUDIO_SPEAKER = 1,
    PLAY_AUDIO_SDI_SPEAKER = 2
};

struct __declspec(uuid("c21817db-c0d3-4647-8d85-027338dcf832"))
IKAEventHandler : IUnknown
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT OnHello ( );
    HRESULT OnLogMessage (
        _bstr_t LogMessage );
    HRESULT OnLoadProject (
        int bSuccess,
        struct IKAScene * pScene,
        int TotalCount );
    HRESULT OnSelectProject (
        int bSuccess,
        _bstr_t AliasName );
    HRESULT OnLoadScene (
        int bSuccess,
        _bstr_t SceneName );
    HRESULT OnUnloadScene (
        int bSuccess,
        _bstr_t SceneName );
    HRESULT OnScenePlayed (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnScenePaused (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnBeginTransaction (
        int iSuccess );
    HRESULT OnEndTransaction (
        int iSuccess );
    HRESULT OnRollbackTransaction (
        int iSuccess );
    HRESULT OnReloadScene (
        int bSuccess,
        _bstr_t FileName,
        _bstr_t SceneName );
    HRESULT OnHeartBeat (
        int bSuccess );
    HRESULT OnUnloadAll (
        int bSuccess );
    HRESULT OnCloseProject (
        int bSuccess,
        _bstr_t AliasName );
    HRESULT OnNewProject (
        int bSuccess,
        _bstr_t AliasName );
    HRESULT OnSceneSaved (
        int bSuccess,
        _bstr_t FileName );
    HRESULT OnSceneAnimationPlayed (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnLoadSceneForce (
        int bSuccess,
        _bstr_t SceneName );
    HRESULT OnScenePrepare (
        int bSuccess,
        _bstr_t SceneName,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnScenePrepareEx (
        int bSuccess,
        _bstr_t SceneName,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnPlay (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnPlayOut (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnStop (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnStopAll (
        int iSuccess );
    HRESULT OnPause (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnResume (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnQueryIsOnAir (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnTrigger (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo,
        int AnimationType );
    HRESULT OnTriggerObject (
        int bSuccess,
        _bstr_t ObjectName,
        int OutputChannelIndex,
        int LayerNo,
        int AnimationType,
        int bWithChildren );
    HRESULT OnTriggerByName (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo,
        _bstr_t AnimationName );
    HRESULT OnTriggerObjectByName (
        int bSuccess,
        _bstr_t ObjectName,
        int OutputChannelIndex,
        int LayerNo,
        _bstr_t AnimationName,
        int bWithChildren );
    HRESULT OnResumeBackground (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnPlayDirect (
        int bSuccess,
        _bstr_t SceneName,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnSetBackgroundFill (
        int bSuccess,
        _bstr_t SceneName,
        int R,
        int G,
        int B,
        int A );
    HRESULT OnSetBackgroundTexture (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t TextureFileName );
    HRESULT OnSetBackgroundVideo (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t VideoFileName,
        int LoopCount,
        int LoopInfinite );
    HRESULT OnSetBackgroundLiveIn (
        int bSuccess,
        _bstr_t SceneName,
        int InputChannel );
    HRESULT OnUseBackground (
        int bSuccess,
        _bstr_t SceneName,
        int Use );
    HRESULT OnSetSceneEffectType (
        int bSuccess,
        _bstr_t SceneName,
        int bInEffect,
        enum eKSceneEffectType EffectType,
        int Duration );
    HRESULT OnSetBackground (
        int bSuccess,
        _bstr_t SceneName,
        struct sKBackground * Param );
    HRESULT OnSetLightColor (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t LightName,
        struct sKLightColor * Param );
    HRESULT OnSetLightAttribute (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t LightName,
        struct sKLightAttribute * Param );
    HRESULT OnQuerySceneEffectType (
        int bSuccess,
        _bstr_t SceneName,
        int bInEffect,
        enum eKSceneEffectType EffectType,
        int Duration );
    HRESULT OnQueryChartObjects (
        int bSuccess,
        _bstr_t SceneName,
        int Index,
        int TotalCount,
        struct sKChart * Param );
    HRESULT OnQueryVariables (
        int bSuccess,
        _bstr_t SceneName,
        int Index,
        int TotalCount,
        struct sKVariable * Param );
    HRESULT OnQueryAnimationNames (
        int bSuccess,
        _bstr_t SceneName,
        int Index,
        int TotalCount,
        _bstr_t pAnimationName );
    HRESULT OnQueryAnimationCount (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationCount );
    HRESULT OnQueryLightNames (
        int bSuccess,
        _bstr_t SceneName,
        int Index,
        int TotalCount,
        _bstr_t pLightName );
    HRESULT OnSaveImageFile (
        int bSuccess,
        _bstr_t SceneName,
        int Width,
        int Height,
        long Frame,
        _bstr_t ImagePathName );
    HRESULT OnSaveScene (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t K3SFileName,
        int UseCollect );
    HRESULT OnAddPause (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int FrameNo,
        int Delay,
        int bAuto );
    HRESULT OnAddPauseByName (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t AnimationName,
        int FrameNo,
        int Delay,
        int bAuto );
    HRESULT OnDeletePause (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int FrameNo,
        int bAll );
    HRESULT OnDeletePauseByName (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t AnimationName,
        int FrameNo,
        int bAll );
    HRESULT OnUpdateTextures (
        int bSuccess,
        _bstr_t SceneName );
    HRESULT OnQueryPickedObjects (
        int bSuccess,
        _bstr_t SceneName,
        int Index,
        int TotalCount,
        struct sKVariable * Param );
    HRESULT OnSetSceneDuration (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int Durtaion );
    HRESULT OnSetBackgroundChangeType (
        int bSuccess,
        _bstr_t SceneName,
        enum eKBackgroundChangeType ChangeType );
    HRESULT OnSetBackgroundPauseType (
        int bSuccess,
        _bstr_t SceneName,
        enum eKBackgroundPauseType PauseType );
    HRESULT OnSetBackgroundPauseAtZeroFrameAsStandBy (
        int bSuccess,
        _bstr_t SceneName,
        int bPause );
    HRESULT OnSetStyleColor (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKStyleColor * Param );
    HRESULT OnSetFaceAttribute (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKFaceAttribute * Param );
    HRESULT OnSetEdgeAttribute (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKEdgeAttribute * Param );
    HRESULT OnSetShadowAttribute (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKShadowAttribute * Param );
    HRESULT OnSetVisible (
        int bSuccess,
        _bstr_t ObjectName,
        int bShow );
    HRESULT OnSetValue (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Value );
    HRESULT OnSetMaterial (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKMaterial * pKMaterial );
    HRESULT OnSetFont (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKFont * Param );
    HRESULT OnQueryChartDataTable (
        int bSuccess,
        _bstr_t ObjectName,
        int Index,
        int TotalCount,
        struct sKChartDataTable * Param );
    HRESULT OnSetObjectAttribute (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKObjectAttribute * pKObjectAttribute );
    HRESULT OnQueryObjectAttribute (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKObjectAttribute * pKObjectAttribute );
    HRESULT OnReplaceWithAFile (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t ReplaceFileName );
    HRESULT OnAddText (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Text,
        int StyleNo );
    HRESULT OnStoreTextStyle (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Text,
        int StyleCount );
    HRESULT OnSetTextStyle (
        int bSuccess,
        _bstr_t ObjectName,
        int Begin,
        int Count,
        int StyleNo );
    HRESULT OnEditText (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Text,
        int BeginPos,
        int EndPos,
        int StyleNo );
    HRESULT OnQueryClassType (
        int bSuccess,
        _bstr_t ObjectName,
        int ClassType );
    HRESULT OnSetChartCSVFile (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FilePath );
    HRESULT OnSetChartCellData (
        int bSuccess,
        _bstr_t ObjectName,
        float Value );
    HRESULT OnQuerySize (
        int bSuccess,
        _bstr_t ObjectName,
        float Width,
        float Height,
        float Depth );
    HRESULT OnSetSize (
        int bSuccess,
        _bstr_t ObjectName,
        float Width,
        float Height,
        float Depth );
    HRESULT OnSetCounterNumberKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        double Number );
    HRESULT OnSetPositionKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float X,
        float Y,
        float Z );
    HRESULT OnSetRotationKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float X,
        float Y,
        float Z );
    HRESULT OnSetScaleKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float X,
        float Y,
        float Z );
    HRESULT OnSetCylinderAngleKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float Start,
        float End );
    HRESULT OnSetSphereAngleKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float Start,
        float End );
    HRESULT OnSetCircleAngleKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float Start,
        float End );
    HRESULT OnSetCropKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float Left,
        float Top,
        float Right,
        float Bottom );
    HRESULT OnSetMaterialKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        struct sKMaterial * pKMaterial );
    HRESULT OnSetCountDown (
        int bSuccess,
        _bstr_t ObjectName,
        float Second );
    HRESULT OnSetPosition (
        int bSuccess,
        _bstr_t ObjectName,
        float X,
        float Y,
        float Z );
    HRESULT OnSetRotation (
        int bSuccess,
        _bstr_t ObjectName,
        float X,
        float Y,
        float Z );
    HRESULT OnSetScale (
        int bSuccess,
        _bstr_t ObjectName,
        float X,
        float Y,
        float Z );
    HRESULT OnSetLensFlaresKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float X,
        float Y,
        float Z );
    HRESULT OnAddPathPoint (
        int bSuccess,
        _bstr_t ObjectName,
        int Count );
    HRESULT OnClearPathPoints (
        int bSuccess,
        _bstr_t ObjectName );
    HRESULT OnAddPathShapePoint (
        int bSuccess,
        _bstr_t ObjectName,
        int Count );
    HRESULT OnClearPathShapePoints (
        int bSuccess,
        _bstr_t ObjectName );
    HRESULT OnSetOpacity (
        int bSuccess,
        _bstr_t ObjectName,
        int Opacity );
    HRESULT OnSetOpacityKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        int Opacity );
    HRESULT OnQueryScrollRemainingDistance (
        int bSuccess,
        _bstr_t ObjectName,
        int ScrollRemainingDistance );
    HRESULT OnAddScrollObject (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t ChildName );
    HRESULT OnAdjustScrollSpeed (
        int bSuccess,
        _bstr_t ObjectName,
        float SpeedDelta );
    HRESULT OnSetScrollSpeed (
        int bSuccess,
        _bstr_t ObjectName,
        float Speed );
    HRESULT OnSetVariableName (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t VariableName );
    HRESULT OnSetDiffuse (
        int bSuccess,
        _bstr_t ObjectName,
        int R,
        int G,
        int B );
    HRESULT OnSetAmbient (
        int bSuccess,
        _bstr_t ObjectName,
        int R,
        int G,
        int B );
    HRESULT OnSetSpecular (
        int bSuccess,
        _bstr_t ObjectName,
        int R,
        int G,
        int B );
    HRESULT OnSetEmissive (
        int bSuccess,
        _bstr_t ObjectName,
        int R,
        int G,
        int B );
    HRESULT OnSetDiffuseKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        int R,
        int G,
        int B );
    HRESULT OnSetAmbientKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        int R,
        int G,
        int B );
    HRESULT OnSetSpecularKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        int R,
        int G,
        int B );
    HRESULT OnSetEmissiveKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        int R,
        int G,
        int B );
    HRESULT OnSetLoftPositionKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float Start,
        float End );
    HRESULT OnSetChangeOut (
        int bSuccess,
        _bstr_t SceneName );
    HRESULT OnSetStyleTexture (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FileName );
    HRESULT OnSetTextTexture (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FileName );
    HRESULT OnSetDiffuseTexture (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FileName );
    HRESULT OnSetSpecularTexture (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FileName );
    HRESULT OnSetTransparencyTexture (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FileName );
    HRESULT OnSetNormalTexture (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FileName );
    HRESULT OnSetReflectionTexture (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FileName );
    HRESULT OnSetRefractionTexture (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FileName );
    HRESULT OnModifyPathPoint (
        int bSuccess,
        _bstr_t ObjectName,
        int Index,
        float X,
        float Y,
        float Z );
    HRESULT OnSetVideoFrame (
        int bSuccess,
        _bstr_t ObjectName,
        int StartFrame,
        int StopFrame );
    HRESULT OnSetVideoRepeatInfo (
        int bSuccess,
        _bstr_t ObjectName,
        int StartFrame,
        int StopFrame,
        int LoopCount,
        int bInfinite,
        int bPlayAsOut );
    HRESULT OnSetTextStyleLibrary (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Text,
        int StyleID );
    HRESULT OnAddTextStyleLibrary (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Text,
        int StyleID );
    HRESULT OnSetFaceColor (
        int bSuccess,
        _bstr_t ObjectName,
        int R,
        int G,
        int B,
        int A );
    HRESULT OnSetEdgeColor (
        int bSuccess,
        _bstr_t ObjectName,
        int R,
        int G,
        int B,
        int A );
    HRESULT OnSetShadowColor (
        int bSuccess,
        _bstr_t ObjectName,
        int R,
        int G,
        int B,
        int A );
    HRESULT OnInitScrollObject (
        int bSuccess,
        _bstr_t ObjectName );
    HRESULT OnSetCounterInfo (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Format,
        int UpdatePeriod,
        int bAddPlusSign );
    HRESULT OnSetCounterNumber (
        int bSuccess,
        _bstr_t ObjectName,
        double Number );
    HRESULT OnSetCounterRange (
        int bSuccess,
        _bstr_t ObjectName,
        double StartTime,
        double EndTime );
    HRESULT OnSetCounterRemainingTime (
        int bSuccess,
        _bstr_t ObjectName,
        double BaseTime );
    HRESULT OnSetCounterElapsedTime (
        int bSuccess,
        _bstr_t ObjectName,
        double BaseTime );
    HRESULT OnSaveObjectImage (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FileName );
    HRESULT OnSendMosMessage (
        int bSuccess,
        _bstr_t MosMessage );
    HRESULT OnReceiveFile (
        int bSuccess,
        _bstr_t ExistingFileName,
        _bstr_t NewFileName );
    HRESULT OnAddObject (
        int bSuccess );
    HRESULT OnSavePreviewImage (
        int bSuccess,
        _bstr_t ImagePathName,
        int Width,
        int Height );
    HRESULT OnDragObject (
        int bSuccess,
        _bstr_t ObjectName,
        int X,
        int Y,
        int FrameCount );
    HRESULT OnResetDrag (
        int bSuccess,
        _bstr_t ObjectName,
        int FrameCount );
    HRESULT OnSetSceneScrollSpeed (
        int bSuccess,
        _bstr_t SceneName,
        float Speed );
    HRESULT OnCreateWithAFile (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t FileName,
        _bstr_t VariableName );
    HRESULT OnSetSceneAudioFile (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        _bstr_t AudioFileName );
    HRESULT OnEnableSceneAudio (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int bEnable );
    HRESULT OnCreateStory (
        int bSuccess );
    HRESULT OnInsertStory (
        int bSuccess );
    HRESULT OnMoveStory (
        int bSuccess );
    HRESULT OnSwapStory (
        int bSuccess );
    HRESULT OnDeleteStory (
        int bSuccess );
    HRESULT OnCreateItem (
        int bSuccess );
    HRESULT OnInsertItem (
        int bSuccess );
    HRESULT OnDeleteItem (
        int bSuccess );
    HRESULT OnMoveItem (
        int bSuccess );
    HRESULT OnSwapItem (
        int bSuccess );
    HRESULT OnPrepareItem (
        int bSuccess );
    HRESULT OnUpdateItems (
        int bSuccess );
    HRESULT OnSetScrollSpeedByScenePlayer (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo,
        float Speed );
    HRESULT OnAdjustScrollSpeedByScenePlayer (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo,
        float SpeedDelta );
    HRESULT OnSetPositionOfPathAnimation (
        int bSuccess,
        _bstr_t ObjectName,
        float Position );
    HRESULT OnSetPositionKeyOfPathAnimation (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float Position );
    HRESULT OnUpdateThumbnail (
        int bSuccess,
        _bstr_t SceneName );
    HRESULT OnSetStyleItemTexture (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKStyleType ItemType,
        int ItemIndex,
        _bstr_t FileName );
    HRESULT OnMessageNo (
        unsigned long MessageNo );
    HRESULT OnSetKeyFrame (
        int bSuccess,
        enum eKObjectAttribute AttributeType,
        _bstr_t ObjectName,
        int KeyIndex,
        int Frame,
        enum eKKeyFrameType KeyFrameType );
    HRESULT OnSetKeyInterpolation (
        int bSuccess,
        enum eKObjectAttribute AttributeType,
        _bstr_t ObjectName,
        int KeyIndex,
        enum eKKeyInterpolationType InInterpolation,
        enum eKKeyInterpolationType OutInterpolation );
    HRESULT OnSetStartFrame (
        int bSuccess,
        _bstr_t ObjectName,
        int Frame );
    HRESULT OnStartVideoCapture (
        int bSuccess,
        _bstr_t FilePath,
        int VideoCodecIndex );
    HRESULT OnStopVideoCapture (
        int bSuccess );
    HRESULT OnCaptureImage (
        int bSuccess,
        _bstr_t FilePath );
    HRESULT OnClose (
        int ErrorCode );
    HRESULT OnAddAbsolutePause (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int FrameNo,
        int Delay,
        int bAuto );
    HRESULT OnResetTotalTime (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType );
    HRESULT OnSetTotalTime (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int Frame );
    HRESULT OnSetAnimationLibrary (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Name,
        int bApplyAtCurrentPosition );
    HRESULT OnSetMaterialLibrary (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Name );
    HRESULT OnSetStyleLibrary (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Name );
    HRESULT OnSetObjectEffectType (
        int bSuccess,
        _bstr_t ObjectName,
        int bInEffect,
        enum eKEffectType EffectType,
        int Duration );
    HRESULT OnDownloadThumbnail (
        int bSuccess,
        _bstr_t SceneName,
        int Width,
        int Height,
        long Frame,
        _bstr_t ImagePathName );
    HRESULT OnMoveCamera (
        int bSuccess,
        _bstr_t ObjectName,
        int X,
        int Y,
        int Z,
        int FrameCount );
    HRESULT OnLoadStyleLibrarys (
        int bSuccess,
        _bstr_t LibraryPath );
    HRESULT OnLoadAnimationLibrarys (
        int bSuccess,
        _bstr_t LibraryPath );
    HRESULT OnLoadMaterialLibrarys (
        int bSuccess,
        _bstr_t LibraryPath );
    HRESULT OnCheckVersion (
        int bSuccess,
        _bstr_t ServerVersion,
        _bstr_t SDKVersion );
    HRESULT OnSetFaceTextColor (
        int bSuccess,
        _bstr_t ObjectName,
        int BeginPos,
        int Count,
        int R,
        int G,
        int B,
        int A );
    HRESULT OnSetEdgeTextColor (
        int bSuccess,
        _bstr_t ObjectName,
        int BeginPos,
        int Count,
        int R,
        int G,
        int B,
        int A );
    HRESULT OnSetShadowTextColor (
        int bSuccess,
        _bstr_t ObjectName,
        int BeginPos,
        int Count,
        int R,
        int G,
        int B,
        int A );
    HRESULT OnQueryGroupType (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKGroupType GroupType );
    HRESULT OnQueryImageType (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKTextureTarget TextureTarget,
        enum eKImageType ImageType );
    HRESULT OnSetDiffuseTextColor (
        int bSuccess,
        _bstr_t ObjectName,
        int BeginPos,
        int Count,
        int R,
        int G,
        int B,
        int A );
    HRESULT OnSetVideoPlayInfo (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKTextureTarget TextureTarget,
        struct sKVideoPlayInfo * pVideoPlayInfo );
    HRESULT OnQueryVideoPlayInfo (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKTextureTarget TextureTarget,
        struct sKVideoPlayInfo * pVideoPlayInfo );
    HRESULT OnQueryIs3D (
        int bSuccess,
        _bstr_t ObjectName,
        long b3D );
    HRESULT OnQueryScrollChildRemainingDistance (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t ChildName,
        int ScrollRemainingDistance );
    HRESULT OnSetImageType (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKTextureTarget TextureTarget,
        enum eKImageType ImageType );
    HRESULT OnCutIn (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnCutOut (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnClearNextPreview (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnSetEffectNone (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectWipe (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectPush (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectTransform (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectCurl (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectRipple (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectParticle (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectFade (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectDistortion (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectBlink (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectCrop (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectBlur (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectColor (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectSidefade (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnSetEffectCutOut (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bAppliedObjectEffect );
    HRESULT OnEnableMaterialItem (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKMaterialType Type,
        int bEnable );
    HRESULT OnSetDiffuseColor (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKColor Color );
    HRESULT OnSetDiffuseColorKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        struct sKColor Color );
    HRESULT OnSetAmbientColor (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKColor Color );
    HRESULT OnSetAmbientColorKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        struct sKColor Color );
    HRESULT OnSetSpecularColor (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKColor Color );
    HRESULT OnSetSpecularColorKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        struct sKColor Color );
    HRESULT OnSetEmissiveColor (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKColor Color );
    HRESULT OnSetEmissiveColorKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        struct sKColor Color );
    HRESULT OnSetSpecularSharpness (
        int bSuccess,
        _bstr_t ObjectName,
        float Sharpness );
    HRESULT OnSetTransparencyOpacity (
        int bSuccess,
        _bstr_t ObjectName,
        unsigned char Opacity );
    HRESULT OnSetMaterialTextureType (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKTextureType Type );
    HRESULT OnSetMaterialTextureFile (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t FilePathName );
    HRESULT OnSetMaterialTextureOpacity (
        int bSuccess,
        _bstr_t ObjectName,
        unsigned char Opacity );
    HRESULT OnSetMaterialTextureBlending (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKTextureBlending BlendingType );
    HRESULT OnSetMaterialTextureFilter (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKTextureFilter FilterType );
    HRESULT OnSetMaterialTextureAddress (
        int bSuccess,
        _bstr_t ObjectName,
        enum eKTextureAddress AddressType );
    HRESULT OnSetMaterialTextureOffset (
        int bSuccess,
        _bstr_t ObjectName,
        float X,
        float Y );
    HRESULT OnSetMaterialTextureOffsetKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float X,
        float Y );
    HRESULT OnSetMaterialTextureTiling (
        int bSuccess,
        _bstr_t ObjectName,
        float X,
        float Y );
    HRESULT OnSetMaterialTextureTilingKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float X,
        float Y );
    HRESULT OnSetMaterialTextureRotation (
        int bSuccess,
        _bstr_t ObjectName,
        float Degree );
    HRESULT OnSetMaterialTextureRotationKey (
        int bSuccess,
        _bstr_t ObjectName,
        int KeyIndex,
        float Degree );
    HRESULT OnSetAudioOutput (
        int bSuccess,
        enum eKPlayAudioType PlayAudioType );
    HRESULT OnSetMemo (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Memo );
    HRESULT OnQueryMemo (
        int bSuccess,
        _bstr_t ObjectName,
        _bstr_t Memo );
    HRESULT OnSetTrialPlayMode (
        int bSuccess );
    HRESULT OnAddCloneObject (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t NewVariable );
    HRESULT OnQueryFont (
        int bSuccess,
        _bstr_t ObjectName,
        struct sKFont * Param );
    HRESULT OnSetImageOriginalSize (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName );
    HRESULT OnApplyLibrary (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        _bstr_t LibraryPath,
        enum eKEffectTarget EffectTarget );
    HRESULT OnSetTableValue (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int Row,
        int Column,
        _bstr_t Value );
    HRESULT OnSetTableColor (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int Row,
        int Column,
        struct sKColor Color );
    HRESULT OnQueryTableValue (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int Row,
        int Column,
        _bstr_t Value );
    HRESULT OnQueryTableValues (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int Index,
        int TotalCount,
        int Row,
        int Column,
        _bstr_t Value );
    HRESULT OnQueryPauseCount (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int PauseCount );
    HRESULT OnQueryPauseCountByName (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t AnimationName,
        int PauseCount );
    HRESULT OnPlayRange (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo,
        int PlaybackRangeNo );
    HRESULT OnQueryPlaybackRangeCount (
        int bSuccess,
        _bstr_t SceneName,
        int PlaybackRangeCount );
    HRESULT OnQueryPlaybackRange (
        int bSuccess,
        _bstr_t SceneName,
        int PlaybackRangeNo,
        int Start,
        int End );
    HRESULT OnSetVROffset (
        int bSuccess,
        _bstr_t SceneName,
        float Horz,
        float Vert );
    HRESULT OnSetOutputChannelIndex (
        int bSuccess,
        _bstr_t SceneName,
        int OutputChannelIndex );
    HRESULT OnQueryOutputChannelIndex (
        int bSuccess,
        _bstr_t SceneName,
        int OutputChannelIndex );
    HRESULT OnEndTransactionOnChannel (
        int iSuccess,
        int OutputChannelIndex );
    HRESULT OnQueryTotalTime (
        int iSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int Frame );
    HRESULT OnSetPathShapeOutlineThickness (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        float Thickness );
    HRESULT OnEnablePathShapeOutline (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int bEnable );
    HRESULT OnPlayInNextPreview (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnPlayOutNextPreview (
        int bSuccess,
        int OutputChannelIndex,
        int LayerNo );
    HRESULT OnSetPlaybackCamera (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName );
    HRESULT OnSetMoveTo (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        float X,
        float Y,
        float Z );
    HRESULT OnSetRotateTo (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        float Pitch,
        float Yaw,
        float Roll );
    HRESULT OnSetVerticalFOV (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        float Angle );
    HRESULT OnSetDelay (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t ObjectName,
        int Delay );
    HRESULT OnExportVideo (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t FileName );
    HRESULT OnStopVideoExporting (
        int bSuccess,
        _bstr_t SceneName );
    HRESULT OnQueryVideoExportingProgress (
        int bSuccess,
        _bstr_t SceneName,
        long CurrentFrame,
        long TotalFrame );
    HRESULT OnFinishedVideoExporting (
        int bSuccess,
        _bstr_t FileName );
    HRESULT OnSetPause (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int FrameNo,
        int Delay,
        int bAuto );
    HRESULT OnSetPauseByName (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t AnimationName,
        int FrameNo,
        int Delay,
        int bAuto );
    HRESULT OnSetPauseWithIndex (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int Index,
        int Delay,
        int bAuto );
    HRESULT OnSetPauseWithIndexByName (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t AnimationName,
        int Index,
        int Delay,
        int bAuto );
    HRESULT OnDeletePauseWithIndex (
        int bSuccess,
        _bstr_t SceneName,
        int AnimationType,
        int Index,
        int bAll );
    HRESULT OnDeletePauseWithIndexByName (
        int bSuccess,
        _bstr_t SceneName,
        _bstr_t AnimationName,
        int Index,
        int bAll );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_OnHello ( ) = 0;
      virtual HRESULT __stdcall raw_OnLogMessage (
        /*[in]*/ BSTR LogMessage ) = 0;
      virtual HRESULT __stdcall raw_OnLoadProject (
        /*[in]*/ int bSuccess,
        /*[in]*/ struct IKAScene * pScene,
        /*[in]*/ int TotalCount ) = 0;
      virtual HRESULT __stdcall raw_OnSelectProject (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR AliasName ) = 0;
      virtual HRESULT __stdcall raw_OnLoadScene (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_OnUnloadScene (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_OnScenePlayed (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnScenePaused (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnBeginTransaction (
        /*[in]*/ int iSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnEndTransaction (
        /*[in]*/ int iSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnRollbackTransaction (
        /*[in]*/ int iSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnReloadScene (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_OnHeartBeat (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnUnloadAll (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnCloseProject (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR AliasName ) = 0;
      virtual HRESULT __stdcall raw_OnNewProject (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR AliasName ) = 0;
      virtual HRESULT __stdcall raw_OnSceneSaved (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSceneAnimationPlayed (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnLoadSceneForce (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_OnScenePrepare (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnScenePrepareEx (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnPlay (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnPlayOut (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnStop (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnStopAll (
        /*[in]*/ int iSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnPause (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnResume (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnQueryIsOnAir (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnTrigger (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo,
        /*[in]*/ int AnimationType ) = 0;
      virtual HRESULT __stdcall raw_OnTriggerObject (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo,
        /*[in]*/ int AnimationType,
        /*[in]*/ int bWithChildren ) = 0;
      virtual HRESULT __stdcall raw_OnTriggerByName (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo,
        /*[in]*/ BSTR AnimationName ) = 0;
      virtual HRESULT __stdcall raw_OnTriggerObjectByName (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo,
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int bWithChildren ) = 0;
      virtual HRESULT __stdcall raw_OnResumeBackground (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnPlayDirect (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnSetBackgroundFill (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_OnSetBackgroundTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR TextureFileName ) = 0;
      virtual HRESULT __stdcall raw_OnSetBackgroundVideo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR VideoFileName,
        /*[in]*/ int LoopCount,
        /*[in]*/ int LoopInfinite ) = 0;
      virtual HRESULT __stdcall raw_OnSetBackgroundLiveIn (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int InputChannel ) = 0;
      virtual HRESULT __stdcall raw_OnUseBackground (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int Use ) = 0;
      virtual HRESULT __stdcall raw_OnSetSceneEffectType (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int bInEffect,
        /*[in]*/ enum eKSceneEffectType EffectType,
        /*[in]*/ int Duration ) = 0;
      virtual HRESULT __stdcall raw_OnSetBackground (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ struct sKBackground * Param ) = 0;
      virtual HRESULT __stdcall raw_OnSetLightColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR LightName,
        /*[in]*/ struct sKLightColor * Param ) = 0;
      virtual HRESULT __stdcall raw_OnSetLightAttribute (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR LightName,
        /*[in]*/ struct sKLightAttribute * Param ) = 0;
      virtual HRESULT __stdcall raw_OnQuerySceneEffectType (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int bInEffect,
        /*[in]*/ enum eKSceneEffectType EffectType,
        /*[in]*/ int Duration ) = 0;
      virtual HRESULT __stdcall raw_OnQueryChartObjects (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int Index,
        /*[in]*/ int TotalCount,
        /*[in]*/ struct sKChart * Param ) = 0;
      virtual HRESULT __stdcall raw_OnQueryVariables (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int Index,
        /*[in]*/ int TotalCount,
        /*[in]*/ struct sKVariable * Param ) = 0;
      virtual HRESULT __stdcall raw_OnQueryAnimationNames (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int Index,
        /*[in]*/ int TotalCount,
        /*[in]*/ BSTR pAnimationName ) = 0;
      virtual HRESULT __stdcall raw_OnQueryAnimationCount (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationCount ) = 0;
      virtual HRESULT __stdcall raw_OnQueryLightNames (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int Index,
        /*[in]*/ int TotalCount,
        /*[in]*/ BSTR pLightName ) = 0;
      virtual HRESULT __stdcall raw_OnSaveImageFile (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int Width,
        /*[in]*/ int Height,
        /*[in]*/ long Frame,
        /*[in]*/ BSTR ImagePathName ) = 0;
      virtual HRESULT __stdcall raw_OnSaveScene (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR K3SFileName,
        /*[in]*/ int UseCollect ) = 0;
      virtual HRESULT __stdcall raw_OnAddPause (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ int bAuto ) = 0;
      virtual HRESULT __stdcall raw_OnAddPauseByName (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ int bAuto ) = 0;
      virtual HRESULT __stdcall raw_OnDeletePause (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int FrameNo,
        /*[in]*/ int bAll ) = 0;
      virtual HRESULT __stdcall raw_OnDeletePauseByName (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int FrameNo,
        /*[in]*/ int bAll ) = 0;
      virtual HRESULT __stdcall raw_OnUpdateTextures (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_OnQueryPickedObjects (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int Index,
        /*[in]*/ int TotalCount,
        /*[in]*/ struct sKVariable * Param ) = 0;
      virtual HRESULT __stdcall raw_OnSetSceneDuration (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int Durtaion ) = 0;
      virtual HRESULT __stdcall raw_OnSetBackgroundChangeType (
        /*[in]*/ int bSuccess,
        BSTR SceneName,
        /*[in]*/ enum eKBackgroundChangeType ChangeType ) = 0;
      virtual HRESULT __stdcall raw_OnSetBackgroundPauseType (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ enum eKBackgroundPauseType PauseType ) = 0;
      virtual HRESULT __stdcall raw_OnSetBackgroundPauseAtZeroFrameAsStandBy (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int bPause ) = 0;
      virtual HRESULT __stdcall raw_OnSetStyleColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKStyleColor * Param ) = 0;
      virtual HRESULT __stdcall raw_OnSetFaceAttribute (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKFaceAttribute * Param ) = 0;
      virtual HRESULT __stdcall raw_OnSetEdgeAttribute (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKEdgeAttribute * Param ) = 0;
      virtual HRESULT __stdcall raw_OnSetShadowAttribute (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKShadowAttribute * Param ) = 0;
      virtual HRESULT __stdcall raw_OnSetVisible (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bShow ) = 0;
      virtual HRESULT __stdcall raw_OnSetValue (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterial (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKMaterial * pKMaterial ) = 0;
      virtual HRESULT __stdcall raw_OnSetFont (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKFont * Param ) = 0;
      virtual HRESULT __stdcall raw_OnQueryChartDataTable (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Index,
        /*[in]*/ int TotalCount,
        /*[in]*/ struct sKChartDataTable * Param ) = 0;
      virtual HRESULT __stdcall raw_OnSetObjectAttribute (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKObjectAttribute * pKObjectAttribute ) = 0;
      virtual HRESULT __stdcall raw_OnQueryObjectAttribute (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKObjectAttribute * pKObjectAttribute ) = 0;
      virtual HRESULT __stdcall raw_OnReplaceWithAFile (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR ReplaceFileName ) = 0;
      virtual HRESULT __stdcall raw_OnAddText (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Text,
        /*[in]*/ int StyleNo ) = 0;
      virtual HRESULT __stdcall raw_OnStoreTextStyle (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Text,
        /*[in]*/ int StyleCount ) = 0;
      virtual HRESULT __stdcall raw_OnSetTextStyle (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Begin,
        /*[in]*/ int Count,
        /*[in]*/ int StyleNo ) = 0;
      virtual HRESULT __stdcall raw_OnEditText (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Text,
        /*[in]*/ int BeginPos,
        /*[in]*/ int EndPos,
        /*[in]*/ int StyleNo ) = 0;
      virtual HRESULT __stdcall raw_OnQueryClassType (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int ClassType ) = 0;
      virtual HRESULT __stdcall raw_OnSetChartCSVFile (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FilePath ) = 0;
      virtual HRESULT __stdcall raw_OnSetChartCellData (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Value ) = 0;
      virtual HRESULT __stdcall raw_OnQuerySize (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ float Depth ) = 0;
      virtual HRESULT __stdcall raw_OnSetSize (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Width,
        /*[in]*/ float Height,
        /*[in]*/ float Depth ) = 0;
      virtual HRESULT __stdcall raw_OnSetCounterNumberKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ double Number ) = 0;
      virtual HRESULT __stdcall raw_OnSetPositionKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_OnSetRotationKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_OnSetScaleKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_OnSetCylinderAngleKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Start,
        /*[in]*/ float End ) = 0;
      virtual HRESULT __stdcall raw_OnSetSphereAngleKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Start,
        /*[in]*/ float End ) = 0;
      virtual HRESULT __stdcall raw_OnSetCircleAngleKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Start,
        /*[in]*/ float End ) = 0;
      virtual HRESULT __stdcall raw_OnSetCropKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Left,
        /*[in]*/ float Top,
        /*[in]*/ float Right,
        /*[in]*/ float Bottom ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKMaterial * pKMaterial ) = 0;
      virtual HRESULT __stdcall raw_OnSetCountDown (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Second ) = 0;
      virtual HRESULT __stdcall raw_OnSetPosition (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_OnSetRotation (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_OnSetScale (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_OnSetLensFlaresKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_OnAddPathPoint (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Count ) = 0;
      virtual HRESULT __stdcall raw_OnClearPathPoints (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName ) = 0;
      virtual HRESULT __stdcall raw_OnAddPathShapePoint (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Count ) = 0;
      virtual HRESULT __stdcall raw_OnClearPathShapePoints (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName ) = 0;
      virtual HRESULT __stdcall raw_OnSetOpacity (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Opacity ) = 0;
      virtual HRESULT __stdcall raw_OnSetOpacityKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ int Opacity ) = 0;
      virtual HRESULT __stdcall raw_OnQueryScrollRemainingDistance (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int ScrollRemainingDistance ) = 0;
      virtual HRESULT __stdcall raw_OnAddScrollObject (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR ChildName ) = 0;
      virtual HRESULT __stdcall raw_OnAdjustScrollSpeed (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float SpeedDelta ) = 0;
      virtual HRESULT __stdcall raw_OnSetScrollSpeed (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Speed ) = 0;
      virtual HRESULT __stdcall raw_OnSetVariableName (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR VariableName ) = 0;
      virtual HRESULT __stdcall raw_OnSetDiffuse (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_OnSetAmbient (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_OnSetSpecular (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_OnSetEmissive (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_OnSetDiffuseKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_OnSetAmbientKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_OnSetSpecularKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_OnSetEmissiveKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B ) = 0;
      virtual HRESULT __stdcall raw_OnSetLoftPositionKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Start,
        /*[in]*/ float End ) = 0;
      virtual HRESULT __stdcall raw_OnSetChangeOut (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_OnSetStyleTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSetTextTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSetDiffuseTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSetSpecularTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSetTransparencyTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSetNormalTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSetReflectionTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSetRefractionTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnModifyPathPoint (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Index,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_OnSetVideoFrame (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int StartFrame,
        /*[in]*/ int StopFrame ) = 0;
      virtual HRESULT __stdcall raw_OnSetVideoRepeatInfo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int StartFrame,
        /*[in]*/ int StopFrame,
        /*[in]*/ int LoopCount,
        /*[in]*/ int bInfinite,
        /*[in]*/ int bPlayAsOut ) = 0;
      virtual HRESULT __stdcall raw_OnSetTextStyleLibrary (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Text,
        /*[in]*/ int StyleID ) = 0;
      virtual HRESULT __stdcall raw_OnAddTextStyleLibrary (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Text,
        /*[in]*/ int StyleID ) = 0;
      virtual HRESULT __stdcall raw_OnSetFaceColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_OnSetEdgeColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_OnSetShadowColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_OnInitScrollObject (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName ) = 0;
      virtual HRESULT __stdcall raw_OnSetCounterInfo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Format,
        /*[in]*/ int UpdatePeriod,
        /*[in]*/ int bAddPlusSign ) = 0;
      virtual HRESULT __stdcall raw_OnSetCounterNumber (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ double Number ) = 0;
      virtual HRESULT __stdcall raw_OnSetCounterRange (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ double StartTime,
        /*[in]*/ double EndTime ) = 0;
      virtual HRESULT __stdcall raw_OnSetCounterRemainingTime (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ double BaseTime ) = 0;
      virtual HRESULT __stdcall raw_OnSetCounterElapsedTime (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ double BaseTime ) = 0;
      virtual HRESULT __stdcall raw_OnSaveObjectImage (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSendMosMessage (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR MosMessage ) = 0;
      virtual HRESULT __stdcall raw_OnReceiveFile (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ExistingFileName,
        /*[in]*/ BSTR NewFileName ) = 0;
      virtual HRESULT __stdcall raw_OnAddObject (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnSavePreviewImage (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ImagePathName,
        /*[in]*/ int Width,
        /*[in]*/ int Height ) = 0;
      virtual HRESULT __stdcall raw_OnDragObject (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int X,
        /*[in]*/ int Y,
        /*[in]*/ int FrameCount ) = 0;
      virtual HRESULT __stdcall raw_OnResetDrag (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int FrameCount ) = 0;
      virtual HRESULT __stdcall raw_OnSetSceneScrollSpeed (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ float Speed ) = 0;
      virtual HRESULT __stdcall raw_OnCreateWithAFile (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR VariableName ) = 0;
      virtual HRESULT __stdcall raw_OnSetSceneAudioFile (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ BSTR AudioFileName ) = 0;
      virtual HRESULT __stdcall raw_OnEnableSceneAudio (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int bEnable ) = 0;
      virtual HRESULT __stdcall raw_OnCreateStory (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnInsertStory (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnMoveStory (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnSwapStory (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnDeleteStory (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnCreateItem (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnInsertItem (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnDeleteItem (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnMoveItem (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnSwapItem (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnPrepareItem (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnUpdateItems (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnSetScrollSpeedByScenePlayer (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo,
        /*[in]*/ float Speed ) = 0;
      virtual HRESULT __stdcall raw_OnAdjustScrollSpeedByScenePlayer (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo,
        /*[in]*/ float SpeedDelta ) = 0;
      virtual HRESULT __stdcall raw_OnSetPositionOfPathAnimation (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Position ) = 0;
      virtual HRESULT __stdcall raw_OnSetPositionKeyOfPathAnimation (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Position ) = 0;
      virtual HRESULT __stdcall raw_OnUpdateThumbnail (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_OnSetStyleItemTexture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKStyleType ItemType,
        /*[in]*/ int ItemIndex,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnMessageNo (
        /*[in]*/ unsigned long MessageNo ) = 0;
      virtual HRESULT __stdcall raw_OnSetKeyFrame (
        /*[in]*/ int bSuccess,
        /*[in]*/ enum eKObjectAttribute AttributeType,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ int Frame,
        /*[in]*/ enum eKKeyFrameType KeyFrameType ) = 0;
      virtual HRESULT __stdcall raw_OnSetKeyInterpolation (
        /*[in]*/ int bSuccess,
        /*[in]*/ enum eKObjectAttribute AttributeType,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ enum eKKeyInterpolationType InInterpolation,
        /*[in]*/ enum eKKeyInterpolationType OutInterpolation ) = 0;
      virtual HRESULT __stdcall raw_OnSetStartFrame (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Frame ) = 0;
      virtual HRESULT __stdcall raw_OnStartVideoCapture (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR FilePath,
        /*[in]*/ int VideoCodecIndex ) = 0;
      virtual HRESULT __stdcall raw_OnStopVideoCapture (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnCaptureImage (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR FilePath ) = 0;
      virtual HRESULT __stdcall raw_OnClose (
        /*[in]*/ int ErrorCode ) = 0;
      virtual HRESULT __stdcall raw_OnAddAbsolutePause (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ int bAuto ) = 0;
      virtual HRESULT __stdcall raw_OnResetTotalTime (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType ) = 0;
      virtual HRESULT __stdcall raw_OnSetTotalTime (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int Frame ) = 0;
      virtual HRESULT __stdcall raw_OnSetAnimationLibrary (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Name,
        /*[in]*/ int bApplyAtCurrentPosition ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialLibrary (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_OnSetStyleLibrary (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall raw_OnSetObjectEffectType (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bInEffect,
        /*[in]*/ enum eKEffectType EffectType,
        /*[in]*/ int Duration ) = 0;
      virtual HRESULT __stdcall raw_OnDownloadThumbnail (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int Width,
        /*[in]*/ int Height,
        /*[in]*/ long Frame,
        /*[in]*/ BSTR ImagePathName ) = 0;
      virtual HRESULT __stdcall raw_OnMoveCamera (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int X,
        /*[in]*/ int Y,
        /*[in]*/ int Z,
        /*[in]*/ int FrameCount ) = 0;
      virtual HRESULT __stdcall raw_OnLoadStyleLibrarys (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR LibraryPath ) = 0;
      virtual HRESULT __stdcall raw_OnLoadAnimationLibrarys (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR LibraryPath ) = 0;
      virtual HRESULT __stdcall raw_OnLoadMaterialLibrarys (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR LibraryPath ) = 0;
      virtual HRESULT __stdcall raw_OnCheckVersion (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ServerVersion,
        /*[in]*/ BSTR SDKVersion ) = 0;
      virtual HRESULT __stdcall raw_OnSetFaceTextColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int BeginPos,
        /*[in]*/ int Count,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_OnSetEdgeTextColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int BeginPos,
        /*[in]*/ int Count,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_OnSetShadowTextColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int BeginPos,
        /*[in]*/ int Count,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_OnQueryGroupType (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKGroupType GroupType ) = 0;
      virtual HRESULT __stdcall raw_OnQueryImageType (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKTextureTarget TextureTarget,
        /*[in]*/ enum eKImageType ImageType ) = 0;
      virtual HRESULT __stdcall raw_OnSetDiffuseTextColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int BeginPos,
        /*[in]*/ int Count,
        /*[in]*/ int R,
        /*[in]*/ int G,
        /*[in]*/ int B,
        /*[in]*/ int A ) = 0;
      virtual HRESULT __stdcall raw_OnSetVideoPlayInfo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKTextureTarget TextureTarget,
        /*[in]*/ struct sKVideoPlayInfo * pVideoPlayInfo ) = 0;
      virtual HRESULT __stdcall raw_OnQueryVideoPlayInfo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKTextureTarget TextureTarget,
        /*[in]*/ struct sKVideoPlayInfo * pVideoPlayInfo ) = 0;
      virtual HRESULT __stdcall raw_OnQueryIs3D (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ long b3D ) = 0;
      virtual HRESULT __stdcall raw_OnQueryScrollChildRemainingDistance (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR ChildName,
        /*[in]*/ int ScrollRemainingDistance ) = 0;
      virtual HRESULT __stdcall raw_OnSetImageType (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKTextureTarget TextureTarget,
        /*[in]*/ enum eKImageType ImageType ) = 0;
      virtual HRESULT __stdcall raw_OnCutIn (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnCutOut (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnClearNextPreview (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectNone (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectWipe (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectPush (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectTransform (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectCurl (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectRipple (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectParticle (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectFade (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectDistortion (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectBlink (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectCrop (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectBlur (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectSidefade (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnSetEffectCutOut (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bAppliedObjectEffect ) = 0;
      virtual HRESULT __stdcall raw_OnEnableMaterialItem (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKMaterialType Type,
        /*[in]*/ int bEnable ) = 0;
      virtual HRESULT __stdcall raw_OnSetDiffuseColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_OnSetDiffuseColorKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_OnSetAmbientColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_OnSetAmbientColorKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_OnSetSpecularColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_OnSetSpecularColorKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_OnSetEmissiveColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_OnSetEmissiveColorKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_OnSetSpecularSharpness (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Sharpness ) = 0;
      virtual HRESULT __stdcall raw_OnSetTransparencyOpacity (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ unsigned char Opacity ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureType (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKTextureType Type ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureFile (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR FilePathName ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureOpacity (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ unsigned char Opacity ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureBlending (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKTextureBlending BlendingType ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureFilter (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKTextureFilter FilterType ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureAddress (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ enum eKTextureAddress AddressType ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureOffset (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float X,
        /*[in]*/ float Y ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureOffsetKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureTiling (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float X,
        /*[in]*/ float Y ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureTilingKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float X,
        /*[in]*/ float Y ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureRotation (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Degree ) = 0;
      virtual HRESULT __stdcall raw_OnSetMaterialTextureRotationKey (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int KeyIndex,
        /*[in]*/ float Degree ) = 0;
      virtual HRESULT __stdcall raw_OnSetAudioOutput (
        /*[in]*/ int bSuccess,
        /*[in]*/ enum eKPlayAudioType PlayAudioType ) = 0;
      virtual HRESULT __stdcall raw_OnSetMemo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Memo ) = 0;
      virtual HRESULT __stdcall raw_OnQueryMemo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR Memo ) = 0;
      virtual HRESULT __stdcall raw_OnSetTrialPlayMode (
        /*[in]*/ int bSuccess ) = 0;
      virtual HRESULT __stdcall raw_OnAddCloneObject (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR NewVariable ) = 0;
      virtual HRESULT __stdcall raw_OnQueryFont (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ struct sKFont * Param ) = 0;
      virtual HRESULT __stdcall raw_OnSetImageOriginalSize (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName ) = 0;
      virtual HRESULT __stdcall raw_OnApplyLibrary (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ BSTR LibraryPath,
        /*[in]*/ enum eKEffectTarget EffectTarget ) = 0;
      virtual HRESULT __stdcall raw_OnSetTableValue (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Row,
        /*[in]*/ int Column,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_OnSetTableColor (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Row,
        /*[in]*/ int Column,
        /*[in]*/ struct sKColor Color ) = 0;
      virtual HRESULT __stdcall raw_OnQueryTableValue (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Row,
        /*[in]*/ int Column,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_OnQueryTableValues (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Index,
        /*[in]*/ int TotalCount,
        /*[in]*/ int Row,
        /*[in]*/ int Column,
        /*[in]*/ BSTR Value ) = 0;
      virtual HRESULT __stdcall raw_OnQueryPauseCount (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int PauseCount ) = 0;
      virtual HRESULT __stdcall raw_OnQueryPauseCountByName (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int PauseCount ) = 0;
      virtual HRESULT __stdcall raw_OnPlayRange (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo,
        /*[in]*/ int PlaybackRangeNo ) = 0;
      virtual HRESULT __stdcall raw_OnQueryPlaybackRangeCount (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int PlaybackRangeCount ) = 0;
      virtual HRESULT __stdcall raw_OnQueryPlaybackRange (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int PlaybackRangeNo,
        /*[in]*/ int Start,
        /*[in]*/ int End ) = 0;
      virtual HRESULT __stdcall raw_OnSetVROffset (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ float Horz,
        /*[in]*/ float Vert ) = 0;
      virtual HRESULT __stdcall raw_OnSetOutputChannelIndex (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int OutputChannelIndex ) = 0;
      virtual HRESULT __stdcall raw_OnQueryOutputChannelIndex (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int OutputChannelIndex ) = 0;
      virtual HRESULT __stdcall raw_OnEndTransactionOnChannel (
        /*[in]*/ int iSuccess,
        /*[in]*/ int OutputChannelIndex ) = 0;
      virtual HRESULT __stdcall raw_OnQueryTotalTime (
        /*[in]*/ int iSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int Frame ) = 0;
      virtual HRESULT __stdcall raw_OnSetPathShapeOutlineThickness (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Thickness ) = 0;
      virtual HRESULT __stdcall raw_OnEnablePathShapeOutline (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int bEnable ) = 0;
      virtual HRESULT __stdcall raw_OnPlayInNextPreview (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnPlayOutNextPreview (
        /*[in]*/ int bSuccess,
        /*[in]*/ int OutputChannelIndex,
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_OnSetPlaybackCamera (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName ) = 0;
      virtual HRESULT __stdcall raw_OnSetMoveTo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float X,
        /*[in]*/ float Y,
        /*[in]*/ float Z ) = 0;
      virtual HRESULT __stdcall raw_OnSetRotateTo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Pitch,
        /*[in]*/ float Yaw,
        /*[in]*/ float Roll ) = 0;
      virtual HRESULT __stdcall raw_OnSetVerticalFOV (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ float Angle ) = 0;
      virtual HRESULT __stdcall raw_OnSetDelay (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int Delay ) = 0;
      virtual HRESULT __stdcall raw_OnExportVideo (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnStopVideoExporting (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_OnQueryVideoExportingProgress (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ long CurrentFrame,
        /*[in]*/ long TotalFrame ) = 0;
      virtual HRESULT __stdcall raw_OnFinishedVideoExporting (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR FileName ) = 0;
      virtual HRESULT __stdcall raw_OnSetPause (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ int bAuto ) = 0;
      virtual HRESULT __stdcall raw_OnSetPauseByName (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int FrameNo,
        /*[in]*/ int Delay,
        /*[in]*/ int bAuto ) = 0;
      virtual HRESULT __stdcall raw_OnSetPauseWithIndex (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int Index,
        /*[in]*/ int Delay,
        /*[in]*/ int bAuto ) = 0;
      virtual HRESULT __stdcall raw_OnSetPauseWithIndexByName (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int Index,
        /*[in]*/ int Delay,
        /*[in]*/ int bAuto ) = 0;
      virtual HRESULT __stdcall raw_OnDeletePauseWithIndex (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ int AnimationType,
        /*[in]*/ int Index,
        /*[in]*/ int bAll ) = 0;
      virtual HRESULT __stdcall raw_OnDeletePauseWithIndexByName (
        /*[in]*/ int bSuccess,
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ int Index,
        /*[in]*/ int bAll ) = 0;
};

enum eKCameraType
{
    PRESETTYPE_PERSPECTIVE = 0,
    PRESETTYPE_FRONT = 1,
    PRESETTYPE_TOP = 2,
    PRESETTYPE_LEFT = 3,
    PRESETTYPE_RIGHT = 4,
    PRESETTYPE_BOTTOM = 5,
    PRESETTYPE_BACK = 6,
    PRESETTYPE_CAMERA = 7,
    PRESETTYPE_COUNT = 8
};

#pragma pack(push, 4)

struct sKLayerInfo
{
    int LayerNo;
    int PlaybackRangeNo;
    enum eKCameraType CameraType;
    int CameraIndex;
    int RepeatCount;
    long bClearDepth;
    long bAutoPrepare;
    long bPreviewOff;
};

#pragma pack(pop)

struct __declspec(uuid("14083c84-4b17-41bf-ae1a-206f13c0e5c5"))
IKAScenePlayer : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    HRESULT Prepare (
        int LayerNo,
        struct IKAScene * pScene );
    HRESULT PrepareEx (
        struct sKLayerInfo * pLayerInfo,
        struct IKAScene * pScene );
    HRESULT Play (
        int LayerNo );
    HRESULT PlayOut (
        int LayerNo );
    HRESULT Stop (
        int LayerNo );
    HRESULT StopAll ( );
    HRESULT Pause (
        int LayerNo );
    HRESULT Resume (
        int LayerNo );
    HRESULT QueryIsOnAir (
        int LayerNo );
    HRESULT Trigger (
        int LayerNo,
        int AnimationType );
    HRESULT TriggerObject (
        _bstr_t ObjectName,
        int LayerNo,
        int AnimationType,
        long bWithChildren );
    HRESULT TriggerByName (
        int LayerNo,
        _bstr_t AnimationName );
    HRESULT TriggerObjectByName (
        _bstr_t ObjectName,
        int LayerNo,
        _bstr_t AnimationName,
        long bWithChildren );
    IKAScenePtr GetPlayingScene (
        int LayerNo );
    HRESULT SavePreviewImage (
        _bstr_t ImagePathName,
        int Width,
        int Height );
    HRESULT SetScrollSpeed (
        int LayerNo,
        float Speed );
    HRESULT AdjustScrollSpeed (
        int LayerNo,
        float SpeedDelta );
    HRESULT ResumeBackground (
        int LayerNo );
    HRESULT PlayDirect (
        int LayerNo,
        struct IKAScene * pScene );
    HRESULT CutIn (
        int LayerNo );
    HRESULT CutOut (
        int LayerNo );
    HRESULT ClearNextPreview (
        int LayerNo );
    HRESULT PlayRange (
        int LayerNo,
        int PlaybackRangeNo );
    HRESULT PlayInNextPreview (
        int LayerNo );
    HRESULT PlayOutNextPreview (
        int LayerNo );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Prepare (
        /*[in]*/ int LayerNo,
        /*[in]*/ struct IKAScene * pScene ) = 0;
      virtual HRESULT __stdcall raw_PrepareEx (
        /*[in]*/ struct sKLayerInfo * pLayerInfo,
        /*[in]*/ struct IKAScene * pScene ) = 0;
      virtual HRESULT __stdcall raw_Play (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_PlayOut (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_Stop (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_StopAll ( ) = 0;
      virtual HRESULT __stdcall raw_Pause (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_Resume (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_QueryIsOnAir (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_Trigger (
        /*[in]*/ int LayerNo,
        /*[in]*/ int AnimationType ) = 0;
      virtual HRESULT __stdcall raw_TriggerObject (
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int LayerNo,
        /*[in]*/ int AnimationType,
        /*[in]*/ long bWithChildren ) = 0;
      virtual HRESULT __stdcall raw_TriggerByName (
        /*[in]*/ int LayerNo,
        /*[in]*/ BSTR AnimationName ) = 0;
      virtual HRESULT __stdcall raw_TriggerObjectByName (
        /*[in]*/ BSTR ObjectName,
        /*[in]*/ int LayerNo,
        /*[in]*/ BSTR AnimationName,
        /*[in]*/ long bWithChildren ) = 0;
      virtual HRESULT __stdcall raw_GetPlayingScene (
        /*[in]*/ int LayerNo,
        /*[out,retval]*/ struct IKAScene * * IScene ) = 0;
      virtual HRESULT __stdcall raw_SavePreviewImage (
        /*[in]*/ BSTR ImagePathName,
        /*[in]*/ int Width,
        /*[in]*/ int Height ) = 0;
      virtual HRESULT __stdcall raw_SetScrollSpeed (
        /*[in]*/ int LayerNo,
        /*[in]*/ float Speed ) = 0;
      virtual HRESULT __stdcall raw_AdjustScrollSpeed (
        /*[in]*/ int LayerNo,
        /*[in]*/ float SpeedDelta ) = 0;
      virtual HRESULT __stdcall raw_ResumeBackground (
        int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_PlayDirect (
        /*[in]*/ int LayerNo,
        /*[in]*/ struct IKAScene * pScene ) = 0;
      virtual HRESULT __stdcall raw_CutIn (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_CutOut (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_ClearNextPreview (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_PlayRange (
        /*[in]*/ int LayerNo,
        /*[in]*/ int PlaybackRangeNo ) = 0;
      virtual HRESULT __stdcall raw_PlayInNextPreview (
        /*[in]*/ int LayerNo ) = 0;
      virtual HRESULT __stdcall raw_PlayOutNextPreview (
        /*[in]*/ int LayerNo ) = 0;
};

enum eKVideoFormat
{
    VIDEO_FORMAT_1080i_2500 = 0,
    VIDEO_FORMAT_1080i_2997 = 1,
    VIDEO_FORMAT_1080i_3000 = 2,
    VIDEO_FORMAT_720p_5994 = 3,
    VIDEO_FORMAT_720p_6000 = 4,
    VIDEO_FORMAT_1080psf_2398 = 5,
    VIDEO_FORMAT_1080psf_2400 = 6,
    VIDEO_FORMAT_1080p_2997 = 7,
    VIDEO_FORMAT_1080p_3000 = 8,
    VIDEO_FORMAT_1080p_2500 = 9,
    VIDEO_FORMAT_1080p_2398 = 10,
    VIDEO_FORMAT_1080p_2400 = 11,
    VIDEO_FORMAT_1080p_2K_2398 = 12,
    VIDEO_FORMAT_1080p_2K_2400 = 13,
    VIDEO_FORMAT_1080psf_2K_2398 = 14,
    VIDEO_FORMAT_1080psf_2K_2400 = 15,
    VIDEO_FORMAT_720p_5000 = 16,
    VIDEO_FORMAT_525_2997 = 17,
    VIDEO_FORMAT_625_2500 = 18,
    VIDEO_FORMAT_487_2997 = 19,
    VIDEO_FORMAT_1080p_50 = 20,
    VIDEO_FORMAT_1080p_5994 = 21,
    VIDEO_FORMAT_2160p_2997 = 22,
    VIDEO_FORMAT_2160p_3000 = 23,
    VIDEO_FORMAT_2160p_5994 = 24,
    VIDEO_FORMAT_2160p_6000 = 25,
    VIDEO_FORMAT_2160p_2398 = 26,
    VIDEO_FORMAT_2160p_2400 = 27,
    VIDEO_FORMAT_2160p_2500 = 28,
    VIDEO_FORMAT_3840_1080i_2997 = 29,
    VIDEO_FORMAT_CUSTOM = 30,
    VIDEO_FORMAT_2160p_5000 = 31,
    VIDEO_FORMAT_COUNT = 32
};

struct __declspec(uuid("0078871c-2181-4339-8a75-3d08606a5f83"))
IKAEngine : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    long KTAPConnect (
        long bTCP,
        _bstr_t HostAddress,
        int nHostPort,
        int nClientPort,
        struct IKAEventHandler * pHandler );
    HRESULT Disconnect ( );
    IKAScenePlayerPtr GetScenePlayer ( );
    IKAScenePtr LoadScene (
        _bstr_t FileName,
        _bstr_t SceneName );
    HRESULT UnloadScene (
        _bstr_t SceneName );
    HRESULT LoadProject (
        _bstr_t FileName,
        _bstr_t AliasName );
    HRESULT BeginTransaction ( );
    HRESULT EndTransaction ( );
    HRESULT RollbackTransaction ( );
    unsigned long GetLastMessageNo ( );
    HRESULT HeartBeat ( );
    HRESULT UnloadAll ( );
    HRESULT SelectProject (
        _bstr_t AliasName );
    HRESULT CloseProject (
        _bstr_t AliasName );
    HRESULT SendMosMessage (
        _bstr_t MosMessage );
    HRESULT ReceiveFile (
        _bstr_t ExistingFileName,
        _bstr_t NewFileName );
    HRESULT NewProject (
        _bstr_t TitleName,
        _bstr_t AliasName );
    HRESULT PrepareItem (
        int LayerNo,
        _bstr_t AliasName,
        _bstr_t SceneName );
    HRESULT BeginUpdateItems (
        _bstr_t AliasName );
    HRESULT EndUpdateItems ( );
    HRESULT UpdateItems (
        _bstr_t SceneName,
        _bstr_t ScenePath );
    HRESULT StartVideoCapture (
        _bstr_t FilePath,
        int VideoCodecIndex );
    HRESULT StopVideoCapture ( );
    HRESULT CaptureImage (
        _bstr_t FilePath );
    HRESULT LoadStyleLibrarys (
        _bstr_t LibraryPath );
    HRESULT LoadAnimationLibrarys (
        _bstr_t LibraryPath );
    HRESULT LoadMaterialLibrarys (
        _bstr_t LibraryPath );
    HRESULT CheckVersion ( );
    IKAScenePtr LoadSceneForce (
        _bstr_t FileName,
        _bstr_t SceneName );
    HRESULT SetAudioOutput (
        enum eKPlayAudioType PlayAudioType );
    HRESULT SetTrialPlayMode ( );
    IKAScenePlayerPtr GetScenePlayerOnChannel (
        int OutputChannelIndex );
    HRESULT EndTransactionOnChannel (
        int OutputChannelIndex );
    struct sKVideoFormat GetVideoFormat (
        enum eKVideoFormat VideoFormatID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_KTAPConnect (
        /*[in]*/ long bTCP,
        /*[in]*/ BSTR HostAddress,
        /*[in]*/ int nHostPort,
        /*[in]*/ int nClientPort,
        /*[in]*/ struct IKAEventHandler * pHandler,
        /*[out,retval]*/ long * ret ) = 0;
      virtual HRESULT __stdcall raw_Disconnect ( ) = 0;
      virtual HRESULT __stdcall raw_GetScenePlayer (
        /*[out,retval]*/ struct IKAScenePlayer * * IScenePlayer ) = 0;
      virtual HRESULT __stdcall raw_LoadScene (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR SceneName,
        /*[out,retval]*/ struct IKAScene * * IScene ) = 0;
      virtual HRESULT __stdcall raw_UnloadScene (
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_LoadProject (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR AliasName ) = 0;
      virtual HRESULT __stdcall raw_BeginTransaction ( ) = 0;
      virtual HRESULT __stdcall raw_EndTransaction ( ) = 0;
      virtual HRESULT __stdcall raw_RollbackTransaction ( ) = 0;
      virtual HRESULT __stdcall raw_GetLastMessageNo (
        /*[out,retval]*/ unsigned long * pMessageNo ) = 0;
      virtual HRESULT __stdcall raw_HeartBeat ( ) = 0;
      virtual HRESULT __stdcall raw_UnloadAll ( ) = 0;
      virtual HRESULT __stdcall raw_SelectProject (
        /*[in]*/ BSTR AliasName ) = 0;
      virtual HRESULT __stdcall raw_CloseProject (
        /*[in]*/ BSTR AliasName ) = 0;
      virtual HRESULT __stdcall raw_SendMosMessage (
        /*[in]*/ BSTR MosMessage ) = 0;
      virtual HRESULT __stdcall raw_ReceiveFile (
        /*[in]*/ BSTR ExistingFileName,
        /*[in]*/ BSTR NewFileName ) = 0;
      virtual HRESULT __stdcall raw_NewProject (
        /*[in]*/ BSTR TitleName,
        /*[in]*/ BSTR AliasName ) = 0;
      virtual HRESULT __stdcall raw_PrepareItem (
        /*[in]*/ int LayerNo,
        /*[in]*/ BSTR AliasName,
        /*[in]*/ BSTR SceneName ) = 0;
      virtual HRESULT __stdcall raw_BeginUpdateItems (
        /*[in]*/ BSTR AliasName ) = 0;
      virtual HRESULT __stdcall raw_EndUpdateItems ( ) = 0;
      virtual HRESULT __stdcall raw_UpdateItems (
        /*[in]*/ BSTR SceneName,
        /*[in]*/ BSTR ScenePath ) = 0;
      virtual HRESULT __stdcall raw_StartVideoCapture (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ int VideoCodecIndex ) = 0;
      virtual HRESULT __stdcall raw_StopVideoCapture ( ) = 0;
      virtual HRESULT __stdcall raw_CaptureImage (
        /*[in]*/ BSTR FilePath ) = 0;
      virtual HRESULT __stdcall raw_LoadStyleLibrarys (
        /*[in]*/ BSTR LibraryPath ) = 0;
      virtual HRESULT __stdcall raw_LoadAnimationLibrarys (
        /*[in]*/ BSTR LibraryPath ) = 0;
      virtual HRESULT __stdcall raw_LoadMaterialLibrarys (
        /*[in]*/ BSTR LibraryPath ) = 0;
      virtual HRESULT __stdcall raw_CheckVersion ( ) = 0;
      virtual HRESULT __stdcall raw_LoadSceneForce (
        /*[in]*/ BSTR FileName,
        /*[in]*/ BSTR SceneName,
        /*[out,retval]*/ struct IKAScene * * IScene ) = 0;
      virtual HRESULT __stdcall raw_SetAudioOutput (
        /*[in]*/ enum eKPlayAudioType PlayAudioType ) = 0;
      virtual HRESULT __stdcall raw_SetTrialPlayMode ( ) = 0;
      virtual HRESULT __stdcall raw_GetScenePlayerOnChannel (
        /*[in]*/ int OutputChannelIndex,
        /*[out,retval]*/ struct IKAScenePlayer * * IScenePlayer ) = 0;
      virtual HRESULT __stdcall raw_EndTransactionOnChannel (
        /*[in]*/ int OutputChannelIndex ) = 0;
      virtual HRESULT __stdcall raw_GetVideoFormat (
        /*[in]*/ enum eKVideoFormat VideoFormatID,
        /*[out,retval]*/ struct sKVideoFormat * VideoFormat ) = 0;
};

struct __declspec(uuid("39828c77-eff0-4e59-979b-8673c028c718"))
KAEventHandler;
    // [ default ] interface IKAEventHandler

struct __declspec(uuid("3827312b-6ce7-48ea-89b0-90493345aa53"))
KAScene;
    // [ default ] interface IKAScene

struct __declspec(uuid("599f7ed4-55c9-4c4d-9964-4a94e227dcde"))
KAScenePlayer;
    // [ default ] interface IKAScenePlayer

struct __declspec(uuid("3edca029-cf4f-4e02-8fce-4b8ed0de3e8f"))
KAObject;
    // [ default ] interface IKAObject

struct __declspec(uuid("e6ded751-292a-4c69-be45-429e1400bd21"))
KAMaterial;
    // [ default ] interface IKAMaterial

struct __declspec(uuid("b706dd4e-f77b-40e6-bbac-b705230f6036"))
KATexture;
    // [ default ] interface IKATexture

struct __declspec(uuid("2b2cfec9-359f-42ec-935d-04942b445a0f"))
KAStruct;
    // [ default ] interface IKAStruct

struct __declspec(uuid("7e92987a-07fb-45d3-906d-1c112b3db64d"))
IKAStruct : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    struct sKEffectWipe GetStructOfEffectWipe ( );
    struct sKEffectPush GetStructOfEffectPush ( );
    struct sKEffectTransform GetStructOfEffectTransform ( );
    struct sKEffectCurl GetStructOfEffectCurl ( );
    struct sKEffectRipple GetStructOfEffectRipple ( );
    struct sKEffectParticle GetStructOfEffectParticle ( );
    struct sKEffectFade GetStructOfEffectFade ( );
    struct sKEffectDistortion GetStructOfEffectDistortion ( );
    struct sKEffectBlink GetStructOfEffectBlink ( );
    struct sKEffectCrop GetStructOfEffectCrop ( );
    struct sKEffectBlur GetStructOfEffectBlur ( );
    struct sKEffectColor GetStructOfEffectColor ( );
    struct sKEffectSidefade GetStructOfEffectSidefade ( );
    struct sKEffectCutOut GetStructOfEffectCutOut ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetStructOfEffectWipe (
        /*[out,retval]*/ struct sKEffectWipe * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectPush (
        /*[out,retval]*/ struct sKEffectPush * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectTransform (
        /*[out,retval]*/ struct sKEffectTransform * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectCurl (
        /*[out,retval]*/ struct sKEffectCurl * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectRipple (
        /*[out,retval]*/ struct sKEffectRipple * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectParticle (
        /*[out,retval]*/ struct sKEffectParticle * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectFade (
        /*[out,retval]*/ struct sKEffectFade * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectDistortion (
        /*[out,retval]*/ struct sKEffectDistortion * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectBlink (
        /*[out,retval]*/ struct sKEffectBlink * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectCrop (
        /*[out,retval]*/ struct sKEffectCrop * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectBlur (
        /*[out,retval]*/ struct sKEffectBlur * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectColor (
        /*[out,retval]*/ struct sKEffectColor * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectSidefade (
        /*[out,retval]*/ struct sKEffectSidefade * pKEffect ) = 0;
      virtual HRESULT __stdcall raw_GetStructOfEffectCutOut (
        /*[out,retval]*/ struct sKEffectCutOut * pKEffect ) = 0;
};

struct __declspec(uuid("9d6126b3-b521-4fb3-8c89-ed3c5198d355"))
KAEffect;
    // [ default ] interface IKAEffect

struct __declspec(uuid("44846521-6bbc-42ba-a373-fd108724964e"))
KACamera;
    // [ default ] interface IKACamera

//
// Wrapper method implementations
//

#include "c:\k3dasyncengine\sample\c++\k3dasyncengineexample\debug\k3dasyncengine.tli"

} // namespace K3DAsyncEngineLib

#pragma pack(pop)
