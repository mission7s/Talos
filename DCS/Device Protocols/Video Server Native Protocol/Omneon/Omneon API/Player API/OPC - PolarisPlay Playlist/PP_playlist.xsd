<?xml version="1.0" encoding="UTF-8"?>
<!-- Playout Engine schema for playlists and as-run logs -->

<xsd:schema targetNamespace="http://www.harmonicinc.com/spectrum/icpPlayoutEnginePlaylist" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.harmonicinc.com/spectrum/icpPlayoutEnginePlaylist" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ipe="http://www.harmonicinc.com/spectrum/icpPlayoutEnginePlaylist" version="1.5">
    <xsd:annotation>
        <xsd:documentation>
          Changes from v1.5:
          - added frameDateTime2 type
          - added optional DelaySchedule element
          - added Delay to eventOriginType
          - Traffic is default for eventOrigin attribute
        </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType name="schemaVersionAttribute">
        <xsd:annotation>
            <xsd:documentation>
                First made required for v1.2.  If not specified then we assume a 1.1 schema.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="1.6"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:element name="Schedule">
        <xsd:annotation>
            <xsd:documentation>The root for schedules and as-runs.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence maxOccurs="1" minOccurs="1">
                <xsd:sequence>
                  <xsd:annotation>
                    <xsd:documentation>
                If present then this schedule was generated by a delay mode channel.
                    </xsd:documentation>
                  </xsd:annotation>
                  <xsd:element name="DelaySchedule" minOccurs="0" maxOccurs="1">
                        <xsd:complexType>
                            <xsd:attribute name="delayChannelDelay" type="ipe:frameDuration">
                                <xsd:annotation>
                                    <xsd:documentation>
                The delay time of the channel.  Recorded material is played out after this delay.
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="delayClipDuration" type="ipe:frameDuration">
                                <xsd:annotation>
                                    <xsd:documentation>
                Each delayed clip will be this duration.
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="delayEndTime" type="ipe:frameDateTime2">
                                <xsd:annotation>
                                    <xsd:documentation>
                The end time of the delay channel.  This may be a valid DateTime at which time
                the playout will end, or it can be unknown ("??????????????????????") or absent
                if no end time has been specified.
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="delayMaxIndex" type="xsd:unsignedShort">
                                <xsd:annotation>
                                    <xsd:documentation>
                Generated clip names will be of the form [delayChanName]_[index] where index
                ranges from 0 to delayMaxIndex.  When delayMaxIndex is reached index will
                wrap back to 0.
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="delayNextIndex" type="xsd:unsignedShort">
                                <xsd:annotation>
                                    <xsd:documentation>
                Generated clip names will be of the form [delayChanName]_[index] where index
                ranges from 0 to delayMaxIndex.  delayNextIndex is the first index to use in
                the next schedule.
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="delayNextStart" type="ipe:frameDateTime">
                                <xsd:annotation>
                                    <xsd:documentation>
                This is the time that the subsequent schedule should begin.
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:attribute>
                            
                            <xsd:attribute name="delayStartTime" type="ipe:frameDateTime">
                                <xsd:annotation>
                                    <xsd:documentation>
                This is the start time (FrameDate) of this delay schedule.
                                    </xsd:documentation>
                                </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="enableMF" type="xsd:boolean">
                              <xsd:annotation>
                                <xsd:documentation>
                Flag indicates whether the delay channel uses MediaFetch for this schedule.
                                </xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:sequence>
                <xsd:sequence>
                    <xsd:annotation>
                        <xsd:documentation>
                        The type of schedule:
                          Primary   - A playlist that is intended to be loaded by the Playout Engine.
                          AsRun     - The as-run log produced by the Playout Engine.
                          Alternate - A playlist that is not intended to be loaded by the Playout
                                      Engine without manual intervention.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:choice>
                        <xsd:element name="Primary" type="ipe:primarySchedType"/>
                        <xsd:element name="Alternate" type="ipe:primarySchedType"/>
                        <xsd:element name="AsRun" type="ipe:asRunSchedType"/>
                    </xsd:choice>
                </xsd:sequence>
            </xsd:sequence>
            <xsd:attribute name="actualLoopCount" use="optional" default="0">
                <xsd:simpleType>
                    <xsd:annotation>
                        <xsd:documentation>
                        Indicates the loop count at the time the schedule completes
                        airing (as-run use only).  This value reflects any edits the
                        operator has made.  May either be a positive integer
                        value &gt; 1, or the special token "Forever".
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:restriction base="xsd:token">
                        <xsd:pattern value="([0-9]{1,15})|(Forever)"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="channel" type="xsd:string" use="required"/>
            <xsd:attribute name="frameRate" type="ipe:frameRate" use="required"/>
            <xsd:attribute name="internalUseDefaults" type="xsd:boolean" use="optional" default="false">
                <xsd:annotation>
                    <xsd:documentation>
                    This attribute is only used by traffic to send updates to the event list.  If
                    true then schedule data is ignored and warnings are suppressed.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="loopCount" use="optional" default="0">
                <xsd:simpleType>
                    <xsd:annotation>
                        <xsd:documentation>
                        If present, defines the number of times this schedule should
                        be looped or repeated. May either be a positive integer
                        value &gt; 1, or the special token "Forever".  This attribute
                        indicates the loop count specified in the original schedule.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:restriction base="xsd:token">
                        <xsd:pattern value="([0-9]{1,15})|(Forever)"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="scheduleEnd" type="ipe:dateTime" use="optional"/>
            <xsd:attribute name="scheduleId" type="ipe:uuid" use="optional"/>
            <xsd:attribute name="scheduleName" type="xsd:string" use="required"/>
            <xsd:attribute name="scheduleStart" type="ipe:dateTime" use="required"/>
            <xsd:attribute name="schemaVersion" type="ipe:schemaVersionAttribute" use="required"/>
        </xsd:complexType>
    </xsd:element>
    <xsd:simpleType name="afdType">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the AFD value to use for video material. Allowed values are
                "2.x", "3.x", "4.x", "8.x", "9.x", "10.x", "11.x", "13.x", "14.x", "15.x".
                If this attribute is omitted, or the value is empty (""), or blank (" ")
                the AFD value will not be modified.
                The "x" is set to "0" for 4:3 frame or "1" for 16:9 frame (e.g. "8.1").
                This applies to a Player source only.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="( |2[.][0-1]|3[.][0-1]|4[.][0-1]|8[.][0-1]|9[.][0-1]|10[.][0-1]|11[.][0-1]|13[.][0-1]|14[.][0-1]|15[.][0-1])?"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="arcType">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the ARC mode for video material. This applies to Player
                and External sources, but is not valid for the Color Generator source.
                If the ARC mode is ommited or blank, the default ARC mode is used.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Default"/>
            <xsd:enumeration value="Pillarbox"/>
            <xsd:enumeration value="Crop"/>
            <xsd:enumeration value="Letterbox"/>
            <xsd:enumeration value="Full"/>
            <xsd:enumeration value="Anamorphic"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="audioProfileIndex">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the audio profile to use for video material, "1" to "8". The value "0"
                is used to specify the default profile that will be or was used. If the profile
                is ommited or blank, the default profile is used.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:int">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="8"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="dateTime">
        <xsd:annotation>
            <xsd:documentation>
                A date-time value with 1 second resolution in UTC
                formatted as "yyyy-mm-ddThh:mm:ssZ". This is the canonical
                form for an xs:dateTime value with 1 second resolution
                with a known time-zone. All ipe:dateTime
                representations are also valid xs:dateTime
                representations of the equivalent value.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:dateTime">
            <xsd:pattern value="\d{4}\-((0[1-9])|(1[0-2]))\-((0[1-9])|([1-2][0-9])|(3[0-1]))T(([0-1][0-9])|([2][0-3])):[0-5][0-9]:[0-5][0-9]Z"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="eventOriginType">
        <xsd:annotation>
            <xsd:documentation>
                Indicates the source of an event. It will be ignored
                when reading playlists, but set in as-run logs:
                Traffic - The event was created by loading a playlist file
                Operator - The event was manually created using an editing API
                Automation - The event was automatically created by the Playout Engine
                Looping - The event was copied from another event to implement
                          looping of a schedule.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Traffic"/>
            <xsd:enumeration value="Operator"/>
            <xsd:enumeration value="Automation"/>
            <xsd:enumeration value="Looping"/>
            <xsd:enumeration value="Delay"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="eventStatusType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MissingMedia"/>
            <xsd:enumeration value="AiredOk"/>
            <xsd:enumeration value="TechnicalDifficulty"/>
            <xsd:enumeration value="DidNotAir"/>
            <xsd:enumeration value="Skipped"/>
            <xsd:enumeration value="Dropped"/>
            <xsd:enumeration value="DurationDiscrepancy"/>
            <xsd:enumeration value="ContentDiscrepancy"/>
            <xsd:enumeration value="Preempted"/>
            <xsd:enumeration value="JoinedInProgress"/>
            <xsd:enumeration value="Unknown"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="frameDateTime">
        <xsd:annotation>
            <xsd:documentation>
                A time-stamp with resolution of one frame
                consisting of a date (with respect to UTC) and a timecode value
                specifying the number of frames since midnight UTC:
                "yyyy-mm-dd hh:mm:sspff" where p = [.:] indicates
                non drop frame (25 fps base) and p = [,;] indicates drop frame (29.97 fps base).
                On input, the base frame rate (25 or 29.97 fps) will be
                determined implicitly from the channel configuration (that is,
                the punctuation character p will be ignored), but on output p will
                be set accordingly as ':' or ';'). SMPTE-258M section 8 field
                indications will be allowed on input, but won't signify anything:
                '.' and ':' will both mean non-drop frame, ',' and ';' will
                both mean drop frame). On input with drop frame timecode, the
                illegal timecode values corresponding to the dropped frames
                xx:xy:00;00 and xx:xy:00;01 (with y = [1-9]) will be
                treated as aliases for the next valid timecode value (xx:xy:00;02).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="(\d{4}\-((0[1-9])|(1[0-2]))\-((0[1-9])|([1-2][0-9])|(3[0-1])) (([0-1][0-9])|([2][0-3])):[0-5][0-9]:[0-5][0-9](([.,])|([:;]))[0-2][0-9])?"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="frameDateTime2">
        <xsd:annotation>
            <xsd:documentation>
                A time-stamp with resolution of one frame
                consisting of a date (with respect to UTC) and a timecode value
                specifying the number of frames since midnight UTC:
                "yyyy-mm-dd hh:mm:sspff" where p = [.:] indicates
                non drop frame (25 fps base) and p = [,;] indicates drop frame (29.97 fps base).
                On input, the base frame rate (25 or 29.97 fps) will be
                determined implicitly from the channel configuration (that is,
                the punctuation character p will be ignored), but on output p will
                be set accordingly as ':' or ';'). SMPTE-258M section 8 field
                indications will be allowed on input, but won't signify anything:
                '.' and ':' will both mean non-drop frame, ',' and ';' will
                both mean drop frame). On input with drop frame timecode, the
                illegal timecode values corresponding to the dropped frames
                xx:xy:00;00 and xx:xy:00;01 (with y = [1-9]) will be
                treated as aliases for the next valid timecode value (xx:xy:00;02).
                The time-stamp may also be unknown ("??????????????????????").
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="((\d{4}\-((0[1-9])|(1[0-2]))\-((0[1-9])|([1-2][0-9])|(3[0-1])) (([0-1][0-9])|([2][0-3])):[0-5][0-9]:[0-5][0-9](([.,])|([:;]))[0-2][0-9])|(\?{22}))?"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="frameDuration">
        <xsd:annotation>
            <xsd:documentation>
                A duration with a with resolution of one frame expressed
                as a SMPTE timecode value. However, the hours portion is
                permitted to be up to 99 rather than restricted to 00
                through 23.
                An empty string will indicate an unknown value.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="([0-9]{2}:[0-5][0-9]:[0-5][0-9](([.,])|([:;]))[0-2][0-9])?"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="frameOffset">
        <xsd:annotation>
            <xsd:documentation>
                An offset in frames. Similar to frameDuration,
                but also allows negative values.
                Negative values are earlier than the reference point,
                positive values later.
                An empty value indicates an unknown/unspecified offset.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="((\+|\-)?[0-9]{2}:[0-5][0-9]:[0-5][0-9](([.,])|([:;]))[0-2][0-9])?"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="frameRate">
        <xsd:annotation>
            <xsd:documentation>
                The frame rate to be used in interpreting associated
                frameDuration and frameDateTime timecode values within
                a schedule.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:decimal">
            <xsd:enumeration value="25"/>
            <xsd:enumeration value="29.97"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="gpoAction">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Assert"/>
            <xsd:enumeration value="Deassert"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="graphicsFadeRate">
        <xsd:annotation>
            <xsd:documentation>
                Used for specifying a fade rate for fading graphics layer transparancy.
                A blank value will be mapped to a configured default value (matching
                one of the explicit values).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value=""/>
            <xsd:enumeration value="Slow"/>
            <xsd:enumeration value="Medium"/>
            <xsd:enumeration value="Fast"/>
            <xsd:enumeration value="Cut"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="graphicsLayerIndex">
        <xsd:annotation>
            <xsd:documentation>
                The graphics layer, 1-8. An empty string is written to the as-run log if
                the layer number is invalid.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:int">
            <xsd:minInclusive value="1"/>
            <xsd:maxInclusive value="8"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="primaryEndModeType">
        <xsd:annotation>
            <xsd:documentation>
                How the end time of an event is determined:
                Blank - alias for Duration
                Duration - Event ends when after the specified duration
                Manual - Event ends when manually triggered by an operator
                External - Event ends in response to an external signal (e.g. GPI)
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value=""/>
            <xsd:enumeration value="Duration"/>
            <xsd:enumeration value="Manual"/>
            <xsd:enumeration value="External"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="primaryStartModeType">
        <xsd:annotation>
            <xsd:documentation>
                How the start time of an event is determined:
                Blank - alias for Follow
                Fixed - Event starts at the specified start time
                Manual - Event starts when manually triggered by an operator
                Follow - Event starts when previous event ends
                External - Event starts in response to an external signal (e.g. GPI)
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value=""/>
            <xsd:enumeration value="Fixed"/>
            <xsd:enumeration value="Manual"/>
            <xsd:enumeration value="External"/>
            <xsd:enumeration value="Follow"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:complexType name="programHeaderType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="ProgramName" type="xsd:string" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAttributes"/>
        <xsd:attributeGroup ref="ipe:headerStartTimeAttributes"/>
    </xsd:complexType>
    <xsd:complexType name="programHeaderAsRunType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="ProgramName" type="xsd:string" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:headerStartTimeAttributes"/>
    </xsd:complexType>
    <xsd:simpleType name="secondaryStartModeType">
        <xsd:annotation>
            <xsd:documentation>Manual is for future use.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="OffsetFromStart"/>
            <xsd:enumeration value="OffsetFromEnd"/>
            <xsd:enumeration value="Manual"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="secondaryEndModeType">
        <xsd:annotation>
            <xsd:documentation>Manual is for future use.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Duration"/>
            <xsd:enumeration value="OffsetFromStart"/>
            <xsd:enumeration value="OffsetFromEnd"/>
            <xsd:enumeration value="Manual"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="segmentType">
        <xsd:annotation>
            <xsd:documentation>
                Indicates the segment for multisegmented material.
                Blank or "S" denotes single segment (default if
                omitted), while a numeric value indicates the
                segment number.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="()|(S)|([1-9]\d*)"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="somValue">
        <xsd:annotation>
            <xsd:documentation>
                This is intended for specifying the SOM (start of material)
                point of a clip. There are three valid forms:
                Blank ("") - to use the default SOM (defaultIn) for the clip.
                A timecode value ("hh:mm:ss:ff") - to use the frame associated
                with the specified timecode value as the SOM (note: the
                range of valid timecode values will depend on the material).
                A timecode offset (a timecode value preceded by '+' or '-') to
                adjust the default SOM by the specified offset (addition/subtraction
                performed modulo 24 hours).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:minLength value="0"/>
            <xsd:maxLength value="12"/>
            <xsd:pattern value="((\+|\-)?(([0-1][0-9])|([2][0-3])):[0-5][0-9]:[0-5][0-9](([.,])|([:;]))[0-2][0-9])?"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="sourceType">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the source for video material:
                an internal spectrum player, external SDI feed, or color field generator.
                The allowed source names depends on the channel configuration.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value=""/>
            <xsd:enumeration value="Player"/>
            <xsd:enumeration value="Player A"/>
            <xsd:enumeration value="Player B"/>
            <xsd:enumeration value="External In"/>
            <xsd:enumeration value="External In 1"/>
            <xsd:enumeration value="External In 2"/>
            <xsd:enumeration value="External In 3"/>
            <xsd:enumeration value="External In 4"/>
            <xsd:enumeration value="External In 5"/>
            <xsd:enumeration value="External In 6"/>
            <xsd:enumeration value="Color Generator"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="subtitleIndex">
        <xsd:annotation>
            <xsd:documentation>
                Specifies the subtitle language index, "1" to "20".
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:int">
            <xsd:minInclusive value="1"/>
            <xsd:maxInclusive value="20"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="textBoxNumber">
        <xsd:restriction base="xsd:int">
            <xsd:minInclusive value="0"/>
            <xsd:maxInclusive value="254"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="uuid">
        <xsd:annotation>
            <xsd:documentation>
                A universally unique identifier, as described by RFC 4122.
                This representation is easily convertible to the bxf:Uuid type
                (it is identical except that it omits the explicit prefix "urn:uuid:").
                Note: On input, an empty or missing value will cause a new
                UUID value to be generated.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:length value="36"/>
            <xsd:pattern value="[a-fA-F0-9]{8}(\-[a-fA-F0-9]{4}){3}\-[a-fA-F0-9]{12}"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:attributeGroup name="commonGpoSecondaryAttributes">
        <xsd:attribute name="gpoName" type="xsd:string" use="required"/>
        <xsd:attribute name="gpoAction" type="ipe:gpoAction" use="required"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="commonGraphicsSecondaryEventAttributes">
        <xsd:attribute name="layer" type="ipe:graphicsLayerIndex" use="required"/>
        <xsd:attribute name="templateName" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    Name of graphics template.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="stopAnimationLeadTime" type="ipe:frameDuration" use="optional"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="commonPlayerSecondaryEventAttributes">
        <xsd:attribute name="layer" type="ipe:graphicsLayerIndex" use="required"/>
        <xsd:attribute name="source" type="ipe:sourceType" use="required"/>
        <xsd:attribute name="materialId" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    A string identifying the video material. This is the video clip name.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="som" type="ipe:somValue" use="optional"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="commonPrimaryEventAttributes">
        <xsd:attribute name="scheduledStart" type="ipe:frameDateTime" use="required"/>
        <xsd:attribute name="scheduledDuration" type="ipe:frameDuration" use="required"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="durationAttributes">
        <xsd:attribute name="scheduledDuration" type="ipe:frameDuration" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    In playlists, the intended duration.
                    In as-run logs, the duration specified when the playlist was loaded.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="actualDuration" type="ipe:frameDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    In playlists, this will be ignored.
                    In as-run logs, this is the as-aired duration of the item.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="eventIdentityAttributes">
        <xsd:attribute name="eventUuid" type="ipe:uuid" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    A UUID associated with this event.
                    If not supplied on input, a UUID will be generated
                    by the Playout Engine.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="sequenceId" type="xsd:int" use="optional" default="0">
            <xsd:annotation>
                <xsd:documentation>
                    An optional integer value associated
                    with the event. This value is not used by the Playout
                    Engine, but will be preserved in the as-run log
                    if present.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="eventOrigin" type="ipe:eventOriginType" use="optional" default="Traffic"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="eventIdentityAsRunAttributes">
        <xsd:attribute name="eventUuid" type="ipe:uuid" use="required"/>
        <xsd:attribute name="sequenceId" type="xsd:int" use="required"/>
        <xsd:attribute name="eventOrigin" type="ipe:eventOriginType" use="required"/>
        <xsd:attribute name="repeatOfEvent" type="ipe:uuid" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    The repeatOfEvent attribute should only appear in events in
                    as-run logs of schedules that used the loopCount attribute
                    to specify that the schedule should be repeated.
                    When eventOrigin="Looping", repeatOfEvent will give the
                    value of the eventUuid attribute of the event this
                    event was copied from (since the copied event will have
                    its own unique eventUuid value assigned).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="headerStartTimeAttributes">
        <xsd:attribute name="scheduledStart" type="ipe:frameDateTime" use="optional"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="internalDurationAttribute">
        <xsd:attribute name="internalDuration" type="ipe:frameDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    This attribute is only used by the Playout Engine for persisting a loaded playlist.
                    If present it will preload the event's m_duration member.
                    It should not be used in externally generated playlists.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="internalEventStatusAttribute">
        <xsd:attribute name="internalEventStatus" type="ipe:eventStatusType" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    This attribute is only used by the Playout Engine for persisting a loaded playlist.
                    It should not be used in externally generated playlists.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="internalStartAttribute">
        <xsd:attribute name="internalStart" type="ipe:frameDateTime" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    This attribute is only used by the Playout Engine for persisting a loaded playlist.
                    If present it will preload the event's m_startTime member.
                    It should not be used in externally generated playlists.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="internalDummyPrimaryAttribute">
        <xsd:attribute name="internalDummyPrimary" type="xsd:boolean" use="optional" default="false">
            <xsd:annotation>
                <xsd:documentation>
                    This attribute is only used by traffic to send updates to secondaries when
                    the primary event is unknown/unspecified.  If true then the primary event data
                    (including the event ID) should be ignored.  The primary event serves simply as
                    a container in order to use the existing playlist parser.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="primaryControlAttributes">
        <xsd:attribute name="transition" type="xsd:string" use="optional" default="Cut">
            <xsd:annotation>
                <xsd:documentation>
                    The transition type name. The name is a reference to a
                    transition described in a configuration table
                    (so the list of acceptable values will depend on Playout
                    Engine configuration).
                    If blank or omitted, will default to "Cut".
                    The value "Cut" will always be accepted.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="startMode" type="ipe:primaryStartModeType" use="optional" default="Follow"/>
        <xsd:attribute name="endMode" type="ipe:primaryEndModeType" use="optional" default="Duration"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="secondaryEndAttributes">
        <xsd:attribute name="endMode" type="ipe:secondaryEndModeType" use="optional" default="OffsetFromEnd"/>
        <xsd:attribute name="duration" type="ipe:frameDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                A missing duration will be interpreted as Unknown.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="endOffset" type="ipe:frameOffset" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                A missing endOffset will be interpreted as Unknown.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="secondaryEndAsRunAttributes">
        <xsd:attribute name="endMode" type="ipe:secondaryEndModeType" use="required"/>
        <xsd:attribute name="duration" type="ipe:frameDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                A missing duration will be interpreted as Unknown.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="endOffset" type="ipe:frameOffset" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                A missing endOffset will be interpreted as Unknown.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="actualDuration" type="ipe:frameDuration" use="required"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="secondarySchedTimingAsRunAttributes">
        <xsd:attribute name="scheduledStart" type="ipe:frameDateTime" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Required for as-run logs.  The computed start time when the event was loaded/inserted.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="scheduledDuration" type="ipe:frameDuration" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Required for as-run logs.  The computed duration when the event was loaded/inserted.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="secondaryStartAttributes">
        <xsd:attribute name="startMode" type="ipe:secondaryStartModeType" use="optional" default="OffsetFromStart"/>
        <xsd:attribute name="startOffset" type="ipe:frameOffset" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                A missing startOffset will be interpreted as Unknown.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="secondaryStartAsRunAttributes">
        <xsd:attribute name="startMode" type="ipe:secondaryStartModeType" use="required"/>
        <xsd:attribute name="startOffset" type="ipe:frameOffset" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                A missing startOffset will be interpreted as Unknown.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="actualStart" type="ipe:frameDateTime" use="required"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="startTimeAttributes">
        <xsd:attribute name="scheduledStart" type="ipe:frameDateTime" use="required"/>
        <xsd:attribute name="actualStart" type="ipe:frameDateTime" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                In playlists, this will be ignored.
                In as-run logs, this is the as-aired start time of the item.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="statusStartTimeAttributes">
        <xsd:attribute name="actualStart" type="ipe:frameDateTime" use="required"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="videoClipAttributes">
        <xsd:attribute name="materialType" type="xsd:string" use="optional" default="Program">
            <xsd:annotation>
                <xsd:documentation>
                    The name of the material type (e.g. "Program", "Commercial",
                    "PSA", "Promo", "Station ID", etc.).
                    The set of allowed values will be determined by local
                    configuration. The material type "Program" is always valid.
                    And empty/blank value is also valid and will be treated as
                    an unknown material type.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="title" type="xsd:string" use="optional"/>
        <xsd:attribute name="segment" type="ipe:segmentType" use="optional"/>
        <xsd:attribute name="source" type="ipe:sourceType" use="optional" default="Player"/>
        <xsd:attribute name="materialId" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    A string identifying the video material.
                    For an item with a Player source this is the video clip name.
                    For an item with Color Generator source this is the color to be
                    used (either a CSS3 color name, or a CSS style hex RGB value:
                    #87CEFA).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="som" type="ipe:somValue" use="optional"/>
        <xsd:attribute name="contentRating" type="xsd:string" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    A name referencing a table of configured
                    content rating values.
                    The set of allowed values will be determined by local configuration.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="arcMode" type="ipe:arcType" use="optional" default="Default"/>
        <xsd:attribute name="audioProfile" type="ipe:audioProfileIndex" use="optional" default="0"/>
        <xsd:attribute name="afd" type="ipe:afdType" use="optional"/>
    </xsd:attributeGroup>
    <xsd:attributeGroup name="videoClipAsRunAttributes">
        <xsd:attribute name="materialType" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The name of the material type (e.g. "Program", "Commercial",
                    "PSA", "Promo", "Station ID", etc.).
                    The set of allowed values will be determined by local
                    configuration. The material type "Program" is always valid.
                    And empty/blank value is also valid, and will be treated like
                    a Program material type.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="title" type="xsd:string" use="required"/>
        <xsd:attribute name="segment" type="ipe:segmentType" use="required"/>
        <xsd:attribute name="source" type="ipe:sourceType" use="required"/>
        <xsd:attribute name="materialId" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    A string identifying the video material.
                    For an item with a Player source this is the video clip name.
                    For an item with Color Generator source this is the color to be
                    used (either a CSS3 color name, or a CSS style hex RGB value:
                    #87CEFA).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="som" type="ipe:somValue" use="required"/>
        <xsd:attribute name="contentRating" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    A name referencing a table of configured
                    content rating values.
                    The set of allowed values will be determined by local configuration.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="arcMode" type="ipe:arcType" use="required"/>
        <xsd:attribute name="audioProfile" type="ipe:audioProfileIndex" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    The audioProfile attribute will not be written to the as-run if
                    it is set to 0 (use configured default).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="afd" type="ipe:afdType" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    The afd attribute will not be written to the as-run if it is
                    set to "" (use default).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>
    <xsd:complexType name="asRunSchedType">
        <xsd:sequence maxOccurs="unbounded" minOccurs="0">
            <xsd:choice>
                <xsd:element name="CommentEvent" type="ipe:commentEventAsRunType"/>
                <xsd:element name="BreakHeader" type="ipe:breakHeaderAsRunType"/>
                <xsd:element name="ProgramHeader" type="ipe:programHeaderAsRunType"/>
                <xsd:element name="PrimaryEvent" type="ipe:primaryEventAsRunType"/>
                <xsd:element name="StatusEvent"  type="ipe:statusEventType">
                    <xsd:annotation>
                        <xsd:documentation>
                        StatusEvent elements are intended for insertion in as-runs
                        only and are ignored in schedules sent to OPC.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
            </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="loopIteration" type="xsd:nonNegativeInteger" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    Ignored in playlists. Only used in as-run logs when loopCount
                    was set to a value greater than 1 (or "Forever"). The value
                    of loopIteration increase by 1 (starting from 1) each time
                    the original schedule is repeated.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="breakHeaderType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="BreakDuration" type="ipe:frameDuration" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAttributes"/>
        <xsd:attributeGroup ref="ipe:headerStartTimeAttributes"/>
    </xsd:complexType>
    <xsd:complexType name="breakHeaderAsRunType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="BreakDuration" type="ipe:frameDuration" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:headerStartTimeAttributes"/>
    </xsd:complexType>
    <xsd:complexType name="commentEventType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAttributes"/>
    </xsd:complexType>
    <xsd:complexType name="commentEventAsRunType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAsRunAttributes"/>
    </xsd:complexType>
    <xsd:complexType name="primaryEventType">
        <xsd:sequence maxOccurs="1" minOccurs="1">
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="VideoMaterial" type="ipe:videoMaterialType" maxOccurs="1" minOccurs="1"/>
            <xsd:element name="SubtitleFiles" type="ipe:subtitleFileListType" maxOccurs="1" minOccurs="0"/>
            <xsd:choice maxOccurs="unbounded" minOccurs="0">
                <xsd:element name="GraphicsEvent" type="ipe:graphicsSecondaryType"/>
                <xsd:element name="CommentEvent" type="ipe:commentEventType"/>
                <xsd:element name="GpoEvent" type="ipe:gpoSecondaryType"/>
                <xsd:element name="PlayerEvent" type="ipe:playerSecondaryType"/>
            </xsd:choice>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAttributes"/>
        <xsd:attributeGroup ref="ipe:commonPrimaryEventAttributes"/>
        <xsd:attribute name="transition" type="xsd:string" use="optional" default="Cut">
            <xsd:annotation>
                <xsd:documentation>
                    The transition type name. The name is a reference to a
                    transition described in a configuration table
                    (so the list of acceptable values will depend on Playout
                    Engine configuration).
                    If blank or omitted, will default to "Cut".
                    The value "Cut" will always be accepted.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="startMode" type="ipe:primaryStartModeType" use="optional" default="Follow"/>
        <xsd:attribute name="endMode" type="ipe:primaryEndModeType" use="optional" default="Duration"/>
        <xsd:attributeGroup ref="ipe:internalStartAttribute"/>
        <xsd:attributeGroup ref="ipe:internalDurationAttribute"/>
        <xsd:attributeGroup ref="ipe:internalEventStatusAttribute"/>
        <xsd:attributeGroup ref="ipe:internalDummyPrimaryAttribute"/>
    </xsd:complexType>
    <xsd:complexType name="primaryEventAsRunType">
        <xsd:sequence maxOccurs="1" minOccurs="1">
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="VideoMaterial" type="ipe:videoMaterialAsRunType" maxOccurs="1" minOccurs="1"/>
            <xsd:element name="SubtitleFiles" type="ipe:subtitleFileListType" maxOccurs="1" minOccurs="0"/>
            <xsd:choice maxOccurs="unbounded" minOccurs="0">
                <xsd:element name="GraphicsEvent" type="ipe:graphicsSecondaryAsRunType"/>
                <xsd:element name="CommentEvent" type="ipe:commentEventAsRunType"/>
                <xsd:element name="GpoEvent" type="ipe:gpoSecondaryAsRunType"/>
                <xsd:element name="PlayerEvent" type="ipe:playerSecondaryAsRunType"/>
            </xsd:choice>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:commonPrimaryEventAttributes"/>
        <xsd:attribute name="transition" type="xsd:string" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    The transition type name. The name is a reference to a
                    transition described in a configuration table
                    (so the list of acceptable values will depend on Playout
                    Engine configuration).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="startMode" type="ipe:primaryStartModeType" use="required"/>
        <xsd:attribute name="endMode" type="ipe:primaryEndModeType" use="required"/>
        <xsd:attribute name="eventStatus" type="ipe:eventStatusType" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    Only the final eventStatus values  will be allowed (events in
                    the in memory playlist may have other values).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="actualStart" type="ipe:frameDateTime" use="required">
            <xsd:annotation>
                <xsd:documentation>
                This is the as-aired start time of the item.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="actualDuration" type="ipe:frameDuration" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    This is the as-aired duration of the item.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="primarySchedType">
        <xsd:sequence maxOccurs="unbounded" minOccurs="0">
            <xsd:choice>
                <xsd:element name="CommentEvent" type="ipe:commentEventType"/>
                <xsd:element name="BreakHeader" type="ipe:breakHeaderType"/>
                <xsd:element name="ProgramHeader" type="ipe:programHeaderType"/>
                <xsd:element name="PrimaryEvent" type="ipe:primaryEventType"/>
            </xsd:choice>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="graphicsTextType">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="offset" type="ipe:frameDuration" use="optional" default="00:00:00;00">
                    <xsd:annotation>
                        <xsd:documentation>
                        The offset is from the start of the graphics event.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="boxNumber" type="ipe:textBoxNumber" use="required"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
    <xsd:complexType name="graphicsTextAsRunType">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="offset" type="ipe:frameDuration" use="required"/>
                <xsd:attribute name="boxNumber" type="ipe:textBoxNumber" use="required"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
    <xsd:complexType name="graphicsSecondaryType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="GraphicsText" type="ipe:graphicsTextType" maxOccurs="255" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryStartAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryEndAttributes"/>
        <xsd:attributeGroup ref="ipe:commonGraphicsSecondaryEventAttributes"/>
        <xsd:attribute name="title" type="xsd:string" use="optional"/>
        <xsd:attribute name="fadeIn" type="ipe:graphicsFadeRate" use="optional" default=""/>
        <xsd:attribute name="fadeOut" type="ipe:graphicsFadeRate" use="optional" default=""/>
        <xsd:attribute name="audioProfile" type="ipe:audioProfileIndex" use="optional" default="0"/>
        <xsd:attributeGroup ref="ipe:internalEventStatusAttribute"/>
    </xsd:complexType>
    <xsd:complexType name="graphicsSecondaryAsRunType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="GraphicsText" type="ipe:graphicsTextAsRunType" maxOccurs="255" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:secondarySchedTimingAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryStartAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryEndAsRunAttributes"/>
        <xsd:attribute name="eventStatus" type="ipe:eventStatusType" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    Only the final eventStatus values will be allowed (events in the
                    in memory playlist may have other values).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attributeGroup ref="ipe:commonGraphicsSecondaryEventAttributes"/>
        <xsd:attribute name="title" type="xsd:string" use="required"/>
        <xsd:attribute name="fadeIn" type="ipe:graphicsFadeRate" use="required"/>
        <xsd:attribute name="fadeOut" type="ipe:graphicsFadeRate" use="required"/>
        <xsd:attribute name="audioProfile" type="ipe:audioProfileIndex" use="optional">
            <xsd:annotation>
                <xsd:documentation>
                    The audioProfile attribute will not be written to the as-run if
                    it is set to 0 (use configured default).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="gpoSecondaryType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryStartAttributes"/>
        <xsd:attribute name="title" type="xsd:string" use="optional"/>
        <xsd:attributeGroup ref="ipe:commonGpoSecondaryAttributes"/>
        <xsd:attributeGroup ref="ipe:internalEventStatusAttribute"/>
    </xsd:complexType>
    <xsd:complexType name="gpoSecondaryAsRunType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:secondarySchedTimingAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryStartAsRunAttributes"/>
        <xsd:attribute name="eventStatus" type="ipe:eventStatusType" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    Only the final eventStatus values will be allowed (events in the
                    in memory playlist may have other values).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="title" type="xsd:string" use="required"/>
        <xsd:attributeGroup ref="ipe:commonGpoSecondaryAttributes"/>
    </xsd:complexType>
    <xsd:complexType name="playerSecondaryType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryStartAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryEndAttributes"/>
        <xsd:attributeGroup ref="ipe:commonPlayerSecondaryEventAttributes"/>
        <xsd:attribute name="title" type="xsd:string" use="optional"/>
        <xsd:attributeGroup ref="ipe:internalEventStatusAttribute"/>
    </xsd:complexType>
    <xsd:complexType name="playerSecondaryAsRunType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:secondarySchedTimingAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryStartAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:secondaryEndAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:commonPlayerSecondaryEventAttributes"/>
        <xsd:attribute name="title" type="xsd:string" use="required"/>
        <xsd:attribute name="eventStatus" type="ipe:eventStatusType" use="required">
            <xsd:annotation>
                <xsd:documentation>
                    Only the final eventStatus values will be allowed (events in the
                    in memory playlist may have other values).
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>
    <xsd:complexType name="statusEventType">
        <xsd:sequence>
            <xsd:element name="Description" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="StatusMessage" type="xsd:string" maxOccurs="1" minOccurs="1"/>
        </xsd:sequence>
        <xsd:attributeGroup ref="ipe:eventIdentityAsRunAttributes"/>
        <xsd:attributeGroup ref="ipe:statusStartTimeAttributes"/>
    </xsd:complexType>
    <xsd:complexType name="subtitleFileListType">
        <xsd:sequence>
            <xsd:element name="OpenCaptionFile"  maxOccurs="1" minOccurs="0">
                <xsd:complexType>
                    <xsd:attribute name="file" type="xsd:string" use="required"/>
                </xsd:complexType>
            </xsd:element>
            <xsd:element name="SubtitleFile"  maxOccurs="20" minOccurs="0">
                <xsd:complexType>
                    <xsd:attribute name="index" type="ipe:subtitleIndex" use="required"/>
                    <xsd:attribute name="file" type="xsd:string" use="required"/>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="videoMaterialType">
        <xsd:attributeGroup ref="ipe:videoClipAttributes"/>
    </xsd:complexType>
    <xsd:complexType name="videoMaterialAsRunType">
        <xsd:attributeGroup ref="ipe:videoClipAsRunAttributes"/>
    </xsd:complexType>
</xsd:schema>

